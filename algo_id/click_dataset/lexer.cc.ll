; ModuleID = '../../click/lib/lexer.cc'
source_filename = "../../click/lib/lexer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
%class.Master = type opaque
%class.atomic_uint32_t = type { i32 }
%class.Vector = type { %class.vector_memory }
%class.vector_memory = type { %struct.char_array*, i32, i32 }
%struct.char_array = type { [8 x i8] }
%class.Vector.2 = type { %class.vector_memory.3 }
%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
%struct.char_array.4 = type { [4 x i8] }
%class.Vector.6 = type { %class.vector_memory.7 }
%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
%"struct.Router::element_landmark_t" = type { i32, %class.String }
%class.Vector.8 = type { %class.vector_memory.9 }
%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
%struct.char_array.10 = type { [16 x i8] }
%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
%class.Vector.12 = type { %class.vector_memory }
%class.String = type { %"struct.String::rep_t" }
%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
%class.HashMap_ArenaFactory = type opaque
%class.ThreadSched = type { i32 (...)** }
%class.NameInfo = type opaque
%class.Vector.5 = type { %class.vector_memory.3 }
%class.Vector.0 = type { %class.vector_memory.1 }
%class.vector_memory.1 = type { %class.String*, i32, i32 }
%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.Lexer::Compound" = type { %class.Element.base, %class.String, %class.String, i32, %class.VariableEnvironment, i32, i32, i32, i8, [3 x i8], %class.HashTable, %class.Vector.5, %class.Vector.0, %class.Vector.0, %class.Vector.0, %class.Vector.2, [2 x %class.Vector.5], i32, i32, %class.Vector.8 }
%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
%class.VariableEnvironment = type { %class.VariableExpander, %class.Vector.0, %class.Vector.0, i32, %class.VariableEnvironment* }
%class.VariableExpander = type { i32 (...)** }
%class.HashTable = type <{ %class.HashTable.13, i32, [4 x i8] }>
%class.HashTable.13 = type { %class.HashContainer, %class.SizedHashAllocator }
%class.HashContainer = type { %class.HashContainer_rep }
%class.HashContainer_rep = type { %"struct.HashTable<Pair<const String, int>, void>::elt"**, i32, i32, i64, %struct.libdivide_u32_t }
%"struct.HashTable<Pair<const String, int>, void>::elt" = type { %struct.Pair, %"struct.HashTable<Pair<const String, int>, void>::elt"* }
%struct.Pair = type <{ %class.String, i32, [4 x i8] }>
%struct.libdivide_u32_t = type { i32, i8 }
%class.SizedHashAllocator = type { %class.HashAllocator }
%class.HashAllocator = type { %"struct.HashAllocator::link"*, %"struct.HashAllocator::buffer"*, i64 }
%"struct.HashAllocator::link" = type { %"struct.HashAllocator::link"* }
%"struct.HashAllocator::buffer" = type { %"struct.HashAllocator::buffer"*, i64, i64 }
%"struct.Lexer::FileState" = type <{ %class.String, i8*, i8*, %class.String, %class.String, i32, [4 x i8] }>
%class.Lexer = type { i32 (...)**, %"struct.Lexer::FileState", i8, %class.LexerExtra*, [2 x %class.Lexeme], i32, [4 x i8], %class.HashTable, %class.Vector.14, i32, i32, %class.VariableEnvironment, %"class.Lexer::Compound"*, %"struct.Lexer::ParseState"*, i32, %class.Vector.16, i32, %class.Vector.0, %class.Vector.0, %class.ErrorHandler* }
%class.LexerExtra = type { i32 (...)** }
%class.Lexeme = type { i32, %class.String }
%class.Vector.14 = type { %class.vector_memory.15 }
%class.vector_memory.15 = type { %"struct.Lexer::ElementType"*, i32, i32 }
%"struct.Lexer::ElementType" = type <{ %class.Element* (i64)*, i64, %class.String, i32, [4 x i8] }>
%"struct.Lexer::ParseState" = type <{ i32, i32, %class.Vector.5, i32, [4 x i8], %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"*, i8, i8, i8, [5 x i8], %class.Vector.5, i32, [4 x i8], %class.String, %class.HashTable, %"class.Lexer::Compound"*, %"class.Lexer::Compound"*, %"class.Lexer::Compound"*, i32, [4 x i8], %"struct.Lexer::ParseState"*, i32, [4 x i8] }>
%"struct.Lexer::ElementState" = type { %class.String, i32, i32, i8, %class.String, %class.String, i32, %"struct.Lexer::ElementState"* }
%class.Vector.16 = type { %class.vector_memory }
%"struct.Router::Connection" = type { [2 x %"struct.Router::Port"] }
%"struct.Router::Port" = type { i32, i32 }
%class.Bitvector = type { i32, i32*, [2 x i32] }
%"class.Bitvector::Bit" = type <{ i32*, i32, [4 x i8] }>
%class.LandmarkErrorHandler = type { %class.ErrorVeneer, %class.String }
%class.ErrorVeneer = type { %class.ErrorHandler.base, %class.ErrorHandler* }
%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
%class.IntArg = type { i32, i32 }
%class.ContextErrorHandler = type <{ %class.ErrorVeneer, %class.String, %class.String, %class.String, i8, [7 x i8] }>
%class.StringAccum = type { %"struct.StringAccum::rep_t" }
%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
%"class.Lexer::TunnelEnd" = type { %"struct.Router::Port", %class.Vector.17, i8, i8, %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"* }
%class.Vector.17 = type { %class.vector_memory }
%class.HashTable_iterator = type { %class.HashTable_const_iterator }
%class.HashTable_const_iterator = type { %class.HashContainer_const_iterator }
%class.HashContainer_const_iterator = type { %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"**, i32, %class.HashContainer* }
%class.ErrorElement = type { %class.Element.base, [4 x i8] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%class.HashContainer_iterator = type { %class.HashContainer_const_iterator }
%class.NumArg = type { i8 }
%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
%"union.Packet::Anno" = type { [6 x i64] }
%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
%"union.Task::Status" = type { i32 }
%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.18, %class.Vector.19, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
%class.Vector.18 = type { %class.vector_memory.9 }
%class.Vector.19 = type { %class.vector_memory }
%class.SimpleSpinlock = type { i8 }
%class.Timestamp = type { %"union.Timestamp::rep_t" }
%"union.Timestamp::rep_t" = type { i64 }
%class.SelectSet = type { [2 x i32], i8, %class.Vector.20, %class.Vector.21 }
%class.Vector.20 = type { %class.vector_memory }
%class.Vector.21 = type { %class.vector_memory.22 }
%class.vector_memory.22 = type { %struct.char_array.23*, i32, i32 }
%struct.char_array.23 = type opaque
%class.Spinlock = type { i8 }
%class.SpinlockIRQ = type { i8 }
%"union.Task::Pending" = type { %class.Task* }
%class.Timer = type { i32, %class.Timestamp, %union.anon.24, i8*, %class.Element*, %class.RouterThread* }
%union.anon.24 = type { void (%class.Timer*, i8*)* }

$_ZN6StringC2ERKS_ = comdat any

$_ZN9HashTableI6StringiEC2ERKi = comdat any

$_ZN6VectorIiEC2Ev = comdat any

$_ZN6VectorI6StringEC2Ev = comdat any

$_ZN6VectorIjEC2Ev = comdat any

$_ZN6VectorIiED2Ev = comdat any

$_ZN6VectorIN6Router10ConnectionEEC2Ev = comdat any

$_ZN6VectorIjED2Ev = comdat any

$_ZN6VectorI6StringED2Ev = comdat any

$_ZN9HashTableI6StringiED2Ev = comdat any

$_ZN19VariableEnvironmentD2Ev = comdat any

$_ZN6StringD2Ev = comdat any

$_ZNK6StringcvMS_KFivEEv = comdat any

$_ZNK6String5c_strEv = comdat any

$_ZeqRK6StringPKc = comdat any

$_ZN6VectorIN6Router10ConnectionEE9push_backI13fast_argumentIS1_Lb1EEEENT_23enable_rvalue_referenceEOS1_ = comdat any

$_ZN6Router10ConnectionC2Eiiii = comdat any

$_ZN6VectorIiEixEi = comdat any

$_ZNK6VectorIiEixEi = comdat any

$_ZN9BitvectorC2Ei = comdat any

$_ZNK6VectorIN6Router10ConnectionEE5beginEv = comdat any

$_ZNK6VectorIN6Router10ConnectionEE3endEv = comdat any

$_ZNK6Router10ConnectionixEi = comdat any

$_ZN9BitvectorixEi = comdat any

$_ZN9Bitvector3BitaSEb = comdat any

$_ZNK9Bitvector4sizeEv = comdat any

$_ZNK9Bitvector3BitcvbEv = comdat any

$_ZN9BitvectorD2Ev = comdat any

$_ZN6VectorI6StringEixEi = comdat any

$_ZNK6VectorIiE4sizeEv = comdat any

$_ZNK6StringixEi = comdat any

$_ZN20LandmarkErrorHandlerD2Ev = comdat any

$_ZNK5Lexer8Compound16assign_argumentsERK6VectorI6StringEPS3_ = comdat any

$_ZNK5Lexer8Compound17overload_compoundEPS_ = comdat any

$_ZNK5Lexer8Compound4nameEv = comdat any

$_ZNK6VectorI6StringE4sizeEv = comdat any

$_ZNK5Lexer8Compound8landmarkEv = comdat any

$_ZN19ContextErrorHandlerD2Ev = comdat any

$_ZN6VectorIN5Lexer11ElementTypeEEixEi = comdat any

$_ZN11StringAccumC2Ev = comdat any

$_ZlsR11StringAccumRK6String = comdat any

$_ZN6StringC2EPKc = comdat any

$_ZlsR11StringAccumc = comdat any

$_ZlsR11StringAccumPKc = comdat any

$_ZNK6VectorI6StringEixEi = comdat any

$_ZlsR11StringAccumi = comdat any

$_ZN11StringAccumD2Ev = comdat any

$_ZNK5Lexer8Compound5scopeEv = comdat any

$_ZNK19VariableEnvironment6valuesEv = comdat any

$_ZN6VectorIiE9push_backEi = comdat any

$_Zpl6StringPKc = comdat any

$_Zpl6StringRKS_ = comdat any

$_ZN9HashTableI6StringiEixERKS0_ = comdat any

$_ZNK5Lexer12element_typeERK6String = comdat any

$_ZN6VectorIiE6resizeEii = comdat any

$_ZN6VectorIiE3endEv = comdat any

$_ZN6VectorIjEixEi = comdat any

$_ZN6VectorIN6Router10ConnectionEE5beginEv = comdat any

$_ZN6VectorIN6Router10ConnectionEE3endEv = comdat any

$_ZNK6String3endEv = comdat any

$_ZNK6String5beginEv = comdat any

$_ZN6String11make_stableEPKci = comdat any

$_ZN6StringC2Ev = comdat any

$_ZN6LexemeC2Ev = comdat any

$_ZN6LexemeD2Ev = comdat any

$_ZN6VectorIN5Lexer11ElementTypeEEC2Ev = comdat any

$_ZN6VectorIPN5Lexer9TunnelEndEEC2Ev = comdat any

$_ZN12ErrorHandler15default_handlerEv = comdat any

$_ZN6VectorIPN5Lexer9TunnelEndEED2Ev = comdat any

$_ZN6VectorIN5Lexer11ElementTypeEED2Ev = comdat any

$_ZN5Lexer9FileStateD2Ev = comdat any

$_ZNK6VectorIN5Lexer11ElementTypeEE4sizeEv = comdat any

$_ZNK5Lexer11ElementType8compoundEv = comdat any

$_ZN5Lexer8Compound5unuseEv = comdat any

$__clang_call_terminate = comdat any

$_ZN5Lexer9FileStateaSEOS0_ = comdat any

$_ZN5Lexer10ParseStateC2EiPS0_ = comdat any

$_ZN6VectorIPN5Lexer9TunnelEndEE5beginEv = comdat any

$_ZN6VectorIPN5Lexer9TunnelEndEE3endEv = comdat any

$_ZNK5Lexer9TunnelEnd4nextEv = comdat any

$_ZN5Lexer9TunnelEndD2Ev = comdat any

$_ZN6VectorIPN5Lexer9TunnelEndEE5clearEv = comdat any

$_ZN5Lexer10ParseStateD2Ev = comdat any

$_ZN6VectorI6StringE5clearEv = comdat any

$_ZN6LexemeaSEOS_ = comdat any

$_ZNK6String9substringEPKcS1_ = comdat any

$_ZN6StringaSERKS_ = comdat any

$_ZN6StringaSEOS_ = comdat any

$_ZNK6StringntEv = comdat any

$_ZNK6String6equalsEPKci = comdat any

$_ZN6LexemeC2EiRK6Stringb = comdat any

$_ZN6String6appendEPKci = comdat any

$_ZN6StringpLERKS_ = comdat any

$_ZNK6String7compactEv = comdat any

$_ZNK6Lexeme2isEi = comdat any

$_ZN5Lexer3lexEv = comdat any

$_ZN5Lexer8Compound15landmark_stringERK6Stringj = comdat any

$_ZN12ErrorHandler8xmessageERK6StringS2_PKcP13__va_list_tag = comdat any

$_ZNK6Lexeme6stringEv = comdat any

$_ZN6VectorIN5Lexer11ElementTypeEE9push_backI13fast_argumentIS1_Lb1EEEENT_23enable_rvalue_referenceEOS1_ = comdat any

$_ZN5Lexer11ElementTypeC2Ev = comdat any

$_ZN5Lexer11ElementTypeD2Ev = comdat any

$_ZN9HashTableI6StringiE3setERKS0_RKi = comdat any

$_ZneRK6StringS1_ = comdat any

$_ZN9HashTableI6StringiE5eraseERKS0_ = comdat any

$_ZNK9HashTableI6StringiE5beginEv = comdat any

$_ZNK24HashTable_const_iteratorI4PairIK6StringiEE4liveEv = comdat any

$_ZNK24HashTable_const_iteratorI4PairIK6StringiEE5valueEv = comdat any

$_ZneRK6StringPKc = comdat any

$_ZNK24HashTable_const_iteratorI4PairIK6StringiEE3keyEv = comdat any

$_ZN6VectorI6StringE9push_backERKS0_ = comdat any

$_ZN24HashTable_const_iteratorI4PairIK6StringiEEppEi = comdat any

$_ZN6Router4PortC2Ev = comdat any

$_ZNK5Lexer8Compound16element_landmarkEi = comdat any

$_ZNK5Lexer8Compound5depthEv = comdat any

$_ZNK5Lexer9TunnelEnd5otherEv = comdat any

$_ZN5Lexer9TunnelEnd9pair_withEPS0_ = comdat any

$_ZNK6String6lengthEv = comdat any

$_ZN6VectorIjE9push_backEj = comdat any

$_ZplPKcRK6String = comdat any

$_ZNK6String9substringEi = comdat any

$_ZN6IntArgC2Ei = comdat any

$_ZN6IntArg5parseIiEEbRK6StringRT_RK10ArgContext = comdat any

$_ZNK6VectorIN5Lexer11ElementTypeEEixEi = comdat any

$_ZN6String11make_stableEPKc = comdat any

$_ZN6StringC2EOS_ = comdat any

$_ZN6Lexeme6stringEv = comdat any

$_ZN5Lexer10ParseState14push_back_portEbi = comdat any

$_ZNK5Lexer10ParseState6nportsEb = comdat any

$_ZN5Lexer5unlexERK6Lexeme = comdat any

$_ZN5Lexer10ParseState13start_elementEv = comdat any

$_ZNK5Lexer10ParseState17first_element_setEv = comdat any

$_ZN6StringaSEPKc = comdat any

$_Z10click_swapIiEvRT_S1_ = comdat any

$_ZN5Lexer12ElementStateC2ERK6StringibS3_jPNS_10ParseStateE = comdat any

$_ZN5Lexer10lex_configEv = comdat any

$_ZN5Lexer10ParseState11clear_portsEb = comdat any

$_ZN6VectorIiE5beginEv = comdat any

$_ZN5Lexer12ElementStateD2Ev = comdat any

$_ZNK6VectorIiE5beginEv = comdat any

$_ZNK6VectorIiE3endEv = comdat any

$_ZN6VectorIiE4swapERS0_ = comdat any

$_ZNK6Lexeme4kindEv = comdat any

$_ZN5Lexer8Compound3useEv = comdat any

$_ZN5Lexer8Compound5scopeEv = comdat any

$_ZNK19VariableEnvironment4sizeEv = comdat any

$_ZNK5Lexer8Compound8nformalsEv = comdat any

$_ZN5Lexer8Compound6defineERK6StringS3_bPS_ = comdat any

$_ZN9HashTableI6StringiEaSERKS1_ = comdat any

$_ZN5Lexer8Compound17set_overload_typeEi = comdat any

$_ZN6VectorI6StringE5beginEv = comdat any

$_ZN6VectorI6StringE3endEv = comdat any

$_ZeqRK6StringS1_ = comdat any

$_ZNK12ErrorHandler7nerrorsEv = comdat any

$_ZN5Lexer9FileStateC2ERKS0_ = comdat any

$_ZNK5Lexer5ydoneEv = comdat any

$_ZN5Lexer9FileStateaSERKS0_ = comdat any

$_ZN7WordArg5parseERK6StringRS0_RK10ArgContext = comdat any

$_ZN9StringArg5parseERK6StringRS0_RK10ArgContext = comdat any

$_ZN5Lexer10ParseState19enter_element_stateEv = comdat any

$_ZN6VectorIiE5clearEv = comdat any

$_ZN6VectorIN6Router4PortEEC2Ev = comdat any

$_ZN6VectorIN6Router10ConnectionEEixEi = comdat any

$_ZN6Router10ConnectionixEi = comdat any

$_ZNK6VectorIN6Router4PortEE4sizeEv = comdat any

$_ZN6VectorIN6Router4PortEEixEi = comdat any

$_ZN6VectorIN6Router4PortEED2Ev = comdat any

$_ZNK19VariableEnvironment4nameEi = comdat any

$_ZNK19VariableEnvironment5valueEi = comdat any

$_ZNK6VectorIPN5Lexer9TunnelEndEE4sizeEv = comdat any

$_ZN6VectorIN6Router4PortEE9push_backES1_ = comdat any

$_ZNK6VectorIN6Router10ConnectionEE4sizeEv = comdat any

$_Z11click_qsortIN6Router10ConnectionEEiPT_m = comdat any

$_ZN6VectorIPN5Lexer9TunnelEndEEixEi = comdat any

$_ZN6VectorIPN5Lexer9TunnelEndEE6insertEPS2_S2_ = comdat any

$_ZNK5Lexer9TunnelEnd8isoutputEv = comdat any

$_ZNK5Lexer9TunnelEnd4portEv = comdat any

$_ZN5Lexer9TunnelEndC2ERKN6Router4PortEbPS0_ = comdat any

$_ZN6Router4PortC2Eii = comdat any

$_ZN6VectorIN6Router4PortEE4swapERS2_ = comdat any

$_ZNK5Lexer4errhEv = comdat any

$_ZN10LexerExtraD2Ev = comdat any

$_ZN10LexerExtraD0Ev = comdat any

$_ZN5Lexer8CompoundD2Ev = comdat any

$_ZN5Lexer8CompoundD0Ev = comdat any

$_ZNK5Lexer8Compound10class_nameEv = comdat any

$_ZNK6String6assignERKS_ = comdat any

$_ZNK6String11assign_memoEPKciPNS_6memo_tE = comdat any

$_ZN15atomic_uint32_t3incERVj = comdat any

$_ZN13vector_memoryI18sized_array_memoryILm4EEED2Ev = comdat any

$_ZN18sized_array_memoryILm4EE7destroyEPvm = comdat any

$_ZN13vector_memoryI18typed_array_memoryI6StringEED2Ev = comdat any

$_ZN18typed_array_memoryI6StringE7destroyEPS0_m = comdat any

$_ZN16VariableExpanderD2Ev = comdat any

$_ZNK6String5derefEv = comdat any

$_ZN15atomic_uint32_t12dec_and_testERVj = comdat any

$_ZN9Bitvector3BitC2ERji = comdat any

$_ZN11ErrorVeneerD2Ev = comdat any

$_ZN12ErrorHandlerD2Ev = comdat any

$_ZNK6VectorI6StringE5beginEv = comdat any

$_ZN11StringAccum5rep_tC2Ev = comdat any

$_ZN6String10empty_dataEv = comdat any

$_ZN11StringAccum6appendEPKci = comdat any

$_ZNK6String4dataEv = comdat any

$_ZN11StringAccum6appendEc = comdat any

$_ZN11StringAccum6appendEPKc = comdat any

$_ZN6String6appendEPKc = comdat any

$_ZN6String11absent_memoEv = comdat any

$_ZNK9HashTableI6StringiEixERKS0_ = comdat any

$_ZNK9HashTableI6StringiE4findERKS0_ = comdat any

$_ZNK24HashTable_const_iteratorI4PairIK6StringiEEcvMS4_KFbvEEv = comdat any

$_ZNK9HashTableI4PairIK6StringiEvE4findERS2_ = comdat any

$_ZNK13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE4findERS3_ = comdat any

$_ZN24HashTable_const_iteratorI4PairIK6StringiEEC2ERK28HashContainer_const_iteratorIN9HashTableIS3_vE3eltE21HashContainer_adapterIS8_EE = comdat any

$_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE4findERS3_ = comdat any

$_ZNK13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE6bucketERS3_ = comdat any

$_ZN21HashContainer_adapterIN9HashTableI4PairIK6StringiEvE3eltEE9hashkeyeqERS3_S8_ = comdat any

$_ZN21HashContainer_adapterIN9HashTableI4PairIK6StringiEvE3eltEE7hashkeyEPKS6_ = comdat any

$_ZN22HashContainer_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEC2EP13HashContainerIS6_S8_EjPPS6_SD_ = comdat any

$_ZN21HashContainer_adapterIN9HashTableI4PairIK6StringiEvE3eltEE8hashnextEPS6_ = comdat any

$_Z8hashcodeI6StringEmRKT_ = comdat any

$_ZNK6String8hashcodeEv = comdat any

$_ZNK9HashTableI4PairIK6StringiEvE3elt7hashkeyEv = comdat any

$_ZNK4PairIK6StringiE7hashkeyEv = comdat any

$_ZN28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEC2EPK13HashContainerIS6_S8_EjPPS6_SE_ = comdat any

$_ZNK28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEcvMS9_KFPS6_vEEv = comdat any

$_ZNK28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE3getEv = comdat any

$_ZN13vector_memoryI18sized_array_memoryILm8EEED2Ev = comdat any

$_ZN18sized_array_memoryILm8EE7destroyEPvm = comdat any

$_ZN13vector_memoryI18typed_array_memoryIN5Lexer11ElementTypeEEED2Ev = comdat any

$_ZN18typed_array_memoryIN5Lexer11ElementTypeEE7destroyEPS1_m = comdat any

$_ZN9HashTableI6StringiEC2Ev = comdat any

$_ZN9HashTableI4PairIK6StringiEvEC2Ev = comdat any

$_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEC2Ev = comdat any

$_ZN18SizedHashAllocatorILm40EEC2Ev = comdat any

$_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EED2Ev = comdat any

$_ZN6StringC2EPKciPNS_6memo_tE = comdat any

$_ZNK6String5emptyEv = comdat any

$_ZN6StringC2EPKcS1_ = comdat any

$_ZN6LexemeC2ERKS_ = comdat any

$_ZN5Lexer11next_lexemeEv = comdat any

$_ZNK6String4backEv = comdat any

$_ZN12ErrorHandler8xmessageERK6StringS2_S2_ = comdat any

$_ZN12ErrorHandler8xmessageERK6StringS2_ = comdat any

$_ZN12ErrorHandler18make_landmark_annoERK6String = comdat any

$_ZNK6VectorIjEixEi = comdat any

$_ZNK19VariableEnvironment5depthEv = comdat any

$_ZN6LexemeaSERKS_ = comdat any

$_ZNK6VectorIiE5emptyEv = comdat any

$_ZN6VectorIN6Router10ConnectionEED2Ev = comdat any

$_ZN13vector_memoryI18sized_array_memoryILm16EEED2Ev = comdat any

$_ZN18sized_array_memoryILm16EE7destroyEPvm = comdat any

$_ZN13vector_memoryI18typed_array_memoryI6StringEE5clearEv = comdat any

$_ZN18typed_array_memoryI6StringE13mark_noaccessEPS0_m = comdat any

$_ZN18sized_array_memoryILm24EE13mark_noaccessEPvm = comdat any

$_ZN13vector_memoryI18sized_array_memoryILm4EEE5clearEv = comdat any

$_ZN18sized_array_memoryILm4EE13mark_noaccessEPvm = comdat any

$_ZN13vector_memoryI18typed_array_memoryI6StringEE9push_backEPKS1_ = comdat any

$_ZN18typed_array_memoryI6StringE4castEPKS0_ = comdat any

$_ZN18typed_array_memoryI6StringE14mark_undefinedEPS0_m = comdat any

$_ZN18typed_array_memoryI6StringE4fillEPS0_mPKS0_ = comdat any

$_ZN13vector_memoryI18typed_array_memoryI6StringEE21reserve_and_push_backEiPKS1_ = comdat any

$_ZN18sized_array_memoryILm24EE14mark_undefinedEPvm = comdat any

$_ZNK13vector_memoryI18typed_array_memoryI6StringEE18need_argument_copyEPKS1_ = comdat any

$_ZN18typed_array_memoryI6StringE4moveEPS0_PKS0_m = comdat any

$_ZN13vector_memoryI18sized_array_memoryILm8EEEC2Ev = comdat any

$_ZN9HashTableI4PairIK6StringiEvED2Ev = comdat any

$_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE5beginEv = comdat any

$_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE5eraseER22HashContainer_iteratorIS6_S8_E = comdat any

$_ZN4PairIK6StringiED2Ev = comdat any

$_ZN13HashAllocator10deallocateEPv = comdat any

$_ZN18SizedHashAllocatorILm40EED2Ev = comdat any

$_ZN22HashContainer_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEC2EP13HashContainerIS6_S8_E = comdat any

$_ZN28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEppEi = comdat any

$_ZN28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEppEv = comdat any

$_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE3setER22HashContainer_iteratorIS6_S8_EPS6_b = comdat any

$_ZNK13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE10unbalancedEv = comdat any

$_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE6rehashEj = comdat any

$_ZNK13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE12bucket_countEv = comdat any

$_ZN13vector_memoryI18sized_array_memoryILm4EEEC2Ev = comdat any

$_ZN13vector_memoryI18typed_array_memoryI6StringEEC2Ev = comdat any

$_ZN13vector_memoryI18sized_array_memoryILm16EEEC2Ev = comdat any

$_ZN13vector_memoryI18sized_array_memoryILm16EEE19move_construct_backEP10char_arrayILm16EE = comdat any

$_ZN18sized_array_memoryILm16EE4castIN6Router10ConnectionEEEP10char_arrayILm16EEPT_ = comdat any

$_ZN18sized_array_memoryILm16EE14mark_undefinedEPvm = comdat any

$_ZN18sized_array_memoryILm16EE14move_constructEPvS1_ = comdat any

$_ZN13vector_memoryI18sized_array_memoryILm16EEE21reserve_and_push_backEiPK10char_arrayILm16EE = comdat any

$_ZNK13vector_memoryI18sized_array_memoryILm16EEE18need_argument_copyEPK10char_arrayILm16EE = comdat any

$_ZN18sized_array_memoryILm16EE13mark_noaccessEPvm = comdat any

$_ZN18sized_array_memoryILm16EE4moveEPvPKvm = comdat any

$_ZN13vector_memoryI18sized_array_memoryILm16EEE9push_backEPK10char_arrayILm16EE = comdat any

$_ZN18sized_array_memoryILm16EE4fillEPvmPKv = comdat any

$_ZN13vector_memoryI18sized_array_memoryILm4EEE9push_backEPK10char_arrayILm4EE = comdat any

$_ZN18sized_array_memoryILm4EE4castIiEEP10char_arrayILm4EEPT_ = comdat any

$_ZN18sized_array_memoryILm4EE14mark_undefinedEPvm = comdat any

$_ZN18sized_array_memoryILm4EE4fillEPvmPKv = comdat any

$_ZN13vector_memoryI18sized_array_memoryILm4EEE21reserve_and_push_backEiPK10char_arrayILm4EE = comdat any

$_ZNK13vector_memoryI18sized_array_memoryILm4EEE18need_argument_copyEPK10char_arrayILm4EE = comdat any

$_ZN18sized_array_memoryILm4EE4moveEPvPKvm = comdat any

$_ZN9HashTableI6StringiE11find_insertERKS0_ = comdat any

$_ZNK18HashTable_iteratorI4PairIK6StringiEE5valueEv = comdat any

$_ZN9HashTableI4PairIK6StringiEvE11find_insertERKS3_ = comdat any

$_ZN4PairIK6StringiEC2ERS1_i = comdat any

$_Z7hashkeyI4PairIK6StringiEENT_19key_const_referenceERKS4_ = comdat any

$_ZN13HashAllocator8allocateEv = comdat any

$_ZN4PairIK6StringiEC2ERKS2_ = comdat any

$_ZN18HashTable_iteratorI4PairIK6StringiEEC2ERK28HashContainer_const_iteratorIN9HashTableIS3_vE3eltE21HashContainer_adapterIS8_EE = comdat any

$_ZNK18HashTable_iteratorI4PairIK6StringiEEdeEv = comdat any

$_ZNK24HashTable_const_iteratorI4PairIK6StringiEEdeEv = comdat any

$_ZN13vector_memoryI18sized_array_memoryILm4EEE6resizeEiPK10char_arrayILm4EE = comdat any

$_ZN13vector_memoryI18typed_array_memoryIN5Lexer11ElementTypeEEEC2Ev = comdat any

$_ZN13vector_memoryI18sized_array_memoryILm8EEE5clearEv = comdat any

$_ZN18sized_array_memoryILm8EE13mark_noaccessEPvm = comdat any

$_ZN13vector_memoryI18typed_array_memoryIN5Lexer11ElementTypeEEE19move_construct_backEPS2_ = comdat any

$_ZN18typed_array_memoryIN5Lexer11ElementTypeEE4castEPS1_ = comdat any

$_ZN18typed_array_memoryIN5Lexer11ElementTypeEE14mark_undefinedEPS1_m = comdat any

$_ZN18typed_array_memoryIN5Lexer11ElementTypeEE14move_constructEPS1_S3_ = comdat any

$_ZN13vector_memoryI18typed_array_memoryIN5Lexer11ElementTypeEEE21reserve_and_push_backEiPKS2_ = comdat any

$_ZN18sized_array_memoryILm48EE14mark_undefinedEPvm = comdat any

$_Z10click_moveIRN5Lexer11ElementTypeEEON16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZN5Lexer11ElementTypeC2EOS0_ = comdat any

$_ZNK13vector_memoryI18typed_array_memoryIN5Lexer11ElementTypeEEE18need_argument_copyEPKS2_ = comdat any

$_ZN5Lexer11ElementTypeC2ERKS0_ = comdat any

$_ZN18typed_array_memoryIN5Lexer11ElementTypeEE13mark_noaccessEPS1_m = comdat any

$_ZN18typed_array_memoryIN5Lexer11ElementTypeEE4moveEPS1_PKS1_m = comdat any

$_ZN13vector_memoryI18typed_array_memoryIN5Lexer11ElementTypeEEE9push_backEPKS2_ = comdat any

$_ZN18sized_array_memoryILm48EE13mark_noaccessEPvm = comdat any

$_ZN18typed_array_memoryIN5Lexer11ElementTypeEE4fillEPS1_mPKS1_ = comdat any

$_ZNK28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEptEv = comdat any

$_ZN9HashTableI4PairIK6StringiEvE5eraseERS2_ = comdat any

$_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE5eraseERS3_ = comdat any

$_ZNK9HashTableI4PairIK6StringiEvE5beginEv = comdat any

$_ZNK13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE5beginEv = comdat any

$_ZN28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEC2EPK13HashContainerIS6_S8_E = comdat any

$_ZN18sized_array_memoryILm4EE4castIjEEP10char_arrayILm4EEPT_ = comdat any

$_ZN6IntArg16parse_saturatingIiEEbRK6StringRT_RK10ArgContext = comdat any

$_Z15extract_integerIjjEvPKT_RT0_ = comdat any

$_ZN22extract_integer_helperILi1EjjE7extractEPKjRj = comdat any

$_ZN13vector_memoryI18sized_array_memoryILm4EEE4swapERS2_ = comdat any

$_ZN9HashTableI4PairIK6StringiEvEaSERKS4_ = comdat any

$_ZN9HashTableI4PairIK6StringiEvE5clearEv = comdat any

$_ZN9HashTableI4PairIK6StringiEvE13copy_elementsERKS4_ = comdat any

$_ZN13vector_memoryI18sized_array_memoryILm8EEE9push_backEPK10char_arrayILm8EE = comdat any

$_ZN18sized_array_memoryILm8EE4castIN6Router4PortEEEP10char_arrayILm8EEPT_ = comdat any

$_ZN18sized_array_memoryILm8EE14mark_undefinedEPvm = comdat any

$_ZN18sized_array_memoryILm8EE4fillEPvmPKv = comdat any

$_ZN13vector_memoryI18sized_array_memoryILm8EEE21reserve_and_push_backEiPK10char_arrayILm8EE = comdat any

$_ZNK13vector_memoryI18sized_array_memoryILm8EEE18need_argument_copyEPK10char_arrayILm8EE = comdat any

$_ZN18sized_array_memoryILm8EE4moveEPvPKvm = comdat any

$_Z13click_compareIN6Router10ConnectionEEiPKvS3_Pv = comdat any

$_ZNK6Router10ConnectionltERKS0_ = comdat any

$_ZNK6Router4PortltERKS0_ = comdat any

$_ZNK6Router4PorteqERKS0_ = comdat any

$_ZN13vector_memoryI18sized_array_memoryILm8EEE6insertEP10char_arrayILm8EEPKS4_ = comdat any

$_ZN18sized_array_memoryILm8EE4castIPN5Lexer9TunnelEndEEEP10char_arrayILm8EEPT_ = comdat any

$_ZN13vector_memoryI18sized_array_memoryILm8EEE5beginEv = comdat any

$_ZN13vector_memoryI18sized_array_memoryILm8EEE3endEv = comdat any

$_ZN13vector_memoryI18sized_array_memoryILm8EEE4swapERS2_ = comdat any

@.str = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"../../click/lib/lexer.cc\00", align 1
@__PRETTY_FUNCTION__._ZN5Lexer24compound_element_factoryEm = private unnamed_addr constant [59 x i8] c"static Element *Lexer::compound_element_factory(uintptr_t)\00", align 1
@_ZTVN5Lexer8CompoundE = unnamed_addr constant { [29 x i8*] } { [29 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5Lexer8CompoundE to i8*), i8* bitcast (void (%"class.Lexer::Compound"*)* @_ZN5Lexer8CompoundD2Ev to i8*), i8* bitcast (void (%"class.Lexer::Compound"*)* @_ZN5Lexer8CompoundD0Ev to i8*), i8* bitcast (void (%class.Element*, i32, %class.Packet*)* @_ZN7Element4pushEiP6Packet to i8*), i8* bitcast (%class.Packet* (%class.Element*, i32)* @_ZN7Element4pullEi to i8*), i8* bitcast (%class.Packet* (%class.Element*, %class.Packet*)* @_ZN7Element13simple_actionEP6Packet to i8*), i8* bitcast (i1 (%class.Element*, %class.Task*)* @_ZN7Element8run_taskEP4Task to i8*), i8* bitcast (void (%class.Element*, %class.Timer*)* @_ZN7Element9run_timerEP5Timer to i8*), i8* bitcast (void (%class.Element*, i32, i32)* @_ZN7Element8selectedEii to i8*), i8* bitcast (void (%class.Element*, i32)* @_ZN7Element8selectedEi to i8*), i8* bitcast (i8* (%"class.Lexer::Compound"*)* @_ZNK5Lexer8Compound10class_nameEv to i8*), i8* bitcast (i8* (%class.Element*)* @_ZNK7Element10port_countEv to i8*), i8* bitcast (i8* (%class.Element*)* @_ZNK7Element10processingEv to i8*), i8* bitcast (i8* (%class.Element*)* @_ZNK7Element9flow_codeEv to i8*), i8* bitcast (i8* (%class.Element*)* @_ZNK7Element5flagsEv to i8*), i8* bitcast (i8* (%"class.Lexer::Compound"*, i8*)* @_ZN5Lexer8Compound4castEPKc to i8*), i8* bitcast (i8* (%class.Element*, i1, i32, i8*)* @_ZN7Element9port_castEbiPKc to i8*), i8* bitcast (i32 (%class.Element*)* @_ZNK7Element15configure_phaseEv to i8*), i8* bitcast (i32 (%class.Element*, %class.Vector.0*, %class.ErrorHandler*)* @_ZN7Element9configureER6VectorI6StringEP12ErrorHandler to i8*), i8* bitcast (void (%class.Element*)* @_ZN7Element12add_handlersEv to i8*), i8* bitcast (i32 (%class.Element*, %class.ErrorHandler*)* @_ZN7Element10initializeEP12ErrorHandler to i8*), i8* bitcast (void (%class.Element*, %class.Element*, %class.ErrorHandler*)* @_ZN7Element10take_stateEPS_P12ErrorHandler to i8*), i8* bitcast (%class.Element* (%class.Element*)* @_ZNK7Element15hotswap_elementEv to i8*), i8* bitcast (void (%class.Element*, i32)* @_ZN7Element7cleanupENS_12CleanupStageE to i8*), i8* bitcast (void (%class.String*, %class.Element*)* @_ZNK7Element11declarationEv to i8*), i8* bitcast (i1 (%class.Element*)* @_ZNK7Element20can_live_reconfigureEv to i8*), i8* bitcast (i32 (%class.Element*, %class.Vector.0*, %class.ErrorHandler*)* @_ZN7Element16live_reconfigureER6VectorI6StringEP12ErrorHandler to i8*), i8* bitcast (i32 (%class.Element*, i32, i8*)* @_ZN7Element5llrpcEjPv to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [12 x i8] c"<anonymous>\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"Lexer::Compound\00", align 1
@.str.4 = private unnamed_addr constant [51 x i8] c"%<%s%> pseudoelement %<%s%> may only be used as %s\00", align 1
@_ZL10port_names = internal constant [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0)], align 16
@.str.5 = private unnamed_addr constant [21 x i8] c"%<%s%> %s %d missing\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"input\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"output\00", align 1
@.str.8 = private unnamed_addr constant [62 x i8] c"_element_names[0] == \22input\22 && _element_names[1] == \22output\22\00", align 1
@__PRETTY_FUNCTION__._ZN5Lexer8Compound6finishEP12ErrorHandler = private unnamed_addr constant [45 x i8] c"void Lexer::Compound::finish(ErrorHandler *)\00", align 1
@.str.9 = private unnamed_addr constant [20 x i8] c"no match for %<%s%>\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"candidates are:\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.13 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"<arg>\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"__REST__\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"...\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c" argument, \00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c" arguments, \00", align 1
@.str.19 = private unnamed_addr constant [9 x i8] c" input, \00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c" inputs, \00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c" output\00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c" outputs\00", align 1
@__PRETTY_FUNCTION__._ZN5Lexer8Compound11expand_intoEPS_iR19VariableEnvironment = private unnamed_addr constant [71 x i8] c"void Lexer::Compound::expand_into(Lexer *, int, VariableEnvironment &)\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"element\00", align 1
@.str.25 = private unnamed_addr constant [27 x i8] c"%<%s%> is an element class\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"config\00", align 1
@_ZTV5Lexer = unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTI5Lexer to i8*), i8* bitcast (void (%class.Lexer*)* @_ZN5LexerD1Ev to i8*), i8* bitcast (void (%class.Lexer*)* @_ZN5LexerD0Ev to i8*)] }, align 8
@.str.27 = private unnamed_addr constant [9 x i8] c"<tunnel>\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"Error\00", align 1
@.str.29 = private unnamed_addr constant [79 x i8] c"element_type(\22<tunnel>\22) == TUNNEL_TYPE && element_type(\22Error\22) == ERROR_TYPE\00", align 1
@__PRETTY_FUNCTION__._ZN5LexerC2Ev = private unnamed_addr constant [15 x i8] c"Lexer::Lexer()\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"unknown preprocessor directive\00", align 1
@.str.31 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.32 = private unnamed_addr constant [13 x i8] c"elementclass\00", align 1
@.str.33 = private unnamed_addr constant [8 x i8] c"require\00", align 1
@.str.34 = private unnamed_addr constant [8 x i8] c"provide\00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"define\00", align 1
@_ZZN5Lexer13lexeme_stringEiE5names = internal constant [90 x i8] c"identifier\00variable\00'->'\00'=>'\00'::'\00'||'\00'...'\00'elementclass'\00'require'\00'provide'\00'define'\00", align 16
@_ZZN5Lexer13lexeme_stringEiE7offsets = internal constant [12 x i8] c"\00\0B\14\19\1E#(.=GQZ", align 1
@.str.36 = private unnamed_addr constant [5 x i8] c"'%c'\00", align 1
@.str.37 = private unnamed_addr constant [8 x i8] c"'\5C%03d'\00", align 1
@.str.38 = private unnamed_addr constant [12 x i8] c"expected %s\00", align 1
@_ZN12ErrorHandler7e_errorE = external constant [0 x i8], align 1
@.str.39 = private unnamed_addr constant [26 x i8] c"syntax error near %<%#s%>\00", align 1
@.str.40 = private unnamed_addr constant [8 x i8] c"factory\00", align 1
@__PRETTY_FUNCTION__._ZN5Lexer16add_element_typeERK6StringPFP7ElementmEmb = private unnamed_addr constant [84 x i8] c"int Lexer::add_element_type(const String &, Lexer::ElementFactory, uintptr_t, bool)\00", align 1
@.str.41 = private unnamed_addr constant [29 x i8] c"unknown element class %<%s%>\00", align 1
@.str.42 = private unnamed_addr constant [21 x i8] c"!(*prev & ET_SCOPED)\00", align 1
@__PRETTY_FUNCTION__._ZN5Lexer19lexical_scoping_outEi = private unnamed_addr constant [37 x i8] c"void Lexer::lexical_scoping_out(int)\00", align 1
@.str.43 = private unnamed_addr constant [10 x i8] c"prev_hint\00", align 1
@__PRETTY_FUNCTION__._ZN5Lexer19remove_element_typeEiPi = private unnamed_addr constant [43 x i8] c"int Lexer::remove_element_type(int, int *)\00", align 1
@.str.44 = private unnamed_addr constant [18 x i8] c"connection tunnel\00", align 1
@.str.45 = private unnamed_addr constant [52 x i8] c"name && etype >= 0 && etype < _element_types.size()\00", align 1
@__PRETTY_FUNCTION__._ZN5Lexer11get_elementE6StringiRKS0_S2_j = private unnamed_addr constant [82 x i8] c"int Lexer::get_element(String, int, const String &, const String &, unsigned int)\00", align 1
@.str.46 = private unnamed_addr constant [44 x i8] c"element name %<%s%> has all-digit component\00", align 1
@.str.47 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.48 = private unnamed_addr constant [2 x i8] c"@\00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"at_pos >= 0\00", align 1
@__PRETTY_FUNCTION__._ZN5Lexer8Compound24deanonymize_element_nameEi = private unnamed_addr constant [54 x i8] c"String Lexer::Compound::deanonymize_element_name(int)\00", align 1
@blank_args = external global %class.ArgContext, align 8
@.str.50 = private unnamed_addr constant [20 x i8] c"##no-such-element##\00", align 1
@.str.51 = private unnamed_addr constant [4 x i8] c"@%d\00", align 1
@.str.52 = private unnamed_addr constant [8 x i8] c"<tunnel\00", align 1
@.str.53 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"<null\00", align 1
@.str.55 = private unnamed_addr constant [10 x i8] c"<unknown>\00", align 1
@.str.56 = private unnamed_addr constant [44 x i8] c"syntax error: port number should be integer\00", align 1
@.str.57 = private unnamed_addr constant [35 x i8] c"syntax error: expected port number\00", align 1
@.str.58 = private unnamed_addr constant [29 x i8] c"syntax error: expected %<,%>\00", align 1
@.str.59 = private unnamed_addr constant [29 x i8] c"_ps->state == _ps->s_element\00", align 1
@__PRETTY_FUNCTION__._ZN5Lexer13yelement_nameEv = private unnamed_addr constant [28 x i8] c"void Lexer::yelement_name()\00", align 1
@.str.60 = private unnamed_addr constant [55 x i8] c"suggest %<input %s%> or %<[0] %s%> to start connection\00", align 1
@.str.61 = private unnamed_addr constant [22 x i8] c"stranded port ignored\00", align 1
@.str.62 = private unnamed_addr constant [36 x i8] c"missing element type in declaration\00", align 1
@.str.63 = private unnamed_addr constant [50 x i8] c"configuration string ignored on element reference\00", align 1
@.str.64 = private unnamed_addr constant [34 x i8] c"_ps->state == _ps->s_next_element\00", align 1
@__PRETTY_FUNCTION__._ZN5Lexer13yelement_nextEv = private unnamed_addr constant [28 x i8] c"void Lexer::yelement_next()\00", align 1
@.str.65 = private unnamed_addr constant [45 x i8] c"implicit ports used in the middle of a chain\00", align 1
@.str.66 = private unnamed_addr constant [34 x i8] c"class %<%s%> used as element name\00", align 1
@.str.67 = private unnamed_addr constant [26 x i8] c"undeclared element %<%s%>\00", align 1
@.str.68 = private unnamed_addr constant [32 x i8] c"redeclaration of element %<%s%>\00", align 1
@.str.69 = private unnamed_addr constant [40 x i8] c"element %<%s%> previously declared here\00", align 1
@.str.70 = private unnamed_addr constant [37 x i8] c"output ports ignored at end of chain\00", align 1
@.str.71 = private unnamed_addr constant [38 x i8] c"input ports ignored at start of chain\00", align 1
@.str.72 = private unnamed_addr constant [51 x i8] c"at most one expandable port allowed per connection\00", align 1
@.str.73 = private unnamed_addr constant [54 x i8] c"syntax error: many-to-many connections require %<=>%>\00", align 1
@.str.74 = private unnamed_addr constant [55 x i8] c"connection mismatch: %d outputs connected to %d inputs\00", align 1
@.str.75 = private unnamed_addr constant [63 x i8] c"connection mismatch: %d or more outputs connected to %d inputs\00", align 1
@.str.76 = private unnamed_addr constant [63 x i8] c"connection mismatch: %d outputs connected to %d or more inputs\00", align 1
@_ZZN5Lexer23yconnection_connect_allER6VectorIiES2_iE4port = private unnamed_addr constant [2 x i32] [i32 -1, i32 -1], align 4
@.str.77 = private unnamed_addr constant [31 x i8] c"_ps->state == _ps->s_connector\00", align 1
@__PRETTY_FUNCTION__._ZN5Lexer21yconnection_connectorEv = private unnamed_addr constant [36 x i8] c"void Lexer::yconnection_connector()\00", align 1
@.str.78 = private unnamed_addr constant [27 x i8] c"expected element type name\00", align 1
@.str.79 = private unnamed_addr constant [18 x i8] c"expected variable\00", align 1
@.str.80 = private unnamed_addr constant [24 x i8] c"expected %<,%> or %<|%>\00", align 1
@.str.81 = private unnamed_addr constant [43 x i8] c"cannot extend unknown element class %<%s%>\00", align 1
@.str.82 = private unnamed_addr constant [55 x i8] c"%<...%> should occur last, after one or more compounds\00", align 1
@.str.83 = private unnamed_addr constant [48 x i8] c"maximum compound element nesting depth exceeded\00", align 1
@.str.84 = private unnamed_addr constant [50 x i8] c"_ps->state == ParseState::s_compound_elementclass\00", align 1
@__PRETTY_FUNCTION__._ZN5Lexer13ycompound_endERK6Lexeme = private unnamed_addr constant [42 x i8] c"void Lexer::ycompound_end(const Lexeme &)\00", align 1
@.str.85 = private unnamed_addr constant [45 x i8] c"maximum element group nesting depth exceeded\00", align 1
@.str.86 = private unnamed_addr constant [18 x i8] c"<anonymous group>\00", align 1
@.str.87 = private unnamed_addr constant [12 x i8] c"!_unlex_pos\00", align 1
@__PRETTY_FUNCTION__._ZN5Lexer16yrequire_libraryERK6String = private unnamed_addr constant [45 x i8] c"void Lexer::yrequire_library(const String &)\00", align 1
@.str.88 = private unnamed_addr constant [47 x i8] c"%<require library%> must be used at file scope\00", align 1
@.str.89 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.90 = private unnamed_addr constant [5 x i8] c"conf\00", align 1
@.str.91 = private unnamed_addr constant [44 x i8] c"library %<%#s%> not found in CLICKPATH/conf\00", align 1
@.str.92 = private unnamed_addr constant [15 x i8] c"compact_config\00", align 1
@.str.93 = private unnamed_addr constant [8 x i8] c"package\00", align 1
@.str.94 = private unnamed_addr constant [8 x i8] c"library\00", align 1
@.str.95 = private unnamed_addr constant [28 x i8] c"syntax error at requirement\00", align 1
@.str.96 = private unnamed_addr constant [43 x i8] c"bad %<define%> declaration: not a variable\00", align 1
@.str.97 = private unnamed_addr constant [15 x i8] c"expected %<)%>\00", align 1
@.str.98 = private unnamed_addr constant [15 x i8] c"expected %<}%>\00", align 1
@.str.99 = private unnamed_addr constant [50 x i8] c"_ps->_type == ParseState::t_file && !_ps->_parent\00", align 1
@__PRETTY_FUNCTION__._ZN5Lexer10ystatementEv = private unnamed_addr constant [25 x i8] c"void Lexer::ystatement()\00", align 1
@.str.100 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@__PRETTY_FUNCTION__._ZN5Lexer23expand_compound_elementEiR19VariableEnvironment = private unnamed_addr constant [64 x i8] c"void Lexer::expand_compound_element(int, VariableEnvironment &)\00", align 1
@.str.101 = private unnamed_addr constant [32 x i8] c"failed to create element %<%s%>\00", align 1
@.str.102 = private unnamed_addr constant [7 x i8] c"/input\00", align 1
@.str.103 = private unnamed_addr constant [23 x i8] c"%<%s%> input %d unused\00", align 1
@.str.104 = private unnamed_addr constant [23 x i8] c"%<%s%> has no input %d\00", align 1
@.str.105 = private unnamed_addr constant [8 x i8] c"/output\00", align 1
@.str.106 = private unnamed_addr constant [24 x i8] c"%<%s%> has no output %d\00", align 1
@.str.107 = private unnamed_addr constant [24 x i8] c"%<%s%> output %d unused\00", align 1
@.str.108 = private unnamed_addr constant [33 x i8] c"tunnel %<%s -> %s%> %s %d unused\00", align 1
@.str.109 = private unnamed_addr constant [18 x i8] c"%<%s%> used as %s\00", align 1
@_ZTV10LexerExtra = unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTI10LexerExtra to i8*), i8* bitcast (void (%class.LexerExtra*)* @_ZN10LexerExtraD2Ev to i8*), i8* bitcast (void (%class.LexerExtra*)* @_ZN10LexerExtraD0Ev to i8*), i8* bitcast (void (%class.LexerExtra*, %class.String*, %class.String*, %class.ErrorHandler*)* @_ZN10LexerExtra7requireE6StringS0_P12ErrorHandler to i8*)] }, align 8
@_ZTVN10__cxxabiv117__class_type_infoE = external global i8*
@_ZTS10LexerExtra = constant [13 x i8] c"10LexerExtra\00"
@_ZTI10LexerExtra = constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZTS10LexerExtra, i32 0, i32 0) }
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN5Lexer8CompoundE = constant [18 x i8] c"N5Lexer8CompoundE\00"
@_ZTI7Element = external constant i8*
@_ZTIN5Lexer8CompoundE = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZTSN5Lexer8CompoundE, i32 0, i32 0), i8* bitcast (i8** @_ZTI7Element to i8*) }
@_ZTS5Lexer = constant [7 x i8] c"5Lexer\00"
@_ZTI5Lexer = constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZTS5Lexer, i32 0, i32 0) }
@_ZTV19VariableEnvironment = external unnamed_addr constant { [5 x i8*] }
@.str.110 = private unnamed_addr constant [18 x i8] c"_r.memo->refcount\00", align 1
@.str.111 = private unnamed_addr constant [35 x i8] c"/usr/local/include/click/string.hh\00", align 1
@__PRETTY_FUNCTION__._ZNK6String5derefEv = private unnamed_addr constant [27 x i8] c"void String::deref() const\00", align 1
@.str.112 = private unnamed_addr constant [7 x i8] c"n >= 0\00", align 1
@.str.113 = private unnamed_addr constant [38 x i8] c"/usr/local/include/click/bitvector.hh\00", align 1
@__PRETTY_FUNCTION__._ZN9BitvectorC2Ei = private unnamed_addr constant [26 x i8] c"Bitvector::Bitvector(int)\00", align 1
@.str.114 = private unnamed_addr constant [16 x i8] c"i >= 0 && i < 2\00", align 1
@.str.115 = private unnamed_addr constant [35 x i8] c"/usr/local/include/click/router.hh\00", align 1
@__PRETTY_FUNCTION__._ZNK6Router10ConnectionixEi = private unnamed_addr constant [62 x i8] c"const Router::Port &Router::Connection::operator[](int) const\00", align 1
@.str.116 = private unnamed_addr constant [20 x i8] c"i >= 0 && i <= _max\00", align 1
@__PRETTY_FUNCTION__._ZN9BitvectorixEi = private unnamed_addr constant [42 x i8] c"Bitvector::Bit Bitvector::operator[](int)\00", align 1
@_ZTV20LandmarkErrorHandler = external unnamed_addr constant { [9 x i8*] }
@_ZTV19ContextErrorHandler = external unnamed_addr constant { [9 x i8*] }
@_ZN6String9null_dataE = external constant i8, align 1
@.str.117 = private unnamed_addr constant [9 x i8] c"len >= 0\00", align 1
@.str.118 = private unnamed_addr constant [37 x i8] c"/usr/local/include/click/straccum.hh\00", align 1
@__PRETTY_FUNCTION__._ZN11StringAccum6appendEPKci = private unnamed_addr constant [44 x i8] c"void StringAccum::append(const char *, int)\00", align 1
@.str.119 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.120 = private unnamed_addr constant [28 x i8] c"redeclaration of %s%s%<%s%>\00", align 1
@.str.121 = private unnamed_addr constant [32 x i8] c"%<%s%> previously declared here\00", align 1
@_ZN12ErrorHandler19the_default_handlerE = external global %class.ErrorHandler*, align 8
@.str.122 = private unnamed_addr constant [22 x i8] c"!branchfree || d != 1\00", align 1
@.str.123 = private unnamed_addr constant [37 x i8] c"/usr/local/include/click/libdivide.h\00", align 1
@__PRETTY_FUNCTION__._ZL26libdivide_internal_u32_genji = private unnamed_addr constant [65 x i8] c"struct libdivide_u32_t libdivide_internal_u32_gen(uint32_t, int)\00", align 1
@.str.124 = private unnamed_addr constant [19 x i8] c"rem > 0 && rem < d\00", align 1
@.str.125 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.126 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@.str.127 = private unnamed_addr constant [33 x i8] c"(unsigned) i < (unsigned) vm_.n_\00", align 1
@.str.128 = private unnamed_addr constant [35 x i8] c"/usr/local/include/click/vector.hh\00", align 1
@__PRETTY_FUNCTION__._ZNK6VectorIjEixEi = private unnamed_addr constant [86 x i8] c"const T &Vector<unsigned int>::operator[](Vector::size_type) const [T = unsigned int]\00", align 1
@.str.129 = private unnamed_addr constant [83 x i8] c"!_other && !d->_other && _isoutput == !d->_isoutput && _port.port == d->_port.port\00", align 1
@__PRETTY_FUNCTION__._ZN5Lexer9TunnelEnd9pair_withEPS0_ = private unnamed_addr constant [53 x i8] c"void Lexer::TunnelEnd::pair_with(Lexer::TunnelEnd *)\00", align 1
@.str.130 = private unnamed_addr constant [40 x i8] c"isoutput || elements[cur_epos + 2] == 0\00", align 1
@__PRETTY_FUNCTION__._ZN5Lexer10ParseState14push_back_portEbi = private unnamed_addr constant [50 x i8] c"void Lexer::ParseState::push_back_port(bool, int)\00", align 1
@.str.131 = private unnamed_addr constant [24 x i8] c"_unlex_pos < UNLEX_SIZE\00", align 1
@.str.132 = private unnamed_addr constant [34 x i8] c"/usr/local/include/click/lexer.hh\00", align 1
@__PRETTY_FUNCTION__._ZN5Lexer5unlexERK6Lexeme = private unnamed_addr constant [34 x i8] c"void Lexer::unlex(const Lexeme &)\00", align 1
@__PRETTY_FUNCTION__._ZN5Lexer10lex_configEv = private unnamed_addr constant [27 x i8] c"String Lexer::lex_config()\00", align 1
@__PRETTY_FUNCTION__._ZN5Lexer10ParseState11clear_portsEb = private unnamed_addr constant [42 x i8] c"void Lexer::ParseState::clear_ports(bool)\00", align 1
@.str.133 = private unnamed_addr constant [40 x i8] c"!isformal || _nformals == _scope.size()\00", align 1
@__PRETTY_FUNCTION__._ZN5Lexer8Compound6defineERK6StringS3_bPS_ = private unnamed_addr constant [76 x i8] c"void Lexer::Compound::define(const String &, const String &, bool, Lexer *)\00", align 1
@.str.134 = private unnamed_addr constant [35 x i8] c"parameter %<$%s%> multiply defined\00", align 1
@.str.135 = private unnamed_addr constant [54 x i8] c"repeated keyword parameter %<%s%> in compound element\00", align 1
@.str.136 = private unnamed_addr constant [106 x i8] c"compound element parameters out of order\0A(The correct order is %<[positional], [keywords], [__REST__]%>.)\00", align 1
@__PRETTY_FUNCTION__._ZN6Router10ConnectionixEi = private unnamed_addr constant [50 x i8] c"Router::Port &Router::Connection::operator[](int)\00", align 1
@.str.137 = private unnamed_addr constant [11 x i8] c"!_refcount\00", align 1
@__PRETTY_FUNCTION__._ZN5Lexer8CompoundD2Ev = private unnamed_addr constant [37 x i8] c"virtual Lexer::Compound::~Compound()\00", align 1
@__PRETTY_FUNCTION__._ZN6VectorIiEixEi = private unnamed_addr constant [56 x i8] c"T &Vector<int>::operator[](Vector::size_type) [T = int]\00", align 1
@__PRETTY_FUNCTION__._ZNK6VectorI6StringEixEi = private unnamed_addr constant [74 x i8] c"const T &Vector<String>::operator[](Vector::size_type) const [T = String]\00", align 1
@__PRETTY_FUNCTION__._ZNK6VectorIiEixEi = private unnamed_addr constant [68 x i8] c"const T &Vector<int>::operator[](Vector::size_type) const [T = int]\00", align 1
@__PRETTY_FUNCTION__._ZN6VectorI6StringEixEi = private unnamed_addr constant [62 x i8] c"T &Vector<String>::operator[](Vector::size_type) [T = String]\00", align 1
@__PRETTY_FUNCTION__._ZN6VectorIN5Lexer11ElementTypeEEixEi = private unnamed_addr constant [86 x i8] c"T &Vector<Lexer::ElementType>::operator[](Vector::size_type) [T = Lexer::ElementType]\00", align 1
@.str.138 = private unnamed_addr constant [35 x i8] c"/usr/local/include/click/vector.cc\00", align 1
@__PRETTY_FUNCTION__._ZN13vector_memoryI18sized_array_memoryILm4EEE6resizeEiPK10char_arrayILm4EE = private unnamed_addr constant [135 x i8] c"void vector_memory<sized_array_memory<4> >::resize(vector_memory::size_type, const vector_memory::type *) [AM = sized_array_memory<4>]\00", align 1
@__PRETTY_FUNCTION__._ZN6VectorIjEixEi = private unnamed_addr constant [74 x i8] c"T &Vector<unsigned int>::operator[](Vector::size_type) [T = unsigned int]\00", align 1
@.str.139 = private unnamed_addr constant [15 x i8] c"invalid number\00", align 1
@__PRETTY_FUNCTION__._ZNK6VectorIN5Lexer11ElementTypeEEixEi = private unnamed_addr constant [98 x i8] c"const T &Vector<Lexer::ElementType>::operator[](Vector::size_type) const [T = Lexer::ElementType]\00", align 1
@__PRETTY_FUNCTION__._ZN6VectorIN6Router10ConnectionEEixEi = private unnamed_addr constant [86 x i8] c"T &Vector<Router::Connection>::operator[](Vector::size_type) [T = Router::Connection]\00", align 1
@__PRETTY_FUNCTION__._ZN6VectorIN6Router4PortEEixEi = private unnamed_addr constant [74 x i8] c"T &Vector<Router::Port>::operator[](Vector::size_type) [T = Router::Port]\00", align 1
@__PRETTY_FUNCTION__._ZN6VectorIPN5Lexer9TunnelEndEEixEi = private unnamed_addr constant [86 x i8] c"T &Vector<Lexer::TunnelEnd *>::operator[](Vector::size_type) [T = Lexer::TunnelEnd *]\00", align 1
@.str.140 = private unnamed_addr constant [29 x i8] c"it >= begin() && it <= end()\00", align 1
@__PRETTY_FUNCTION__._ZN13vector_memoryI18sized_array_memoryILm8EEE6insertEP10char_arrayILm8EEPKS4_ = private unnamed_addr constant [166 x i8] c"typename vector_memory<AM>::iterator vector_memory<sized_array_memory<8> >::insert(vector_memory::iterator, const vector_memory::type *) [AM = sized_array_memory<8>]\00", align 1

@_ZN5Lexer8CompoundC1ERK6StringS3_P19VariableEnvironment = alias void (%"class.Lexer::Compound"*, %class.String*, %class.String*, %class.VariableEnvironment*), void (%"class.Lexer::Compound"*, %class.String*, %class.String*, %class.VariableEnvironment*)* @_ZN5Lexer8CompoundC2ERK6StringS3_P19VariableEnvironment
@_ZN5Lexer9FileStateC1ERK6StringS3_ = alias void (%"struct.Lexer::FileState"*, %class.String*, %class.String*), void (%"struct.Lexer::FileState"*, %class.String*, %class.String*)* @_ZN5Lexer9FileStateC2ERK6StringS3_
@_ZN5LexerC1Ev = alias void (%class.Lexer*), void (%class.Lexer*)* @_ZN5LexerC2Ev
@_ZN5LexerD1Ev = alias void (%class.Lexer*), void (%class.Lexer*)* @_ZN5LexerD2Ev

; Function Attrs: noinline nounwind optnone uwtable
define %class.Element* @_ZN5Lexer24compound_element_factoryEm(i64) #0 align 2 {
  %2 = alloca %class.Element*, align 8
  %3 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i32 75, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN5Lexer24compound_element_factoryEm, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  %5 = load %class.Element*, %class.Element** %2, align 8
  ret %class.Element* %5
}

; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) #1

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer8CompoundC2ERK6StringS3_P19VariableEnvironment(%"class.Lexer::Compound"*, %class.String* dereferenceable(24), %class.String* dereferenceable(24), %class.VariableEnvironment*) unnamed_addr #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.Lexer::Compound"*, align 8
  %6 = alloca %class.String*, align 8
  %7 = alloca %class.String*, align 8
  %8 = alloca %class.VariableEnvironment*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  %11 = alloca i32, align 4
  store %"class.Lexer::Compound"* %0, %"class.Lexer::Compound"** %5, align 8
  store %class.String* %1, %class.String** %6, align 8
  store %class.String* %2, %class.String** %7, align 8
  store %class.VariableEnvironment* %3, %class.VariableEnvironment** %8, align 8
  %12 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %5, align 8
  %13 = bitcast %"class.Lexer::Compound"* %12 to %class.Element*
  call void @_ZN7ElementC2Ev(%class.Element* %13)
  %14 = bitcast %"class.Lexer::Compound"* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5Lexer8CompoundE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %12, i32 0, i32 1
  %16 = load %class.String*, %class.String** %6, align 8
  invoke void @_ZN6StringC2ERKS_(%class.String* %15, %class.String* dereferenceable(24) %16)
          to label %17 unwind label %56

; <label>:17:                                     ; preds = %4
  %18 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %12, i32 0, i32 2
  %19 = load %class.String*, %class.String** %7, align 8
  invoke void @_ZN6StringC2ERKS_(%class.String* %18, %class.String* dereferenceable(24) %19)
          to label %20 unwind label %60

; <label>:20:                                     ; preds = %17
  %21 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %12, i32 0, i32 3
  store i32 -1, i32* %21, align 8
  %22 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %12, i32 0, i32 4
  %23 = load %class.VariableEnvironment*, %class.VariableEnvironment** %8, align 8
  invoke void @_ZN19VariableEnvironmentC1EPS_(%class.VariableEnvironment* %22, %class.VariableEnvironment* %23)
          to label %24 unwind label %64

; <label>:24:                                     ; preds = %20
  %25 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %12, i32 0, i32 5
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %12, i32 0, i32 6
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %12, i32 0, i32 7
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %12, i32 0, i32 8
  %29 = load i8, i8* %28, align 4
  %30 = and i8 %29, -2
  store i8 %30, i8* %28, align 4
  %31 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %12, i32 0, i32 10
  store i32 -1, i32* %11, align 4
  invoke void @_ZN9HashTableI6StringiEC2ERKi(%class.HashTable* %31, i32* dereferenceable(4) %11)
          to label %32 unwind label %68

; <label>:32:                                     ; preds = %24
  %33 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %12, i32 0, i32 11
  invoke void @_ZN6VectorIiEC2Ev(%class.Vector.5* %33)
          to label %34 unwind label %72

; <label>:34:                                     ; preds = %32
  %35 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %12, i32 0, i32 12
  invoke void @_ZN6VectorI6StringEC2Ev(%class.Vector.0* %35)
          to label %36 unwind label %76

; <label>:36:                                     ; preds = %34
  %37 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %12, i32 0, i32 13
  invoke void @_ZN6VectorI6StringEC2Ev(%class.Vector.0* %37)
          to label %38 unwind label %80

; <label>:38:                                     ; preds = %36
  %39 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %12, i32 0, i32 14
  invoke void @_ZN6VectorI6StringEC2Ev(%class.Vector.0* %39)
          to label %40 unwind label %84

; <label>:40:                                     ; preds = %38
  %41 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %12, i32 0, i32 15
  invoke void @_ZN6VectorIjEC2Ev(%class.Vector.2* %41)
          to label %42 unwind label %88

; <label>:42:                                     ; preds = %40
  %43 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %12, i32 0, i32 16
  %44 = getelementptr inbounds [2 x %class.Vector.5], [2 x %class.Vector.5]* %43, i32 0, i32 0
  %45 = getelementptr inbounds %class.Vector.5, %class.Vector.5* %44, i64 2
  br label %46

; <label>:46:                                     ; preds = %48, %42
  %47 = phi %class.Vector.5* [ %44, %42 ], [ %49, %48 ]
  invoke void @_ZN6VectorIiEC2Ev(%class.Vector.5* %47)
          to label %48 unwind label %92

; <label>:48:                                     ; preds = %46
  %49 = getelementptr inbounds %class.Vector.5, %class.Vector.5* %47, i64 1
  %50 = icmp eq %class.Vector.5* %49, %45
  br i1 %50, label %51, label %46

; <label>:51:                                     ; preds = %48
  %52 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %12, i32 0, i32 17
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %12, i32 0, i32 18
  store i32 1, i32* %53, align 4
  %54 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %12, i32 0, i32 19
  invoke void @_ZN6VectorIN6Router10ConnectionEEC2Ev(%class.Vector.8* %54)
          to label %55 unwind label %102

; <label>:55:                                     ; preds = %51
  ret void

; <label>:56:                                     ; preds = %4
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %9, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %10, align 4
  br label %122

; <label>:60:                                     ; preds = %17
  %61 = landingpad { i8*, i32 }
          cleanup
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %9, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %10, align 4
  br label %121

; <label>:64:                                     ; preds = %20
  %65 = landingpad { i8*, i32 }
          cleanup
  %66 = extractvalue { i8*, i32 } %65, 0
  store i8* %66, i8** %9, align 8
  %67 = extractvalue { i8*, i32 } %65, 1
  store i32 %67, i32* %10, align 4
  br label %120

; <label>:68:                                     ; preds = %24
  %69 = landingpad { i8*, i32 }
          cleanup
  %70 = extractvalue { i8*, i32 } %69, 0
  store i8* %70, i8** %9, align 8
  %71 = extractvalue { i8*, i32 } %69, 1
  store i32 %71, i32* %10, align 4
  br label %119

; <label>:72:                                     ; preds = %32
  %73 = landingpad { i8*, i32 }
          cleanup
  %74 = extractvalue { i8*, i32 } %73, 0
  store i8* %74, i8** %9, align 8
  %75 = extractvalue { i8*, i32 } %73, 1
  store i32 %75, i32* %10, align 4
  br label %118

; <label>:76:                                     ; preds = %34
  %77 = landingpad { i8*, i32 }
          cleanup
  %78 = extractvalue { i8*, i32 } %77, 0
  store i8* %78, i8** %9, align 8
  %79 = extractvalue { i8*, i32 } %77, 1
  store i32 %79, i32* %10, align 4
  br label %117

; <label>:80:                                     ; preds = %36
  %81 = landingpad { i8*, i32 }
          cleanup
  %82 = extractvalue { i8*, i32 } %81, 0
  store i8* %82, i8** %9, align 8
  %83 = extractvalue { i8*, i32 } %81, 1
  store i32 %83, i32* %10, align 4
  br label %116

; <label>:84:                                     ; preds = %38
  %85 = landingpad { i8*, i32 }
          cleanup
  %86 = extractvalue { i8*, i32 } %85, 0
  store i8* %86, i8** %9, align 8
  %87 = extractvalue { i8*, i32 } %85, 1
  store i32 %87, i32* %10, align 4
  br label %115

; <label>:88:                                     ; preds = %40
  %89 = landingpad { i8*, i32 }
          cleanup
  %90 = extractvalue { i8*, i32 } %89, 0
  store i8* %90, i8** %9, align 8
  %91 = extractvalue { i8*, i32 } %89, 1
  store i32 %91, i32* %10, align 4
  br label %114

; <label>:92:                                     ; preds = %46
  %93 = landingpad { i8*, i32 }
          cleanup
  %94 = extractvalue { i8*, i32 } %93, 0
  store i8* %94, i8** %9, align 8
  %95 = extractvalue { i8*, i32 } %93, 1
  store i32 %95, i32* %10, align 4
  %96 = icmp eq %class.Vector.5* %44, %47
  br i1 %96, label %101, label %97

; <label>:97:                                     ; preds = %97, %92
  %98 = phi %class.Vector.5* [ %47, %92 ], [ %99, %97 ]
  %99 = getelementptr inbounds %class.Vector.5, %class.Vector.5* %98, i64 -1
  call void @_ZN6VectorIiED2Ev(%class.Vector.5* %99) #9
  %100 = icmp eq %class.Vector.5* %99, %44
  br i1 %100, label %101, label %97

; <label>:101:                                    ; preds = %97, %92
  br label %113

; <label>:102:                                    ; preds = %51
  %103 = landingpad { i8*, i32 }
          cleanup
  %104 = extractvalue { i8*, i32 } %103, 0
  store i8* %104, i8** %9, align 8
  %105 = extractvalue { i8*, i32 } %103, 1
  store i32 %105, i32* %10, align 4
  %106 = getelementptr inbounds [2 x %class.Vector.5], [2 x %class.Vector.5]* %43, i32 0, i32 0
  %107 = getelementptr inbounds %class.Vector.5, %class.Vector.5* %106, i64 2
  br label %108

; <label>:108:                                    ; preds = %108, %102
  %109 = phi %class.Vector.5* [ %107, %102 ], [ %110, %108 ]
  %110 = getelementptr inbounds %class.Vector.5, %class.Vector.5* %109, i64 -1
  call void @_ZN6VectorIiED2Ev(%class.Vector.5* %110) #9
  %111 = icmp eq %class.Vector.5* %110, %106
  br i1 %111, label %112, label %108

; <label>:112:                                    ; preds = %108
  br label %113

; <label>:113:                                    ; preds = %112, %101
  call void @_ZN6VectorIjED2Ev(%class.Vector.2* %41) #9
  br label %114

; <label>:114:                                    ; preds = %113, %88
  call void @_ZN6VectorI6StringED2Ev(%class.Vector.0* %39) #9
  br label %115

; <label>:115:                                    ; preds = %114, %84
  call void @_ZN6VectorI6StringED2Ev(%class.Vector.0* %37) #9
  br label %116

; <label>:116:                                    ; preds = %115, %80
  call void @_ZN6VectorI6StringED2Ev(%class.Vector.0* %35) #9
  br label %117

; <label>:117:                                    ; preds = %116, %76
  call void @_ZN6VectorIiED2Ev(%class.Vector.5* %33) #9
  br label %118

; <label>:118:                                    ; preds = %117, %72
  call void @_ZN9HashTableI6StringiED2Ev(%class.HashTable* %31) #9
  br label %119

; <label>:119:                                    ; preds = %118, %68
  call void @_ZN19VariableEnvironmentD2Ev(%class.VariableEnvironment* %22) #9
  br label %120

; <label>:120:                                    ; preds = %119, %64
  call void @_ZN6StringD2Ev(%class.String* %18) #9
  br label %121

; <label>:121:                                    ; preds = %120, %60
  call void @_ZN6StringD2Ev(%class.String* %15) #9
  br label %122

; <label>:122:                                    ; preds = %121, %56
  %123 = bitcast %"class.Lexer::Compound"* %12 to %class.Element*
  call void @_ZN7ElementD2Ev(%class.Element* %123) #9
  br label %124

; <label>:124:                                    ; preds = %122
  %125 = load i8*, i8** %9, align 8
  %126 = load i32, i32* %10, align 4
  %127 = insertvalue { i8*, i32 } undef, i8* %125, 0
  %128 = insertvalue { i8*, i32 } %127, i32 %126, 1
  resume { i8*, i32 } %128
}

declare void @_ZN7ElementC2Ev(%class.Element*) unnamed_addr #3

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6StringC2ERKS_(%class.String*, %class.String* dereferenceable(24)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %class.String*, align 8
  %4 = alloca %class.String*, align 8
  store %class.String* %0, %class.String** %3, align 8
  store %class.String* %1, %class.String** %4, align 8
  %5 = load %class.String*, %class.String** %3, align 8
  %6 = getelementptr inbounds %class.String, %class.String* %5, i32 0, i32 0
  %7 = load %class.String*, %class.String** %4, align 8
  call void @_ZNK6String6assignERKS_(%class.String* %5, %class.String* dereferenceable(24) %7)
  ret void
}

declare i32 @__gxx_personality_v0(...)

declare void @_ZN19VariableEnvironmentC1EPS_(%class.VariableEnvironment*, %class.VariableEnvironment*) unnamed_addr #3

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN9HashTableI6StringiEC2ERKi(%class.HashTable*, i32* dereferenceable(4)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %class.HashTable*, align 8
  %4 = alloca i32*, align 8
  store %class.HashTable* %0, %class.HashTable** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %class.HashTable*, %class.HashTable** %3, align 8
  %6 = getelementptr inbounds %class.HashTable, %class.HashTable* %5, i32 0, i32 0
  call void @_ZN9HashTableI4PairIK6StringiEvEC2Ev(%class.HashTable.13* %6)
  %7 = getelementptr inbounds %class.HashTable, %class.HashTable* %5, i32 0, i32 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %7, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6VectorIiEC2Ev(%class.Vector.5*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %class.Vector.5*, align 8
  store %class.Vector.5* %0, %class.Vector.5** %2, align 8
  %3 = load %class.Vector.5*, %class.Vector.5** %2, align 8
  %4 = getelementptr inbounds %class.Vector.5, %class.Vector.5* %3, i32 0, i32 0
  call void @_ZN13vector_memoryI18sized_array_memoryILm4EEEC2Ev(%class.vector_memory.3* %4)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6VectorI6StringEC2Ev(%class.Vector.0*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %class.Vector.0*, align 8
  store %class.Vector.0* %0, %class.Vector.0** %2, align 8
  %3 = load %class.Vector.0*, %class.Vector.0** %2, align 8
  %4 = getelementptr inbounds %class.Vector.0, %class.Vector.0* %3, i32 0, i32 0
  call void @_ZN13vector_memoryI18typed_array_memoryI6StringEEC2Ev(%class.vector_memory.1* %4)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6VectorIjEC2Ev(%class.Vector.2*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %class.Vector.2*, align 8
  store %class.Vector.2* %0, %class.Vector.2** %2, align 8
  %3 = load %class.Vector.2*, %class.Vector.2** %2, align 8
  %4 = getelementptr inbounds %class.Vector.2, %class.Vector.2* %3, i32 0, i32 0
  call void @_ZN13vector_memoryI18sized_array_memoryILm4EEEC2Ev(%class.vector_memory.3* %4)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN6VectorIiED2Ev(%class.Vector.5*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.Vector.5*, align 8
  store %class.Vector.5* %0, %class.Vector.5** %2, align 8
  %3 = load %class.Vector.5*, %class.Vector.5** %2, align 8
  %4 = getelementptr inbounds %class.Vector.5, %class.Vector.5* %3, i32 0, i32 0
  call void @_ZN13vector_memoryI18sized_array_memoryILm4EEED2Ev(%class.vector_memory.3* %4) #9
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6VectorIN6Router10ConnectionEEC2Ev(%class.Vector.8*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %class.Vector.8*, align 8
  store %class.Vector.8* %0, %class.Vector.8** %2, align 8
  %3 = load %class.Vector.8*, %class.Vector.8** %2, align 8
  %4 = getelementptr inbounds %class.Vector.8, %class.Vector.8* %3, i32 0, i32 0
  call void @_ZN13vector_memoryI18sized_array_memoryILm16EEEC2Ev(%class.vector_memory.9* %4)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN6VectorIjED2Ev(%class.Vector.2*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.Vector.2*, align 8
  store %class.Vector.2* %0, %class.Vector.2** %2, align 8
  %3 = load %class.Vector.2*, %class.Vector.2** %2, align 8
  %4 = getelementptr inbounds %class.Vector.2, %class.Vector.2* %3, i32 0, i32 0
  call void @_ZN13vector_memoryI18sized_array_memoryILm4EEED2Ev(%class.vector_memory.3* %4) #9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN6VectorI6StringED2Ev(%class.Vector.0*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.Vector.0*, align 8
  store %class.Vector.0* %0, %class.Vector.0** %2, align 8
  %3 = load %class.Vector.0*, %class.Vector.0** %2, align 8
  %4 = getelementptr inbounds %class.Vector.0, %class.Vector.0* %3, i32 0, i32 0
  call void @_ZN13vector_memoryI18typed_array_memoryI6StringEED2Ev(%class.vector_memory.1* %4) #9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN9HashTableI6StringiED2Ev(%class.HashTable*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.HashTable*, align 8
  store %class.HashTable* %0, %class.HashTable** %2, align 8
  %3 = load %class.HashTable*, %class.HashTable** %2, align 8
  %4 = getelementptr inbounds %class.HashTable, %class.HashTable* %3, i32 0, i32 0
  call void @_ZN9HashTableI4PairIK6StringiEvED2Ev(%class.HashTable.13* %4) #9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN19VariableEnvironmentD2Ev(%class.VariableEnvironment*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.VariableEnvironment*, align 8
  store %class.VariableEnvironment* %0, %class.VariableEnvironment** %2, align 8
  %3 = load %class.VariableEnvironment*, %class.VariableEnvironment** %2, align 8
  %4 = bitcast %class.VariableEnvironment* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV19VariableEnvironment, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.VariableEnvironment, %class.VariableEnvironment* %3, i32 0, i32 2
  call void @_ZN6VectorI6StringED2Ev(%class.Vector.0* %5) #9
  %6 = getelementptr inbounds %class.VariableEnvironment, %class.VariableEnvironment* %3, i32 0, i32 1
  call void @_ZN6VectorI6StringED2Ev(%class.Vector.0* %6) #9
  %7 = bitcast %class.VariableEnvironment* %3 to %class.VariableExpander*
  call void @_ZN16VariableExpanderD2Ev(%class.VariableExpander* %7) #9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN6StringD2Ev(%class.String*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.String*, align 8
  store %class.String* %0, %class.String** %2, align 8
  %3 = load %class.String*, %class.String** %2, align 8
  invoke void @_ZNK6String5derefEv(%class.String* %3)
          to label %4 unwind label %5

; <label>:4:                                      ; preds = %1
  ret void

; <label>:5:                                      ; preds = %1
  %6 = landingpad { i8*, i32 }
          catch i8* null
  %7 = extractvalue { i8*, i32 } %6, 0
  call void @__clang_call_terminate(i8* %7) #12
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN7ElementD2Ev(%class.Element*) unnamed_addr #4

; Function Attrs: noinline optnone uwtable
define i8* @_ZN5Lexer8Compound20printable_name_c_strEv(%"class.Lexer::Compound"*) #2 align 2 {
  %2 = alloca i8*, align 8
  %3 = alloca %"class.Lexer::Compound"*, align 8
  store %"class.Lexer::Compound"* %0, %"class.Lexer::Compound"** %3, align 8
  %4 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %3, align 8
  %5 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %4, i32 0, i32 1
  %6 = call { i64, i64 } @_ZNK6StringcvMS_KFivEEv(%class.String* %5)
  %7 = extractvalue { i64, i64 } %6, 0
  %8 = icmp ne i64 %7, 0
  br i1 %8, label %9, label %12

; <label>:9:                                      ; preds = %1
  %10 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %4, i32 0, i32 1
  %11 = call i8* @_ZNK6String5c_strEv(%class.String* %10)
  store i8* %11, i8** %2, align 8
  br label %13

; <label>:12:                                     ; preds = %1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i8** %2, align 8
  br label %13

; <label>:13:                                     ; preds = %12, %9
  %14 = load i8*, i8** %2, align 8
  ret i8* %14
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr { i64, i64 } @_ZNK6StringcvMS_KFivEEv(%class.String*) #0 comdat align 2 {
  %2 = alloca %class.String*, align 8
  store %class.String* %0, %class.String** %2, align 8
  %3 = load %class.String*, %class.String** %2, align 8
  %4 = getelementptr inbounds %class.String, %class.String* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %4, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp ne i32 %6, 0
  %8 = zext i1 %7 to i64
  %9 = select i1 %7, { i64, i64 } { i64 ptrtoint (i32 (%class.String*)* @_ZNK6String6lengthEv to i64), i64 0 }, { i64, i64 } zeroinitializer
  ret { i64, i64 } %9
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr i8* @_ZNK6String5c_strEv(%class.String*) #2 comdat align 2 {
  %2 = alloca %class.String*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store %class.String* %0, %class.String** %2, align 8
  %5 = load %class.String*, %class.String** %2, align 8
  %6 = getelementptr inbounds %class.String, %class.String* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %6, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %class.String, %class.String* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i8, i8* %8, i64 %12
  store i8* %13, i8** %3, align 8
  %14 = getelementptr inbounds %class.String, %class.String* %5, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %14, i32 0, i32 2
  %16 = load %"struct.String::memo_t"*, %"struct.String::memo_t"** %15, align 8
  %17 = icmp ne %"struct.String::memo_t"* %16, null
  br i1 %17, label %18, label %33

; <label>:18:                                     ; preds = %1
  %19 = load i8*, i8** %3, align 8
  %20 = getelementptr inbounds %class.String, %class.String* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %20, i32 0, i32 2
  %22 = load %"struct.String::memo_t"*, %"struct.String::memo_t"** %21, align 8
  %23 = getelementptr inbounds %"struct.String::memo_t", %"struct.String::memo_t"* %22, i32 0, i32 3
  %24 = getelementptr inbounds [8 x i8], [8 x i8]* %23, i32 0, i32 0
  %25 = getelementptr inbounds %class.String, %class.String* %5, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %25, i32 0, i32 2
  %27 = load %"struct.String::memo_t"*, %"struct.String::memo_t"** %26, align 8
  %28 = getelementptr inbounds %"struct.String::memo_t", %"struct.String::memo_t"* %27, i32 0, i32 2
  %29 = load volatile i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %24, i64 %30
  %32 = icmp uge i8* %19, %31
  br i1 %32, label %38, label %33

; <label>:33:                                     ; preds = %18, %1
  %34 = load i8*, i8** %3, align 8
  %35 = load i8, i8* %34, align 1
  %36 = sext i8 %35 to i32
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %49

; <label>:38:                                     ; preds = %33, %18
  %39 = call i8* @_ZN6String20append_uninitializedEi(%class.String* %5, i32 1)
  store i8* %39, i8** %4, align 8
  %40 = load i8*, i8** %4, align 8
  %41 = icmp ne i8* %40, null
  br i1 %41, label %42, label %48

; <label>:42:                                     ; preds = %38
  %43 = load i8*, i8** %4, align 8
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %class.String, %class.String* %5, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %44, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = add nsw i32 %46, -1
  store i32 %47, i32* %45, align 8
  br label %48

; <label>:48:                                     ; preds = %42, %38
  br label %49

; <label>:49:                                     ; preds = %48, %33
  %50 = getelementptr inbounds %class.String, %class.String* %5, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %50, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  ret i8* %52
}

; Function Attrs: noinline optnone uwtable
define i8* @_ZN5Lexer8Compound4castEPKc(%"class.Lexer::Compound"*, i8*) unnamed_addr #2 align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca %"class.Lexer::Compound"*, align 8
  %5 = alloca i8*, align 8
  store %"class.Lexer::Compound"* %0, %"class.Lexer::Compound"** %4, align 8
  store i8* %1, i8** %5, align 8
  %6 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %4, align 8
  %7 = load i8*, i8** %5, align 8
  %8 = call i32 @strcmp(i8* %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0)) #13
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %14, label %10

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %6, i32 0, i32 1
  %12 = load i8*, i8** %5, align 8
  %13 = call zeroext i1 @_ZeqRK6StringPKc(%class.String* dereferenceable(24) %11, i8* %12)
  br i1 %13, label %14, label %16

; <label>:14:                                     ; preds = %10, %2
  %15 = bitcast %"class.Lexer::Compound"* %6 to i8*
  store i8* %15, i8** %3, align 8
  br label %17

; <label>:16:                                     ; preds = %10
  store i8* null, i8** %3, align 8
  br label %17

; <label>:17:                                     ; preds = %16, %14
  %18 = load i8*, i8** %3, align 8
  ret i8* %18
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #5

; Function Attrs: noinline optnone uwtable
define linkonce_odr zeroext i1 @_ZeqRK6StringPKc(%class.String* dereferenceable(24), i8*) #2 comdat {
  %3 = alloca i1, align 1
  %4 = alloca %class.String*, align 8
  %5 = alloca i8*, align 8
  store %class.String* %0, %class.String** %4, align 8
  store i8* %1, i8** %5, align 8
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %8, label %16

; <label>:8:                                      ; preds = %2
  br i1 false, label %9, label %16

; <label>:9:                                      ; preds = %8
  %10 = load %class.String*, %class.String** %4, align 8
  %11 = load i8*, i8** %5, align 8
  %12 = load i8*, i8** %5, align 8
  %13 = call i64 @strlen(i8* %12) #13
  %14 = trunc i64 %13 to i32
  %15 = call zeroext i1 @_ZNK6String6equalsEPKci(%class.String* %10, i8* %11, i32 %14)
  store i1 %15, i1* %3, align 1
  br label %20

; <label>:16:                                     ; preds = %8, %2
  %17 = load %class.String*, %class.String** %4, align 8
  %18 = load i8*, i8** %5, align 8
  %19 = call zeroext i1 @_ZNK6String6equalsEPKci(%class.String* %17, i8* %18, i32 -1)
  store i1 %19, i1* %3, align 1
  br label %20

; <label>:20:                                     ; preds = %16, %9
  %21 = load i1, i1* %3, align 1
  ret i1 %21
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer8Compound7connectEiiii(%"class.Lexer::Compound"*, i32, i32, i32, i32) #2 align 2 {
  %6 = alloca %"class.Lexer::Compound"*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %"struct.Router::Connection", align 4
  store %"class.Lexer::Compound"* %0, %"class.Lexer::Compound"** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %12 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %6, align 8
  %13 = load i32, i32* %8, align 4
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %15, label %16

; <label>:15:                                     ; preds = %5
  store i32 0, i32* %8, align 4
  br label %16

; <label>:16:                                     ; preds = %15, %5
  %17 = load i32, i32* %10, align 4
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %19, label %20

; <label>:19:                                     ; preds = %16
  store i32 0, i32* %10, align 4
  br label %20

; <label>:20:                                     ; preds = %19, %16
  %21 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %12, i32 0, i32 19
  %22 = load i32, i32* %7, align 4
  %23 = load i32, i32* %8, align 4
  %24 = load i32, i32* %9, align 4
  %25 = load i32, i32* %10, align 4
  call void @_ZN6Router10ConnectionC2Eiiii(%"struct.Router::Connection"* %11, i32 %22, i32 %23, i32 %24, i32 %25)
  call void @_ZN6VectorIN6Router10ConnectionEE9push_backI13fast_argumentIS1_Lb1EEEENT_23enable_rvalue_referenceEOS1_(%class.Vector.8* %21, %"struct.Router::Connection"* dereferenceable(16) %11)
  %26 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %12, i32 0, i32 16
  %27 = getelementptr inbounds [2 x %class.Vector.5], [2 x %class.Vector.5]* %26, i64 0, i64 0
  %28 = load i32, i32* %9, align 4
  %29 = call dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %27, i32 %28)
  %30 = load i32, i32* %29, align 4
  %31 = load i32, i32* %10, align 4
  %32 = icmp sle i32 %30, %31
  br i1 %32, label %33, label %40

; <label>:33:                                     ; preds = %20
  %34 = load i32, i32* %10, align 4
  %35 = add nsw i32 %34, 1
  %36 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %12, i32 0, i32 16
  %37 = getelementptr inbounds [2 x %class.Vector.5], [2 x %class.Vector.5]* %36, i64 0, i64 0
  %38 = load i32, i32* %9, align 4
  %39 = call dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %37, i32 %38)
  store i32 %35, i32* %39, align 4
  br label %40

; <label>:40:                                     ; preds = %33, %20
  %41 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %12, i32 0, i32 16
  %42 = getelementptr inbounds [2 x %class.Vector.5], [2 x %class.Vector.5]* %41, i64 0, i64 1
  %43 = load i32, i32* %7, align 4
  %44 = call dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %42, i32 %43)
  %45 = load i32, i32* %44, align 4
  %46 = load i32, i32* %8, align 4
  %47 = icmp sle i32 %45, %46
  br i1 %47, label %48, label %55

; <label>:48:                                     ; preds = %40
  %49 = load i32, i32* %8, align 4
  %50 = add nsw i32 %49, 1
  %51 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %12, i32 0, i32 16
  %52 = getelementptr inbounds [2 x %class.Vector.5], [2 x %class.Vector.5]* %51, i64 0, i64 1
  %53 = load i32, i32* %7, align 4
  %54 = call dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %52, i32 %53)
  store i32 %50, i32* %54, align 4
  br label %55

; <label>:55:                                     ; preds = %48, %40
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6VectorIN6Router10ConnectionEE9push_backI13fast_argumentIS1_Lb1EEEENT_23enable_rvalue_referenceEOS1_(%class.Vector.8*, %"struct.Router::Connection"* dereferenceable(16)) #2 comdat align 2 {
  %3 = alloca %class.Vector.8*, align 8
  %4 = alloca %"struct.Router::Connection"*, align 8
  store %class.Vector.8* %0, %class.Vector.8** %3, align 8
  store %"struct.Router::Connection"* %1, %"struct.Router::Connection"** %4, align 8
  %5 = load %class.Vector.8*, %class.Vector.8** %3, align 8
  %6 = getelementptr inbounds %class.Vector.8, %class.Vector.8* %5, i32 0, i32 0
  %7 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %4, align 8
  %8 = call %struct.char_array.10* @_ZN18sized_array_memoryILm16EE4castIN6Router10ConnectionEEEP10char_arrayILm16EEPT_(%"struct.Router::Connection"* %7)
  call void @_ZN13vector_memoryI18sized_array_memoryILm16EEE19move_construct_backEP10char_arrayILm16EE(%class.vector_memory.9* %6, %struct.char_array.10* %8)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6Router10ConnectionC2Eiiii(%"struct.Router::Connection"*, i32, i32, i32, i32) unnamed_addr #2 comdat align 2 {
  %6 = alloca %"struct.Router::Connection"*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %"struct.Router::Port", align 4
  %12 = alloca %"struct.Router::Port", align 4
  store %"struct.Router::Connection"* %0, %"struct.Router::Connection"** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %13 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %6, align 8
  %14 = getelementptr inbounds %"struct.Router::Connection", %"struct.Router::Connection"* %13, i32 0, i32 0
  %15 = getelementptr inbounds [2 x %"struct.Router::Port"], [2 x %"struct.Router::Port"]* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %15, i64 2
  br label %17

; <label>:17:                                     ; preds = %17, %5
  %18 = phi %"struct.Router::Port"* [ %15, %5 ], [ %19, %17 ]
  call void @_ZN6Router4PortC2Ev(%"struct.Router::Port"* %18)
  %19 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %18, i64 1
  %20 = icmp eq %"struct.Router::Port"* %19, %16
  br i1 %20, label %21, label %17

; <label>:21:                                     ; preds = %17
  %22 = load i32, i32* %9, align 4
  %23 = load i32, i32* %10, align 4
  call void @_ZN6Router4PortC2Eii(%"struct.Router::Port"* %11, i32 %22, i32 %23)
  %24 = getelementptr inbounds %"struct.Router::Connection", %"struct.Router::Connection"* %13, i32 0, i32 0
  %25 = getelementptr inbounds [2 x %"struct.Router::Port"], [2 x %"struct.Router::Port"]* %24, i64 0, i64 0
  %26 = bitcast %"struct.Router::Port"* %25 to i8*
  %27 = bitcast %"struct.Router::Port"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 8, i32 4, i1 false)
  %28 = load i32, i32* %7, align 4
  %29 = load i32, i32* %8, align 4
  call void @_ZN6Router4PortC2Eii(%"struct.Router::Port"* %12, i32 %28, i32 %29)
  %30 = getelementptr inbounds %"struct.Router::Connection", %"struct.Router::Connection"* %13, i32 0, i32 0
  %31 = getelementptr inbounds [2 x %"struct.Router::Port"], [2 x %"struct.Router::Port"]* %30, i64 0, i64 1
  %32 = bitcast %"struct.Router::Port"* %31 to i8*
  %33 = bitcast %"struct.Router::Port"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 4, i1 false)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5*, i32) #0 comdat align 2 {
  %3 = alloca %class.Vector.5*, align 8
  %4 = alloca i32, align 4
  store %class.Vector.5* %0, %class.Vector.5** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Vector.5*, %class.Vector.5** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = getelementptr inbounds %class.Vector.5, %class.Vector.5* %5, i32 0, i32 0
  %8 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp ult i32 %6, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %2
  br label %14

; <label>:12:                                     ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.128, i32 0, i32 0), i32 288, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN6VectorIiEixEi, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %14

; <label>:14:                                     ; preds = %13, %11
  %15 = getelementptr inbounds %class.Vector.5, %class.Vector.5* %5, i32 0, i32 0
  %16 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %15, i32 0, i32 0
  %17 = load %struct.char_array.4*, %struct.char_array.4** %16, align 8
  %18 = load i32, i32* %4, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %struct.char_array.4, %struct.char_array.4* %17, i64 %19
  %21 = bitcast %struct.char_array.4* %20 to i32*
  ret i32* %21
}

; Function Attrs: noinline optnone uwtable
define i32 @_ZNK5Lexer8Compound19check_pseudoelementEibPKcP12ErrorHandler(%"class.Lexer::Compound"*, i32, i1 zeroext, i8*, %class.ErrorHandler*) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %"class.Lexer::Compound"*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  %9 = alloca i8*, align 8
  %10 = alloca %class.ErrorHandler*, align 8
  %11 = alloca %class.Bitvector, align 8
  %12 = alloca %"struct.Router::Connection"*, align 8
  %13 = alloca i8*
  %14 = alloca i32
  %15 = alloca %"class.Bitvector::Bit", align 8
  %16 = alloca i32, align 4
  %17 = alloca %"class.Bitvector::Bit", align 8
  store %"class.Lexer::Compound"* %0, %"class.Lexer::Compound"** %6, align 8
  store i32 %1, i32* %7, align 4
  %18 = zext i1 %2 to i8
  store i8 %18, i8* %8, align 1
  store i8* %3, i8** %9, align 8
  store %class.ErrorHandler* %4, %class.ErrorHandler** %10, align 8
  %19 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %6, align 8
  %20 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %19, i32 0, i32 16
  %21 = load i8, i8* %8, align 1
  %22 = trunc i8 %21 to i1
  %23 = zext i1 %22 to i32
  %24 = sub nsw i32 1, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [2 x %class.Vector.5], [2 x %class.Vector.5]* %20, i64 0, i64 %25
  %27 = load i32, i32* %7, align 4
  %28 = call dereferenceable(4) i32* @_ZNK6VectorIiEixEi(%class.Vector.5* %26, i32 %27)
  %29 = load i32, i32* %28, align 4
  call void @_ZN9BitvectorC2Ei(%class.Bitvector* %11, i32 %29)
  %30 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %19, i32 0, i32 19
  %31 = invoke %"struct.Router::Connection"* @_ZNK6VectorIN6Router10ConnectionEE5beginEv(%class.Vector.8* %30)
          to label %32 unwind label %70

; <label>:32:                                     ; preds = %5
  store %"struct.Router::Connection"* %31, %"struct.Router::Connection"** %12, align 8
  br label %33

; <label>:33:                                     ; preds = %75, %32
  %34 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %12, align 8
  %35 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %19, i32 0, i32 19
  %36 = invoke %"struct.Router::Connection"* @_ZNK6VectorIN6Router10ConnectionEE3endEv(%class.Vector.8* %35)
          to label %37 unwind label %70

; <label>:37:                                     ; preds = %33
  %38 = icmp ne %"struct.Router::Connection"* %34, %36
  br i1 %38, label %39, label %78

; <label>:39:                                     ; preds = %37
  %40 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %12, align 8
  %41 = load i8, i8* %8, align 1
  %42 = trunc i8 %41 to i1
  %43 = zext i1 %42 to i32
  %44 = sub nsw i32 1, %43
  %45 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZNK6Router10ConnectionixEi(%"struct.Router::Connection"* %40, i32 %44)
          to label %46 unwind label %70

; <label>:46:                                     ; preds = %39
  %47 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %45, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = load i32, i32* %7, align 4
  %50 = icmp eq i32 %48, %49
  br i1 %50, label %51, label %74

; <label>:51:                                     ; preds = %46
  %52 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %12, align 8
  %53 = load i8, i8* %8, align 1
  %54 = trunc i8 %53 to i1
  %55 = zext i1 %54 to i32
  %56 = sub nsw i32 1, %55
  %57 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZNK6Router10ConnectionixEi(%"struct.Router::Connection"* %52, i32 %56)
          to label %58 unwind label %70

; <label>:58:                                     ; preds = %51
  %59 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %57, i32 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = invoke { i32*, i32 } @_ZN9BitvectorixEi(%class.Bitvector* %11, i32 %60)
          to label %62 unwind label %70

; <label>:62:                                     ; preds = %58
  %63 = bitcast %"class.Bitvector::Bit"* %15 to { i32*, i32 }*
  %64 = getelementptr inbounds { i32*, i32 }, { i32*, i32 }* %63, i32 0, i32 0
  %65 = extractvalue { i32*, i32 } %61, 0
  store i32* %65, i32** %64, align 8
  %66 = getelementptr inbounds { i32*, i32 }, { i32*, i32 }* %63, i32 0, i32 1
  %67 = extractvalue { i32*, i32 } %61, 1
  store i32 %67, i32* %66, align 8
  %68 = invoke dereferenceable(16) %"class.Bitvector::Bit"* @_ZN9Bitvector3BitaSEb(%"class.Bitvector::Bit"* %15, i1 zeroext true)
          to label %69 unwind label %70

; <label>:69:                                     ; preds = %62
  br label %74

; <label>:70:                                     ; preds = %138, %123, %115, %112, %107, %89, %78, %62, %58, %51, %39, %33, %5
  %71 = landingpad { i8*, i32 }
          cleanup
  %72 = extractvalue { i8*, i32 } %71, 0
  store i8* %72, i8** %13, align 8
  %73 = extractvalue { i8*, i32 } %71, 1
  store i32 %73, i32* %14, align 4
  call void @_ZN9BitvectorD2Ev(%class.Bitvector* %11) #9
  br label %141

; <label>:74:                                     ; preds = %69, %46
  br label %75

; <label>:75:                                     ; preds = %74
  %76 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %12, align 8
  %77 = getelementptr inbounds %"struct.Router::Connection", %"struct.Router::Connection"* %76, i32 1
  store %"struct.Router::Connection"* %77, %"struct.Router::Connection"** %12, align 8
  br label %33

; <label>:78:                                     ; preds = %37
  %79 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %19, i32 0, i32 16
  %80 = load i8, i8* %8, align 1
  %81 = trunc i8 %80 to i1
  %82 = zext i1 %81 to i64
  %83 = getelementptr inbounds [2 x %class.Vector.5], [2 x %class.Vector.5]* %79, i64 0, i64 %82
  %84 = load i32, i32* %7, align 4
  %85 = invoke dereferenceable(4) i32* @_ZNK6VectorIiEixEi(%class.Vector.5* %83, i32 %84)
          to label %86 unwind label %70

; <label>:86:                                     ; preds = %78
  %87 = load i32, i32* %85, align 4
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %89, label %106

; <label>:89:                                     ; preds = %86
  %90 = load %class.ErrorHandler*, %class.ErrorHandler** %10, align 8
  %91 = load i8*, i8** %9, align 8
  %92 = load i8, i8* %8, align 1
  %93 = trunc i8 %92 to i1
  %94 = zext i1 %93 to i64
  %95 = getelementptr inbounds [2 x i8*], [2 x i8*]* @_ZL10port_names, i64 0, i64 %94
  %96 = load i8*, i8** %95, align 8
  %97 = load i8, i8* %8, align 1
  %98 = trunc i8 %97 to i1
  %99 = zext i1 %98 to i32
  %100 = sub nsw i32 1, %99
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [2 x i8*], [2 x i8*]* @_ZL10port_names, i64 0, i64 %101
  %103 = load i8*, i8** %102, align 8
  %104 = invoke i32 (%class.ErrorHandler*, i8*, ...) @_ZN12ErrorHandler5errorEPKcz(%class.ErrorHandler* %90, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4, i32 0, i32 0), i8* %91, i8* %96, i8* %103)
          to label %105 unwind label %70

; <label>:105:                                    ; preds = %89
  br label %106

; <label>:106:                                    ; preds = %105, %86
  store i32 0, i32* %16, align 4
  br label %107

; <label>:107:                                    ; preds = %135, %106
  %108 = load i32, i32* %16, align 4
  %109 = invoke i32 @_ZNK9Bitvector4sizeEv(%class.Bitvector* %11)
          to label %110 unwind label %70

; <label>:110:                                    ; preds = %107
  %111 = icmp slt i32 %108, %109
  br i1 %111, label %112, label %138

; <label>:112:                                    ; preds = %110
  %113 = load i32, i32* %16, align 4
  %114 = invoke { i32*, i32 } @_ZN9BitvectorixEi(%class.Bitvector* %11, i32 %113)
          to label %115 unwind label %70

; <label>:115:                                    ; preds = %112
  %116 = bitcast %"class.Bitvector::Bit"* %17 to { i32*, i32 }*
  %117 = getelementptr inbounds { i32*, i32 }, { i32*, i32 }* %116, i32 0, i32 0
  %118 = extractvalue { i32*, i32 } %114, 0
  store i32* %118, i32** %117, align 8
  %119 = getelementptr inbounds { i32*, i32 }, { i32*, i32 }* %116, i32 0, i32 1
  %120 = extractvalue { i32*, i32 } %114, 1
  store i32 %120, i32* %119, align 8
  %121 = invoke zeroext i1 @_ZNK9Bitvector3BitcvbEv(%"class.Bitvector::Bit"* %17)
          to label %122 unwind label %70

; <label>:122:                                    ; preds = %115
  br i1 %121, label %134, label %123

; <label>:123:                                    ; preds = %122
  %124 = load %class.ErrorHandler*, %class.ErrorHandler** %10, align 8
  %125 = load i8*, i8** %9, align 8
  %126 = load i8, i8* %8, align 1
  %127 = trunc i8 %126 to i1
  %128 = zext i1 %127 to i64
  %129 = getelementptr inbounds [2 x i8*], [2 x i8*]* @_ZL10port_names, i64 0, i64 %128
  %130 = load i8*, i8** %129, align 8
  %131 = load i32, i32* %16, align 4
  %132 = invoke i32 (%class.ErrorHandler*, i8*, ...) @_ZN12ErrorHandler5errorEPKcz(%class.ErrorHandler* %124, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i32 0, i32 0), i8* %125, i8* %130, i32 %131)
          to label %133 unwind label %70

; <label>:133:                                    ; preds = %123
  br label %134

; <label>:134:                                    ; preds = %133, %122
  br label %135

; <label>:135:                                    ; preds = %134
  %136 = load i32, i32* %16, align 4
  %137 = add nsw i32 %136, 1
  store i32 %137, i32* %16, align 4
  br label %107

; <label>:138:                                    ; preds = %110
  %139 = invoke i32 @_ZNK9Bitvector4sizeEv(%class.Bitvector* %11)
          to label %140 unwind label %70

; <label>:140:                                    ; preds = %138
  call void @_ZN9BitvectorD2Ev(%class.Bitvector* %11) #9
  ret i32 %139

; <label>:141:                                    ; preds = %70
  %142 = load i8*, i8** %13, align 8
  %143 = load i32, i32* %14, align 4
  %144 = insertvalue { i8*, i32 } undef, i8* %142, 0
  %145 = insertvalue { i8*, i32 } %144, i32 %143, 1
  resume { i8*, i32 } %145
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNK6VectorIiEixEi(%class.Vector.5*, i32) #0 comdat align 2 {
  %3 = alloca %class.Vector.5*, align 8
  %4 = alloca i32, align 4
  store %class.Vector.5* %0, %class.Vector.5** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Vector.5*, %class.Vector.5** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = getelementptr inbounds %class.Vector.5, %class.Vector.5* %5, i32 0, i32 0
  %8 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp ult i32 %6, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %2
  br label %14

; <label>:12:                                     ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.128, i32 0, i32 0), i32 295, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZNK6VectorIiEixEi, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %14

; <label>:14:                                     ; preds = %13, %11
  %15 = getelementptr inbounds %class.Vector.5, %class.Vector.5* %5, i32 0, i32 0
  %16 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %15, i32 0, i32 0
  %17 = load %struct.char_array.4*, %struct.char_array.4** %16, align 8
  %18 = load i32, i32* %4, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %struct.char_array.4, %struct.char_array.4* %17, i64 %19
  %21 = bitcast %struct.char_array.4* %20 to i32*
  ret i32* %21
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN9BitvectorC2Ei(%class.Bitvector*, i32) unnamed_addr #2 comdat align 2 {
  %3 = alloca %class.Bitvector*, align 8
  %4 = alloca i32, align 4
  store %class.Bitvector* %0, %class.Bitvector** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Bitvector*, %class.Bitvector** %3, align 8
  %6 = getelementptr inbounds %class.Bitvector, %class.Bitvector* %5, i32 0, i32 1
  %7 = getelementptr inbounds %class.Bitvector, %class.Bitvector* %5, i32 0, i32 2
  %8 = getelementptr inbounds [2 x i32], [2 x i32]* %7, i32 0, i32 0
  store i32* %8, i32** %6, align 8
  %9 = load i32, i32* %4, align 4
  %10 = icmp sge i32 %9, 0
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %2
  br label %14

; <label>:12:                                     ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.113, i32 0, i32 0), i32 136, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__PRETTY_FUNCTION__._ZN9BitvectorC2Ei, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %14

; <label>:14:                                     ; preds = %13, %11
  %15 = load i32, i32* %4, align 4
  %16 = icmp sle i32 %15, 64
  br i1 %16, label %17, label %24

; <label>:17:                                     ; preds = %14
  %18 = load i32, i32* %4, align 4
  %19 = sub nsw i32 %18, 1
  %20 = getelementptr inbounds %class.Bitvector, %class.Bitvector* %5, i32 0, i32 0
  store i32 %19, i32* %20, align 8
  %21 = getelementptr inbounds %class.Bitvector, %class.Bitvector* %5, i32 0, i32 2
  %22 = getelementptr inbounds [2 x i32], [2 x i32]* %21, i32 0, i32 0
  %23 = bitcast i32* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* %23, i8 0, i64 8, i32 8, i1 false)
  br label %27

; <label>:24:                                     ; preds = %14
  %25 = getelementptr inbounds %class.Bitvector, %class.Bitvector* %5, i32 0, i32 0
  store i32 -1, i32* %25, align 8
  %26 = load i32, i32* %4, align 4
  call void @_ZN9Bitvector6resizeEi(%class.Bitvector* %5, i32 %26)
  br label %27

; <label>:27:                                     ; preds = %24, %17
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr %"struct.Router::Connection"* @_ZNK6VectorIN6Router10ConnectionEE5beginEv(%class.Vector.8*) #0 comdat align 2 {
  %2 = alloca %class.Vector.8*, align 8
  store %class.Vector.8* %0, %class.Vector.8** %2, align 8
  %3 = load %class.Vector.8*, %class.Vector.8** %2, align 8
  %4 = getelementptr inbounds %class.Vector.8, %class.Vector.8* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %4, i32 0, i32 0
  %6 = load %struct.char_array.10*, %struct.char_array.10** %5, align 8
  %7 = bitcast %struct.char_array.10* %6 to %"struct.Router::Connection"*
  ret %"struct.Router::Connection"* %7
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr %"struct.Router::Connection"* @_ZNK6VectorIN6Router10ConnectionEE3endEv(%class.Vector.8*) #0 comdat align 2 {
  %2 = alloca %class.Vector.8*, align 8
  store %class.Vector.8* %0, %class.Vector.8** %2, align 8
  %3 = load %class.Vector.8*, %class.Vector.8** %2, align 8
  %4 = getelementptr inbounds %class.Vector.8, %class.Vector.8* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %4, i32 0, i32 0
  %6 = load %struct.char_array.10*, %struct.char_array.10** %5, align 8
  %7 = bitcast %struct.char_array.10* %6 to %"struct.Router::Connection"*
  %8 = getelementptr inbounds %class.Vector.8, %class.Vector.8* %3, i32 0, i32 0
  %9 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.Router::Connection", %"struct.Router::Connection"* %7, i64 %11
  ret %"struct.Router::Connection"* %12
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(8) %"struct.Router::Port"* @_ZNK6Router10ConnectionixEi(%"struct.Router::Connection"*, i32) #0 comdat align 2 {
  %3 = alloca %"struct.Router::Connection"*, align 8
  %4 = alloca i32, align 4
  store %"struct.Router::Connection"* %0, %"struct.Router::Connection"** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = icmp sge i32 %6, 0
  br i1 %7, label %8, label %11

; <label>:8:                                      ; preds = %2
  %9 = load i32, i32* %4, align 4
  %10 = icmp slt i32 %9, 2
  br label %11

; <label>:11:                                     ; preds = %8, %2
  %12 = phi i1 [ false, %2 ], [ %10, %8 ]
  br i1 %12, label %13, label %14

; <label>:13:                                     ; preds = %11
  br label %16

; <label>:14:                                     ; preds = %11
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.115, i32 0, i32 0), i32 180, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZNK6Router10ConnectionixEi, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %16

; <label>:16:                                     ; preds = %15, %13
  %17 = getelementptr inbounds %"struct.Router::Connection", %"struct.Router::Connection"* %5, i32 0, i32 0
  %18 = load i32, i32* %4, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [2 x %"struct.Router::Port"], [2 x %"struct.Router::Port"]* %17, i64 0, i64 %19
  ret %"struct.Router::Port"* %20
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr { i32*, i32 } @_ZN9BitvectorixEi(%class.Bitvector*, i32) #2 comdat align 2 {
  %3 = alloca %"class.Bitvector::Bit", align 8
  %4 = alloca %class.Bitvector*, align 8
  %5 = alloca i32, align 4
  store %class.Bitvector* %0, %class.Bitvector** %4, align 8
  store i32 %1, i32* %5, align 4
  %6 = load %class.Bitvector*, %class.Bitvector** %4, align 8
  %7 = load i32, i32* %5, align 4
  %8 = icmp sge i32 %7, 0
  br i1 %8, label %9, label %14

; <label>:9:                                      ; preds = %2
  %10 = load i32, i32* %5, align 4
  %11 = getelementptr inbounds %class.Bitvector, %class.Bitvector* %6, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp sle i32 %10, %12
  br label %14

; <label>:14:                                     ; preds = %9, %2
  %15 = phi i1 [ false, %2 ], [ %13, %9 ]
  br i1 %15, label %16, label %17

; <label>:16:                                     ; preds = %14
  br label %19

; <label>:17:                                     ; preds = %14
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.113, i32 0, i32 0), i32 196, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__PRETTY_FUNCTION__._ZN9BitvectorixEi, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %19

; <label>:19:                                     ; preds = %18, %16
  %20 = getelementptr inbounds %class.Bitvector, %class.Bitvector* %6, i32 0, i32 1
  %21 = load i32*, i32** %20, align 8
  %22 = load i32, i32* %5, align 4
  %23 = ashr i32 %22, 5
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i32, i32* %21, i64 %24
  %26 = load i32, i32* %5, align 4
  %27 = and i32 %26, 31
  call void @_ZN9Bitvector3BitC2ERji(%"class.Bitvector::Bit"* %3, i32* dereferenceable(4) %25, i32 %27)
  %28 = bitcast %"class.Bitvector::Bit"* %3 to { i32*, i32 }*
  %29 = load { i32*, i32 }, { i32*, i32 }* %28, align 8
  ret { i32*, i32 } %29
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(16) %"class.Bitvector::Bit"* @_ZN9Bitvector3BitaSEb(%"class.Bitvector::Bit"*, i1 zeroext) #0 comdat align 2 {
  %3 = alloca %"class.Bitvector::Bit"*, align 8
  %4 = alloca i8, align 1
  store %"class.Bitvector::Bit"* %0, %"class.Bitvector::Bit"** %3, align 8
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  %6 = load %"class.Bitvector::Bit"*, %"class.Bitvector::Bit"** %3, align 8
  %7 = load i8, i8* %4, align 1
  %8 = trunc i8 %7 to i1
  br i1 %8, label %9, label %16

; <label>:9:                                      ; preds = %2
  %10 = getelementptr inbounds %"class.Bitvector::Bit", %"class.Bitvector::Bit"* %6, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.Bitvector::Bit", %"class.Bitvector::Bit"* %6, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = load i32, i32* %13, align 4
  %15 = or i32 %14, %11
  store i32 %15, i32* %13, align 4
  br label %24

; <label>:16:                                     ; preds = %2
  %17 = getelementptr inbounds %"class.Bitvector::Bit", %"class.Bitvector::Bit"* %6, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = xor i32 %18, -1
  %20 = getelementptr inbounds %"class.Bitvector::Bit", %"class.Bitvector::Bit"* %6, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, %19
  store i32 %23, i32* %21, align 4
  br label %24

; <label>:24:                                     ; preds = %16, %9
  ret %"class.Bitvector::Bit"* %6
}

declare i32 @_ZN12ErrorHandler5errorEPKcz(%class.ErrorHandler*, i8*, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr i32 @_ZNK9Bitvector4sizeEv(%class.Bitvector*) #0 comdat align 2 {
  %2 = alloca %class.Bitvector*, align 8
  store %class.Bitvector* %0, %class.Bitvector** %2, align 8
  %3 = load %class.Bitvector*, %class.Bitvector** %2, align 8
  %4 = getelementptr inbounds %class.Bitvector, %class.Bitvector* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, 1
  ret i32 %6
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr zeroext i1 @_ZNK9Bitvector3BitcvbEv(%"class.Bitvector::Bit"*) #0 comdat align 2 {
  %2 = alloca %"class.Bitvector::Bit"*, align 8
  store %"class.Bitvector::Bit"* %0, %"class.Bitvector::Bit"** %2, align 8
  %3 = load %"class.Bitvector::Bit"*, %"class.Bitvector::Bit"** %2, align 8
  %4 = getelementptr inbounds %"class.Bitvector::Bit", %"class.Bitvector::Bit"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.Bitvector::Bit", %"class.Bitvector::Bit"* %3, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %6, %8
  %10 = icmp ne i32 %9, 0
  ret i1 %10
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN9BitvectorD2Ev(%class.Bitvector*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.Bitvector*, align 8
  store %class.Bitvector* %0, %class.Bitvector** %2, align 8
  %3 = load %class.Bitvector*, %class.Bitvector** %2, align 8
  %4 = getelementptr inbounds %class.Bitvector, %class.Bitvector* %3, i32 0, i32 1
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds %class.Bitvector, %class.Bitvector* %3, i32 0, i32 2
  %7 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i32 0, i32 0
  %8 = icmp ne i32* %5, %7
  br i1 %8, label %9, label %16

; <label>:9:                                      ; preds = %1
  %10 = getelementptr inbounds %class.Bitvector, %class.Bitvector* %3, i32 0, i32 1
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %11, null
  br i1 %12, label %15, label %13

; <label>:13:                                     ; preds = %9
  %14 = bitcast i32* %11 to i8*
  call void @_ZdaPv(i8* %14) #14
  br label %15

; <label>:15:                                     ; preds = %13, %9
  br label %16

; <label>:16:                                     ; preds = %15, %1
  ret void
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer8Compound6finishEP12ErrorHandler(%"class.Lexer::Compound"*, %class.ErrorHandler*) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.Lexer::Compound"*, align 8
  %4 = alloca %class.ErrorHandler*, align 8
  %5 = alloca %class.LandmarkErrorHandler, align 8
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca i32, align 4
  %9 = alloca %class.String, align 8
  store %"class.Lexer::Compound"* %0, %"class.Lexer::Compound"** %3, align 8
  store %class.ErrorHandler* %1, %class.ErrorHandler** %4, align 8
  %10 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %3, align 8
  %11 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %10, i32 0, i32 12
  %12 = call dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %11, i32 0)
  %13 = call zeroext i1 @_ZeqRK6StringPKc(%class.String* dereferenceable(24) %12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0))
  br i1 %13, label %14, label %18

; <label>:14:                                     ; preds = %2
  %15 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %10, i32 0, i32 12
  %16 = call dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %15, i32 1)
  %17 = call zeroext i1 @_ZeqRK6StringPKc(%class.String* dereferenceable(24) %16, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0))
  br label %18

; <label>:18:                                     ; preds = %14, %2
  %19 = phi i1 [ false, %2 ], [ %17, %14 ]
  br i1 %19, label %20, label %21

; <label>:20:                                     ; preds = %18
  br label %23

; <label>:21:                                     ; preds = %18
  call void @__assert_fail(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i32 280, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__._ZN5Lexer8Compound6finishEP12ErrorHandler, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %23

; <label>:23:                                     ; preds = %22, %20
  %24 = load %class.ErrorHandler*, %class.ErrorHandler** %4, align 8
  %25 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %10, i32 0, i32 2
  call void @_ZN20LandmarkErrorHandlerC1EP12ErrorHandlerRK6String(%class.LandmarkErrorHandler* %5, %class.ErrorHandler* %24, %class.String* dereferenceable(24) %25)
  %26 = invoke i8* @_ZN5Lexer8Compound20printable_name_c_strEv(%"class.Lexer::Compound"* %10)
          to label %27 unwind label %56

; <label>:27:                                     ; preds = %23
  %28 = bitcast %class.LandmarkErrorHandler* %5 to %class.ErrorHandler*
  %29 = invoke i32 @_ZNK5Lexer8Compound19check_pseudoelementEibPKcP12ErrorHandler(%"class.Lexer::Compound"* %10, i32 0, i1 zeroext false, i8* %26, %class.ErrorHandler* %28)
          to label %30 unwind label %56

; <label>:30:                                     ; preds = %27
  %31 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %10, i32 0, i32 6
  store i32 %29, i32* %31, align 4
  %32 = invoke i8* @_ZN5Lexer8Compound20printable_name_c_strEv(%"class.Lexer::Compound"* %10)
          to label %33 unwind label %56

; <label>:33:                                     ; preds = %30
  %34 = bitcast %class.LandmarkErrorHandler* %5 to %class.ErrorHandler*
  %35 = invoke i32 @_ZNK5Lexer8Compound19check_pseudoelementEibPKcP12ErrorHandler(%"class.Lexer::Compound"* %10, i32 1, i1 zeroext true, i8* %32, %class.ErrorHandler* %34)
          to label %36 unwind label %56

; <label>:36:                                     ; preds = %33
  %37 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %10, i32 0, i32 7
  store i32 %35, i32* %37, align 8
  store i32 0, i32* %8, align 4
  br label %38

; <label>:38:                                     ; preds = %61, %36
  %39 = load i32, i32* %8, align 4
  %40 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %10, i32 0, i32 11
  %41 = invoke i32 @_ZNK6VectorIiE4sizeEv(%class.Vector.5* %40)
          to label %42 unwind label %56

; <label>:42:                                     ; preds = %38
  %43 = icmp slt i32 %39, %41
  br i1 %43, label %44, label %64

; <label>:44:                                     ; preds = %42
  %45 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %10, i32 0, i32 12
  %46 = load i32, i32* %8, align 4
  %47 = invoke dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %45, i32 %46)
          to label %48 unwind label %56

; <label>:48:                                     ; preds = %44
  %49 = invoke signext i8 @_ZNK6StringixEi(%class.String* %47, i32 0)
          to label %50 unwind label %56

; <label>:50:                                     ; preds = %48
  %51 = sext i8 %49 to i32
  %52 = icmp eq i32 %51, 59
  br i1 %52, label %53, label %60

; <label>:53:                                     ; preds = %50
  %54 = load i32, i32* %8, align 4
  invoke void @_ZN5Lexer8Compound24deanonymize_element_nameEi(%class.String* sret %9, %"class.Lexer::Compound"* %10, i32 %54)
          to label %55 unwind label %56

; <label>:55:                                     ; preds = %53
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  br label %60

; <label>:56:                                     ; preds = %53, %48, %44, %38, %33, %30, %27, %23
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %6, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %7, align 4
  call void @_ZN20LandmarkErrorHandlerD2Ev(%class.LandmarkErrorHandler* %5) #9
  br label %65

; <label>:60:                                     ; preds = %55, %50
  br label %61

; <label>:61:                                     ; preds = %60
  %62 = load i32, i32* %8, align 4
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %8, align 4
  br label %38

; <label>:64:                                     ; preds = %42
  call void @_ZN20LandmarkErrorHandlerD2Ev(%class.LandmarkErrorHandler* %5) #9
  ret void

; <label>:65:                                     ; preds = %56
  %66 = load i8*, i8** %6, align 8
  %67 = load i32, i32* %7, align 4
  %68 = insertvalue { i8*, i32 } undef, i8* %66, 0
  %69 = insertvalue { i8*, i32 } %68, i32 %67, 1
  resume { i8*, i32 } %69
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0*, i32) #0 comdat align 2 {
  %3 = alloca %class.Vector.0*, align 8
  %4 = alloca i32, align 4
  store %class.Vector.0* %0, %class.Vector.0** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Vector.0*, %class.Vector.0** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = getelementptr inbounds %class.Vector.0, %class.Vector.0* %5, i32 0, i32 0
  %8 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp ult i32 %6, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %2
  br label %14

; <label>:12:                                     ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.128, i32 0, i32 0), i32 288, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN6VectorI6StringEixEi, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %14

; <label>:14:                                     ; preds = %13, %11
  %15 = getelementptr inbounds %class.Vector.0, %class.Vector.0* %5, i32 0, i32 0
  %16 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %15, i32 0, i32 0
  %17 = load %class.String*, %class.String** %16, align 8
  %18 = load i32, i32* %4, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %class.String, %class.String* %17, i64 %19
  ret %class.String* %20
}

declare void @_ZN20LandmarkErrorHandlerC1EP12ErrorHandlerRK6String(%class.LandmarkErrorHandler*, %class.ErrorHandler*, %class.String* dereferenceable(24)) unnamed_addr #3

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr i32 @_ZNK6VectorIiE4sizeEv(%class.Vector.5*) #0 comdat align 2 {
  %2 = alloca %class.Vector.5*, align 8
  store %class.Vector.5* %0, %class.Vector.5** %2, align 8
  %3 = load %class.Vector.5*, %class.Vector.5** %2, align 8
  %4 = getelementptr inbounds %class.Vector.5, %class.Vector.5* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %4, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  ret i32 %6
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr signext i8 @_ZNK6StringixEi(%class.String*, i32) #0 comdat align 2 {
  %3 = alloca %class.String*, align 8
  %4 = alloca i32, align 4
  store %class.String* %0, %class.String** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.String*, %class.String** %3, align 8
  %6 = getelementptr inbounds %class.String, %class.String* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %6, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = load i32, i32* %4, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i8, i8* %8, i64 %10
  %12 = load i8, i8* %11, align 1
  ret i8 %12
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer8Compound24deanonymize_element_nameEi(%class.String* noalias sret, %"class.Lexer::Compound"*, i32) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.Lexer::Compound"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i1, align 1
  %7 = alloca i8*
  %8 = alloca i32
  %9 = alloca i32, align 4
  %10 = alloca %class.String, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %class.IntArg, align 4
  %15 = alloca %class.String, align 8
  %16 = alloca %class.String, align 8
  %17 = alloca %class.String, align 8
  %18 = alloca %class.String, align 8
  store %"class.Lexer::Compound"* %1, %"class.Lexer::Compound"** %4, align 8
  store i32 %2, i32* %5, align 4
  %19 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %4, align 8
  store i1 false, i1* %6, align 1
  %20 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %19, i32 0, i32 12
  %21 = load i32, i32* %5, align 4
  %22 = call dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %20, i32 %21)
  call void @_ZNK6String9substringEi(%class.String* sret %0, %class.String* %22, i32 1)
  %23 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %19, i32 0, i32 10
  %24 = invoke dereferenceable(4) i32* @_ZN9HashTableI6StringiEixERKS0_(%class.HashTable* %23, %class.String* dereferenceable(24) %0)
          to label %25 unwind label %35

; <label>:25:                                     ; preds = %3
  %26 = load i32, i32* %24, align 4
  %27 = icmp sge i32 %26, 0
  br i1 %27, label %28, label %113

; <label>:28:                                     ; preds = %25
  %29 = invoke i32 @_ZNK6String10find_rightEci(%class.String* %0, i8 signext 64, i32 2147483647)
          to label %30 unwind label %35

; <label>:30:                                     ; preds = %28
  store i32 %29, i32* %9, align 4
  %31 = load i32, i32* %9, align 4
  %32 = icmp sge i32 %31, 0
  br i1 %32, label %33, label %34

; <label>:33:                                     ; preds = %30
  br label %40

; <label>:34:                                     ; preds = %30
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i32 1147, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN5Lexer8Compound24deanonymize_element_nameEi, i32 0, i32 0)) #12
  unreachable

; <label>:35:                                     ; preds = %120, %116, %113, %40, %28, %3
  %36 = landingpad { i8*, i32 }
          cleanup
  %37 = extractvalue { i8*, i32 } %36, 0
  store i8* %37, i8** %7, align 8
  %38 = extractvalue { i8*, i32 } %36, 1
  store i32 %38, i32* %8, align 4
  br label %126
                                                  ; No predecessors!
  br label %40

; <label>:40:                                     ; preds = %39, %33
  %41 = load i32, i32* %9, align 4
  %42 = add nsw i32 %41, 1
  invoke void @_ZNK6String9substringEii(%class.String* sret %10, %class.String* %0, i32 0, i32 %42)
          to label %43 unwind label %35

; <label>:43:                                     ; preds = %40
  %44 = invoke i8* @_ZNK6String5beginEv(%class.String* %0)
          to label %45 unwind label %67

; <label>:45:                                     ; preds = %43
  %46 = load i32, i32* %9, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %44, i64 %47
  %49 = getelementptr inbounds i8, i8* %48, i64 1
  store i8* %49, i8** %11, align 8
  %50 = load i8*, i8** %11, align 8
  store i8* %50, i8** %12, align 8
  br label %51

; <label>:51:                                     ; preds = %64, %45
  %52 = load i8*, i8** %12, align 8
  %53 = invoke i8* @_ZNK6String3endEv(%class.String* %0)
          to label %54 unwind label %67

; <label>:54:                                     ; preds = %51
  %55 = icmp ult i8* %52, %53
  br i1 %55, label %56, label %62

; <label>:56:                                     ; preds = %54
  %57 = load i8*, i8** %12, align 8
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = call i32 @isdigit(i32 %59) #13
  %61 = icmp ne i32 %60, 0
  br label %62

; <label>:62:                                     ; preds = %56, %54
  %63 = phi i1 [ false, %54 ], [ %61, %56 ]
  br i1 %63, label %64, label %71

; <label>:64:                                     ; preds = %62
  %65 = load i8*, i8** %12, align 8
  %66 = getelementptr inbounds i8, i8* %65, i32 1
  store i8* %66, i8** %12, align 8
  br label %51

; <label>:67:                                     ; preds = %87, %78, %72, %71, %51, %43
  %68 = landingpad { i8*, i32 }
          cleanup
  %69 = extractvalue { i8*, i32 } %68, 0
  store i8* %69, i8** %7, align 8
  %70 = extractvalue { i8*, i32 } %68, 1
  store i32 %70, i32* %8, align 4
  br label %112

; <label>:71:                                     ; preds = %62
  store i32 0, i32* %13, align 4
  invoke void @_ZN6IntArgC2Ei(%class.IntArg* %14, i32 10)
          to label %72 unwind label %67

; <label>:72:                                     ; preds = %71
  %73 = load i8*, i8** %11, align 8
  %74 = load i8*, i8** %12, align 8
  invoke void @_ZNK6String9substringEPKcS1_(%class.String* sret %15, %class.String* %0, i8* %73, i8* %74)
          to label %75 unwind label %67

; <label>:75:                                     ; preds = %72
  %76 = invoke zeroext i1 @_ZN6IntArg5parseIiEEbRK6StringRT_RK10ArgContext(%class.IntArg* %14, %class.String* dereferenceable(24) %15, i32* dereferenceable(4) %13, %class.ArgContext* dereferenceable(32) @blank_args)
          to label %77 unwind label %94

; <label>:77:                                     ; preds = %75
  call void @_ZN6StringD2Ev(%class.String* %15) #9
  br label %78

; <label>:78:                                     ; preds = %90, %77
  %79 = load i32, i32* %13, align 4
  %80 = add nsw i32 %79, 1
  store i32 %80, i32* %13, align 4
  invoke void @_ZN6StringC2ERKS_(%class.String* %17, %class.String* dereferenceable(24) %10)
          to label %81 unwind label %67

; <label>:81:                                     ; preds = %78
  %82 = load i32, i32* %13, align 4
  invoke void @_ZN6StringC1Ei(%class.String* %18, i32 %82)
          to label %83 unwind label %98

; <label>:83:                                     ; preds = %81
  invoke void @_Zpl6StringRKS_(%class.String* sret %16, %class.String* %17, %class.String* dereferenceable(24) %18)
          to label %84 unwind label %102

; <label>:84:                                     ; preds = %83
  %85 = invoke dereferenceable(24) %class.String* @_ZN6StringaSEOS_(%class.String* %0, %class.String* dereferenceable(24) %16)
          to label %86 unwind label %106

; <label>:86:                                     ; preds = %84
  call void @_ZN6StringD2Ev(%class.String* %16) #9
  call void @_ZN6StringD2Ev(%class.String* %18) #9
  call void @_ZN6StringD2Ev(%class.String* %17) #9
  br label %87

; <label>:87:                                     ; preds = %86
  %88 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %19, i32 0, i32 10
  %89 = invoke dereferenceable(4) i32* @_ZN9HashTableI6StringiEixERKS0_(%class.HashTable* %88, %class.String* dereferenceable(24) %0)
          to label %90 unwind label %67

; <label>:90:                                     ; preds = %87
  %91 = load i32, i32* %89, align 4
  %92 = icmp sge i32 %91, 0
  br i1 %92, label %78, label %93

; <label>:93:                                     ; preds = %90
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  br label %113

; <label>:94:                                     ; preds = %75
  %95 = landingpad { i8*, i32 }
          cleanup
  %96 = extractvalue { i8*, i32 } %95, 0
  store i8* %96, i8** %7, align 8
  %97 = extractvalue { i8*, i32 } %95, 1
  store i32 %97, i32* %8, align 4
  call void @_ZN6StringD2Ev(%class.String* %15) #9
  br label %112

; <label>:98:                                     ; preds = %81
  %99 = landingpad { i8*, i32 }
          cleanup
  %100 = extractvalue { i8*, i32 } %99, 0
  store i8* %100, i8** %7, align 8
  %101 = extractvalue { i8*, i32 } %99, 1
  store i32 %101, i32* %8, align 4
  br label %111

; <label>:102:                                    ; preds = %83
  %103 = landingpad { i8*, i32 }
          cleanup
  %104 = extractvalue { i8*, i32 } %103, 0
  store i8* %104, i8** %7, align 8
  %105 = extractvalue { i8*, i32 } %103, 1
  store i32 %105, i32* %8, align 4
  br label %110

; <label>:106:                                    ; preds = %84
  %107 = landingpad { i8*, i32 }
          cleanup
  %108 = extractvalue { i8*, i32 } %107, 0
  store i8* %108, i8** %7, align 8
  %109 = extractvalue { i8*, i32 } %107, 1
  store i32 %109, i32* %8, align 4
  call void @_ZN6StringD2Ev(%class.String* %16) #9
  br label %110

; <label>:110:                                    ; preds = %106, %102
  call void @_ZN6StringD2Ev(%class.String* %18) #9
  br label %111

; <label>:111:                                    ; preds = %110, %98
  call void @_ZN6StringD2Ev(%class.String* %17) #9
  br label %112

; <label>:112:                                    ; preds = %111, %94, %67
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  br label %126

; <label>:113:                                    ; preds = %93, %25
  %114 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %19, i32 0, i32 10
  %115 = invoke zeroext i1 @_ZN9HashTableI6StringiE3setERKS0_RKi(%class.HashTable* %114, %class.String* dereferenceable(24) %0, i32* dereferenceable(4) %5)
          to label %116 unwind label %35

; <label>:116:                                    ; preds = %113
  %117 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %19, i32 0, i32 12
  %118 = load i32, i32* %5, align 4
  %119 = invoke dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %117, i32 %118)
          to label %120 unwind label %35

; <label>:120:                                    ; preds = %116
  %121 = invoke dereferenceable(24) %class.String* @_ZN6StringaSERKS_(%class.String* %119, %class.String* dereferenceable(24) %0)
          to label %122 unwind label %35

; <label>:122:                                    ; preds = %120
  store i1 true, i1* %6, align 1
  %123 = load i1, i1* %6, align 1
  br i1 %123, label %125, label %124

; <label>:124:                                    ; preds = %122
  call void @_ZN6StringD2Ev(%class.String* %0) #9
  br label %125

; <label>:125:                                    ; preds = %124, %122
  ret void

; <label>:126:                                    ; preds = %112, %35
  call void @_ZN6StringD2Ev(%class.String* %0) #9
  br label %127

; <label>:127:                                    ; preds = %126
  %128 = load i8*, i8** %7, align 8
  %129 = load i32, i32* %8, align 4
  %130 = insertvalue { i8*, i32 } undef, i8* %128, 0
  %131 = insertvalue { i8*, i32 } %130, i32 %129, 1
  resume { i8*, i32 } %131
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN20LandmarkErrorHandlerD2Ev(%class.LandmarkErrorHandler*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.LandmarkErrorHandler*, align 8
  store %class.LandmarkErrorHandler* %0, %class.LandmarkErrorHandler** %2, align 8
  %3 = load %class.LandmarkErrorHandler*, %class.LandmarkErrorHandler** %2, align 8
  %4 = bitcast %class.LandmarkErrorHandler* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTV20LandmarkErrorHandler, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.LandmarkErrorHandler, %class.LandmarkErrorHandler* %3, i32 0, i32 1
  call void @_ZN6StringD2Ev(%class.String* %5) #9
  %6 = bitcast %class.LandmarkErrorHandler* %3 to %class.ErrorVeneer*
  call void @_ZN11ErrorVeneerD2Ev(%class.ErrorVeneer* %6) #9
  ret void
}

; Function Attrs: noinline optnone uwtable
define i32 @_ZN5Lexer8Compound7resolveEPS_iiiR6VectorI6StringEP12ErrorHandlerRKS3_(%"class.Lexer::Compound"*, %class.Lexer*, i32, i32, i32, %class.Vector.0* dereferenceable(16), %class.ErrorHandler*, %class.String* dereferenceable(24)) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %9 = alloca i32, align 4
  %10 = alloca %"class.Lexer::Compound"*, align 8
  %11 = alloca %class.Lexer*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %class.Vector.0*, align 8
  %16 = alloca %class.ErrorHandler*, align 8
  %17 = alloca %class.String*, align 8
  %18 = alloca %"class.Lexer::Compound"*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %"class.Lexer::Compound"*, align 8
  %22 = alloca %class.String, align 8
  %23 = alloca i8*
  %24 = alloca i32
  %25 = alloca %class.ContextErrorHandler, align 8
  %26 = alloca %class.String, align 8
  store %"class.Lexer::Compound"* %0, %"class.Lexer::Compound"** %10, align 8
  store %class.Lexer* %1, %class.Lexer** %11, align 8
  store i32 %2, i32* %12, align 4
  store i32 %3, i32* %13, align 4
  store i32 %4, i32* %14, align 4
  store %class.Vector.0* %5, %class.Vector.0** %15, align 8
  store %class.ErrorHandler* %6, %class.ErrorHandler** %16, align 8
  store %class.String* %7, %class.String** %17, align 8
  %27 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %10, align 8
  store %"class.Lexer::Compound"* %27, %"class.Lexer::Compound"** %18, align 8
  store i32 -1, i32* %19, align 4
  store i32 0, i32* %20, align 4
  br label %28

; <label>:28:                                     ; preds = %82, %8
  %29 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %18, align 8
  %30 = icmp ne %"class.Lexer::Compound"* %29, null
  br i1 %30, label %31, label %83

; <label>:31:                                     ; preds = %28
  %32 = load i32, i32* %20, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %20, align 4
  %34 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %18, align 8
  %35 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %34, i32 0, i32 6
  %36 = load i32, i32* %35, align 4
  %37 = load i32, i32* %13, align 4
  %38 = icmp eq i32 %36, %37
  br i1 %38, label %39, label %53

; <label>:39:                                     ; preds = %31
  %40 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %18, align 8
  %41 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %40, i32 0, i32 7
  %42 = load i32, i32* %41, align 8
  %43 = load i32, i32* %14, align 4
  %44 = icmp eq i32 %42, %43
  br i1 %44, label %45, label %53

; <label>:45:                                     ; preds = %39
  %46 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %18, align 8
  %47 = load %class.Vector.0*, %class.Vector.0** %15, align 8
  %48 = load %class.Vector.0*, %class.Vector.0** %15, align 8
  %49 = call i32 @_ZNK5Lexer8Compound16assign_argumentsERK6VectorI6StringEPS3_(%"class.Lexer::Compound"* %46, %class.Vector.0* dereferenceable(16) %47, %class.Vector.0* %48)
  %50 = icmp sge i32 %49, 0
  br i1 %50, label %51, label %53

; <label>:51:                                     ; preds = %45
  %52 = load i32, i32* %12, align 4
  store i32 %52, i32* %9, align 4
  br label %157

; <label>:53:                                     ; preds = %45, %39, %31
  %54 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %18, align 8
  %55 = load %class.Vector.0*, %class.Vector.0** %15, align 8
  %56 = call i32 @_ZNK5Lexer8Compound16assign_argumentsERK6VectorI6StringEPS3_(%"class.Lexer::Compound"* %54, %class.Vector.0* dereferenceable(16) %55, %class.Vector.0* null)
  %57 = icmp sge i32 %56, 0
  br i1 %57, label %58, label %60

; <label>:58:                                     ; preds = %53
  %59 = load i32, i32* %12, align 4
  store i32 %59, i32* %19, align 4
  br label %60

; <label>:60:                                     ; preds = %58, %53
  br label %61

; <label>:61:                                     ; preds = %60
  %62 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %18, align 8
  %63 = load %class.Lexer*, %class.Lexer** %11, align 8
  %64 = call %"class.Lexer::Compound"* @_ZNK5Lexer8Compound17overload_compoundEPS_(%"class.Lexer::Compound"* %62, %class.Lexer* %63)
  store %"class.Lexer::Compound"* %64, %"class.Lexer::Compound"** %21, align 8
  %65 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %21, align 8
  %66 = icmp ne %"class.Lexer::Compound"* %65, null
  br i1 %66, label %67, label %72

; <label>:67:                                     ; preds = %61
  %68 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %18, align 8
  %69 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %68, i32 0, i32 3
  %70 = load i32, i32* %69, align 8
  store i32 %70, i32* %12, align 4
  %71 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %21, align 8
  store %"class.Lexer::Compound"* %71, %"class.Lexer::Compound"** %18, align 8
  br label %82

; <label>:72:                                     ; preds = %61
  %73 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %18, align 8
  %74 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %73, i32 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = icmp sge i32 %75, 0
  br i1 %76, label %77, label %81

; <label>:77:                                     ; preds = %72
  %78 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %18, align 8
  %79 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %78, i32 0, i32 3
  %80 = load i32, i32* %79, align 8
  store i32 %80, i32* %9, align 4
  br label %157

; <label>:81:                                     ; preds = %72
  br label %83

; <label>:82:                                     ; preds = %67
  br label %28

; <label>:83:                                     ; preds = %81, %28
  %84 = load i32, i32* %20, align 4
  %85 = icmp ne i32 %84, 1
  br i1 %85, label %89, label %86

; <label>:86:                                     ; preds = %83
  %87 = load i32, i32* %19, align 4
  %88 = icmp slt i32 %87, 0
  br i1 %88, label %89, label %134

; <label>:89:                                     ; preds = %86, %83
  %90 = load %class.ErrorHandler*, %class.ErrorHandler** %16, align 8
  %91 = load %class.String*, %class.String** %17, align 8
  %92 = call dereferenceable(24) %class.String* @_ZNK5Lexer8Compound4nameEv(%"class.Lexer::Compound"* %27)
  %93 = load %class.Vector.0*, %class.Vector.0** %15, align 8
  %94 = call i32 @_ZNK6VectorI6StringE4sizeEv(%class.Vector.0* %93)
  %95 = load i32, i32* %13, align 4
  %96 = load i32, i32* %14, align 4
  call void @_ZN5Lexer8Compound9signatureERK6StringPK6VectorIS1_Eiii(%class.String* sret %22, %class.String* dereferenceable(24) %92, %class.Vector.0* null, i32 %94, i32 %95, i32 %96)
  %97 = invoke i8* @_ZNK6String5c_strEv(%class.String* %22)
          to label %98 unwind label %120

; <label>:98:                                     ; preds = %89
  %99 = invoke i32 (%class.ErrorHandler*, %class.String*, i8*, ...) @_ZN12ErrorHandler6lerrorERK6StringPKcz(%class.ErrorHandler* %90, %class.String* dereferenceable(24) %91, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i32 0, i32 0), i8* %97)
          to label %100 unwind label %120

; <label>:100:                                    ; preds = %98
  call void @_ZN6StringD2Ev(%class.String* %22) #9
  %101 = load %class.ErrorHandler*, %class.ErrorHandler** %16, align 8
  call void (%class.ContextErrorHandler*, %class.ErrorHandler*, i8*, ...) @_ZN19ContextErrorHandlerC1EP12ErrorHandlerPKcz(%class.ContextErrorHandler* %25, %class.ErrorHandler* %101, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i32 0, i32 0))
  store %"class.Lexer::Compound"* %27, %"class.Lexer::Compound"** %18, align 8
  br label %102

; <label>:102:                                    ; preds = %119, %100
  %103 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %18, align 8
  %104 = icmp ne %"class.Lexer::Compound"* %103, null
  br i1 %104, label %105, label %132

; <label>:105:                                    ; preds = %102
  %106 = bitcast %class.ContextErrorHandler* %25 to %class.ErrorHandler*
  %107 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %18, align 8
  %108 = invoke dereferenceable(24) %class.String* @_ZNK5Lexer8Compound8landmarkEv(%"class.Lexer::Compound"* %107)
          to label %109 unwind label %124

; <label>:109:                                    ; preds = %105
  %110 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %18, align 8
  invoke void @_ZNK5Lexer8Compound9signatureEv(%class.String* sret %26, %"class.Lexer::Compound"* %110)
          to label %111 unwind label %124

; <label>:111:                                    ; preds = %109
  %112 = invoke i8* @_ZNK6String5c_strEv(%class.String* %26)
          to label %113 unwind label %128

; <label>:113:                                    ; preds = %111
  invoke void (%class.ErrorHandler*, %class.String*, i8*, ...) @_ZN12ErrorHandler8lmessageERK6StringPKcz(%class.ErrorHandler* %106, %class.String* dereferenceable(24) %108, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0), i8* %112)
          to label %114 unwind label %128

; <label>:114:                                    ; preds = %113
  call void @_ZN6StringD2Ev(%class.String* %26) #9
  br label %115

; <label>:115:                                    ; preds = %114
  %116 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %18, align 8
  %117 = load %class.Lexer*, %class.Lexer** %11, align 8
  %118 = invoke %"class.Lexer::Compound"* @_ZNK5Lexer8Compound17overload_compoundEPS_(%"class.Lexer::Compound"* %116, %class.Lexer* %117)
          to label %119 unwind label %124

; <label>:119:                                    ; preds = %115
  store %"class.Lexer::Compound"* %118, %"class.Lexer::Compound"** %18, align 8
  br label %102

; <label>:120:                                    ; preds = %98, %89
  %121 = landingpad { i8*, i32 }
          cleanup
  %122 = extractvalue { i8*, i32 } %121, 0
  store i8* %122, i8** %23, align 8
  %123 = extractvalue { i8*, i32 } %121, 1
  store i32 %123, i32* %24, align 4
  call void @_ZN6StringD2Ev(%class.String* %22) #9
  br label %159

; <label>:124:                                    ; preds = %115, %109, %105
  %125 = landingpad { i8*, i32 }
          cleanup
  %126 = extractvalue { i8*, i32 } %125, 0
  store i8* %126, i8** %23, align 8
  %127 = extractvalue { i8*, i32 } %125, 1
  store i32 %127, i32* %24, align 4
  br label %133

; <label>:128:                                    ; preds = %113, %111
  %129 = landingpad { i8*, i32 }
          cleanup
  %130 = extractvalue { i8*, i32 } %129, 0
  store i8* %130, i8** %23, align 8
  %131 = extractvalue { i8*, i32 } %129, 1
  store i32 %131, i32* %24, align 4
  call void @_ZN6StringD2Ev(%class.String* %26) #9
  br label %133

; <label>:132:                                    ; preds = %102
  call void @_ZN19ContextErrorHandlerD2Ev(%class.ContextErrorHandler* %25) #9
  br label %134

; <label>:133:                                    ; preds = %128, %124
  call void @_ZN19ContextErrorHandlerD2Ev(%class.ContextErrorHandler* %25) #9
  br label %159

; <label>:134:                                    ; preds = %132, %86
  %135 = load i32, i32* %19, align 4
  %136 = icmp sge i32 %135, 0
  br i1 %136, label %137, label %145

; <label>:137:                                    ; preds = %134
  %138 = load %class.Lexer*, %class.Lexer** %11, align 8
  %139 = getelementptr inbounds %class.Lexer, %class.Lexer* %138, i32 0, i32 8
  %140 = load i32, i32* %19, align 4
  %141 = call dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %139, i32 %140)
  %142 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %141, i32 0, i32 1
  %143 = load i64, i64* %142, align 8
  %144 = inttoptr i64 %143 to %"class.Lexer::Compound"*
  br label %146

; <label>:145:                                    ; preds = %134
  br label %146

; <label>:146:                                    ; preds = %145, %137
  %147 = phi %"class.Lexer::Compound"* [ %144, %137 ], [ null, %145 ]
  store %"class.Lexer::Compound"* %147, %"class.Lexer::Compound"** %18, align 8
  %148 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %18, align 8
  %149 = icmp ne %"class.Lexer::Compound"* %148, null
  br i1 %149, label %150, label %155

; <label>:150:                                    ; preds = %146
  %151 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %18, align 8
  %152 = load %class.Vector.0*, %class.Vector.0** %15, align 8
  %153 = load %class.Vector.0*, %class.Vector.0** %15, align 8
  %154 = call i32 @_ZNK5Lexer8Compound16assign_argumentsERK6VectorI6StringEPS3_(%"class.Lexer::Compound"* %151, %class.Vector.0* dereferenceable(16) %152, %class.Vector.0* %153)
  br label %155

; <label>:155:                                    ; preds = %150, %146
  %156 = load i32, i32* %19, align 4
  store i32 %156, i32* %9, align 4
  br label %157

; <label>:157:                                    ; preds = %155, %77, %51
  %158 = load i32, i32* %9, align 4
  ret i32 %158

; <label>:159:                                    ; preds = %133, %120
  %160 = load i8*, i8** %23, align 8
  %161 = load i32, i32* %24, align 4
  %162 = insertvalue { i8*, i32 } undef, i8* %160, 0
  %163 = insertvalue { i8*, i32 } %162, i32 %161, 1
  resume { i8*, i32 } %163
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr i32 @_ZNK5Lexer8Compound16assign_argumentsERK6VectorI6StringEPS3_(%"class.Lexer::Compound"*, %class.Vector.0* dereferenceable(16), %class.Vector.0*) #2 comdat align 2 {
  %4 = alloca %"class.Lexer::Compound"*, align 8
  %5 = alloca %class.Vector.0*, align 8
  %6 = alloca %class.Vector.0*, align 8
  store %"class.Lexer::Compound"* %0, %"class.Lexer::Compound"** %4, align 8
  store %class.Vector.0* %1, %class.Vector.0** %5, align 8
  store %class.Vector.0* %2, %class.Vector.0** %6, align 8
  %7 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %4, align 8
  %8 = load %class.Vector.0*, %class.Vector.0** %5, align 8
  %9 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %7, i32 0, i32 4
  %10 = call dereferenceable(16) %class.Vector.0* @_ZNK19VariableEnvironment6valuesEv(%class.VariableEnvironment* %9)
  %11 = call %class.String* @_ZNK6VectorI6StringE5beginEv(%class.Vector.0* %10)
  %12 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %7, i32 0, i32 4
  %13 = call dereferenceable(16) %class.Vector.0* @_ZNK19VariableEnvironment6valuesEv(%class.VariableEnvironment* %12)
  %14 = call %class.String* @_ZNK6VectorI6StringE5beginEv(%class.Vector.0* %13)
  %15 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %7, i32 0, i32 5
  %16 = load i32, i32* %15, align 8
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %class.String, %class.String* %14, i64 %17
  %19 = load %class.Vector.0*, %class.Vector.0** %6, align 8
  %20 = call i32 @_Z19cp_assign_argumentsRK6VectorI6StringEPKS0_S5_PS1_(%class.Vector.0* dereferenceable(16) %8, %class.String* %11, %class.String* %18, %class.Vector.0* %19)
  ret i32 %20
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr %"class.Lexer::Compound"* @_ZNK5Lexer8Compound17overload_compoundEPS_(%"class.Lexer::Compound"*, %class.Lexer*) #2 comdat align 2 {
  %3 = alloca %"class.Lexer::Compound"*, align 8
  %4 = alloca %"class.Lexer::Compound"*, align 8
  %5 = alloca %class.Lexer*, align 8
  store %"class.Lexer::Compound"* %0, %"class.Lexer::Compound"** %4, align 8
  store %class.Lexer* %1, %class.Lexer** %5, align 8
  %6 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %4, align 8
  %7 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %6, i32 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = icmp sge i32 %8, 0
  br i1 %9, label %10, label %28

; <label>:10:                                     ; preds = %2
  %11 = load %class.Lexer*, %class.Lexer** %5, align 8
  %12 = getelementptr inbounds %class.Lexer, %class.Lexer* %11, i32 0, i32 8
  %13 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %6, i32 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = call dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %12, i32 %14)
  %16 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %15, i32 0, i32 0
  %17 = load %class.Element* (i64)*, %class.Element* (i64)** %16, align 8
  %18 = icmp eq %class.Element* (i64)* %17, @_ZN5Lexer24compound_element_factoryEm
  br i1 %18, label %19, label %28

; <label>:19:                                     ; preds = %10
  %20 = load %class.Lexer*, %class.Lexer** %5, align 8
  %21 = getelementptr inbounds %class.Lexer, %class.Lexer* %20, i32 0, i32 8
  %22 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %6, i32 0, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = call dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %21, i32 %23)
  %25 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %24, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = inttoptr i64 %26 to %"class.Lexer::Compound"*
  store %"class.Lexer::Compound"* %27, %"class.Lexer::Compound"** %3, align 8
  br label %29

; <label>:28:                                     ; preds = %10, %2
  store %"class.Lexer::Compound"* null, %"class.Lexer::Compound"** %3, align 8
  br label %29

; <label>:29:                                     ; preds = %28, %19
  %30 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %3, align 8
  ret %"class.Lexer::Compound"* %30
}

declare i32 @_ZN12ErrorHandler6lerrorERK6StringPKcz(%class.ErrorHandler*, %class.String* dereferenceable(24), i8*, ...) #3

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer8Compound9signatureERK6StringPK6VectorIS1_Eiii(%class.String* noalias sret, %class.String* dereferenceable(24), %class.Vector.0*, i32, i32, i32) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %7 = alloca %class.String*, align 8
  %8 = alloca %class.Vector.0*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %class.StringAccum, align 8
  %13 = alloca %class.String, align 8
  %14 = alloca i8*
  %15 = alloca i32
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  store %class.String* %1, %class.String** %7, align 8
  store %class.Vector.0* %2, %class.Vector.0** %8, align 8
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  store i32 %5, i32* %11, align 4
  call void @_ZN11StringAccumC2Ev(%class.StringAccum* %12)
  %20 = load %class.String*, %class.String** %7, align 8
  %21 = invoke { i64, i64 } @_ZNK6StringcvMS_KFivEEv(%class.String* %20)
          to label %22 unwind label %55

; <label>:22:                                     ; preds = %6
  %23 = extractvalue { i64, i64 } %21, 0
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %25, label %28

; <label>:25:                                     ; preds = %22
  %26 = load %class.String*, %class.String** %7, align 8
  invoke void @_ZN6StringC2ERKS_(%class.String* %13, %class.String* dereferenceable(24) %26)
          to label %27 unwind label %55

; <label>:27:                                     ; preds = %25
  br label %30

; <label>:28:                                     ; preds = %22
  invoke void @_ZN6StringC2EPKc(%class.String* %13, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0))
          to label %29 unwind label %55

; <label>:29:                                     ; preds = %28
  br label %30

; <label>:30:                                     ; preds = %29, %27
  %31 = invoke dereferenceable(16) %class.StringAccum* @_ZlsR11StringAccumRK6String(%class.StringAccum* dereferenceable(16) %12, %class.String* dereferenceable(24) %13)
          to label %32 unwind label %59

; <label>:32:                                     ; preds = %30
  call void @_ZN6StringD2Ev(%class.String* %13) #9
  %33 = load %class.Vector.0*, %class.Vector.0** %8, align 8
  %34 = icmp ne %class.Vector.0* %33, null
  br i1 %34, label %35, label %98

; <label>:35:                                     ; preds = %32
  %36 = load %class.Vector.0*, %class.Vector.0** %8, align 8
  %37 = invoke i32 @_ZNK6VectorI6StringE4sizeEv(%class.Vector.0* %36)
          to label %38 unwind label %55

; <label>:38:                                     ; preds = %35
  %39 = icmp ne i32 %37, 0
  br i1 %39, label %40, label %98

; <label>:40:                                     ; preds = %38
  %41 = invoke dereferenceable(16) %class.StringAccum* @_ZlsR11StringAccumc(%class.StringAccum* dereferenceable(16) %12, i8 signext 40)
          to label %42 unwind label %55

; <label>:42:                                     ; preds = %40
  store i32 0, i32* %16, align 4
  br label %43

; <label>:43:                                     ; preds = %92, %42
  %44 = load i32, i32* %16, align 4
  %45 = load %class.Vector.0*, %class.Vector.0** %8, align 8
  %46 = invoke i32 @_ZNK6VectorI6StringE4sizeEv(%class.Vector.0* %45)
          to label %47 unwind label %55

; <label>:47:                                     ; preds = %43
  %48 = icmp slt i32 %44, %46
  br i1 %48, label %49, label %95

; <label>:49:                                     ; preds = %47
  %50 = load i32, i32* %16, align 4
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %52, label %63

; <label>:52:                                     ; preds = %49
  %53 = invoke dereferenceable(16) %class.StringAccum* @_ZlsR11StringAccumPKc(%class.StringAccum* dereferenceable(16) %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i32 0, i32 0))
          to label %54 unwind label %55

; <label>:54:                                     ; preds = %52
  br label %63

; <label>:55:                                     ; preds = %139, %137, %134, %131, %128, %125, %121, %118, %98, %95, %87, %83, %80, %77, %73, %70, %67, %63, %52, %43, %40, %35, %28, %25, %6
  %56 = landingpad { i8*, i32 }
          cleanup
  %57 = extractvalue { i8*, i32 } %56, 0
  store i8* %57, i8** %14, align 8
  %58 = extractvalue { i8*, i32 } %56, 1
  store i32 %58, i32* %15, align 4
  br label %141

; <label>:59:                                     ; preds = %30
  %60 = landingpad { i8*, i32 }
          cleanup
  %61 = extractvalue { i8*, i32 } %60, 0
  store i8* %61, i8** %14, align 8
  %62 = extractvalue { i8*, i32 } %60, 1
  store i32 %62, i32* %15, align 4
  call void @_ZN6StringD2Ev(%class.String* %13) #9
  br label %141

; <label>:63:                                     ; preds = %54, %49
  %64 = load %class.Vector.0*, %class.Vector.0** %8, align 8
  %65 = load i32, i32* %16, align 4
  %66 = invoke dereferenceable(24) %class.String* @_ZNK6VectorI6StringEixEi(%class.Vector.0* %64, i32 %65)
          to label %67 unwind label %55

; <label>:67:                                     ; preds = %63
  %68 = invoke zeroext i1 @_ZeqRK6StringPKc(%class.String* dereferenceable(24) %66, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13, i32 0, i32 0))
          to label %69 unwind label %55

; <label>:69:                                     ; preds = %67
  br i1 %68, label %70, label %73

; <label>:70:                                     ; preds = %69
  %71 = invoke dereferenceable(16) %class.StringAccum* @_ZlsR11StringAccumPKc(%class.StringAccum* dereferenceable(16) %12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i32 0, i32 0))
          to label %72 unwind label %55

; <label>:72:                                     ; preds = %70
  br label %91

; <label>:73:                                     ; preds = %69
  %74 = load %class.Vector.0*, %class.Vector.0** %8, align 8
  %75 = load i32, i32* %16, align 4
  %76 = invoke dereferenceable(24) %class.String* @_ZNK6VectorI6StringEixEi(%class.Vector.0* %74, i32 %75)
          to label %77 unwind label %55

; <label>:77:                                     ; preds = %73
  %78 = invoke zeroext i1 @_ZeqRK6StringPKc(%class.String* dereferenceable(24) %76, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i32 0, i32 0))
          to label %79 unwind label %55

; <label>:79:                                     ; preds = %77
  br i1 %78, label %80, label %83

; <label>:80:                                     ; preds = %79
  %81 = invoke dereferenceable(16) %class.StringAccum* @_ZlsR11StringAccumPKc(%class.StringAccum* dereferenceable(16) %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i32 0, i32 0))
          to label %82 unwind label %55

; <label>:82:                                     ; preds = %80
  br label %90

; <label>:83:                                     ; preds = %79
  %84 = load %class.Vector.0*, %class.Vector.0** %8, align 8
  %85 = load i32, i32* %16, align 4
  %86 = invoke dereferenceable(24) %class.String* @_ZNK6VectorI6StringEixEi(%class.Vector.0* %84, i32 %85)
          to label %87 unwind label %55

; <label>:87:                                     ; preds = %83
  %88 = invoke dereferenceable(16) %class.StringAccum* @_ZlsR11StringAccumRK6String(%class.StringAccum* dereferenceable(16) %12, %class.String* dereferenceable(24) %86)
          to label %89 unwind label %55

; <label>:89:                                     ; preds = %87
  br label %90

; <label>:90:                                     ; preds = %89, %82
  br label %91

; <label>:91:                                     ; preds = %90, %72
  br label %92

; <label>:92:                                     ; preds = %91
  %93 = load i32, i32* %16, align 4
  %94 = add nsw i32 %93, 1
  store i32 %94, i32* %16, align 4
  br label %43

; <label>:95:                                     ; preds = %47
  %96 = invoke dereferenceable(16) %class.StringAccum* @_ZlsR11StringAccumc(%class.StringAccum* dereferenceable(16) %12, i8 signext 41)
          to label %97 unwind label %55

; <label>:97:                                     ; preds = %95
  br label %98

; <label>:98:                                     ; preds = %97, %38, %32
  %99 = load i32, i32* %9, align 4
  %100 = icmp eq i32 %99, 1
  %101 = zext i1 %100 to i64
  %102 = select i1 %100, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i32 0, i32 0)
  store i8* %102, i8** %17, align 8
  %103 = load i32, i32* %10, align 4
  %104 = icmp eq i32 %103, 1
  %105 = zext i1 %104 to i64
  %106 = select i1 %104, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i32 0, i32 0)
  store i8* %106, i8** %18, align 8
  %107 = load i32, i32* %11, align 4
  %108 = icmp eq i32 %107, 1
  %109 = zext i1 %108 to i64
  %110 = select i1 %108, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i32 0, i32 0)
  store i8* %110, i8** %19, align 8
  %111 = invoke dereferenceable(16) %class.StringAccum* @_ZlsR11StringAccumc(%class.StringAccum* dereferenceable(16) %12, i8 signext 91)
          to label %112 unwind label %55

; <label>:112:                                    ; preds = %98
  %113 = load %class.Vector.0*, %class.Vector.0** %8, align 8
  %114 = icmp ne %class.Vector.0* %113, null
  br i1 %114, label %125, label %115

; <label>:115:                                    ; preds = %112
  %116 = load i32, i32* %9, align 4
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %118, label %125

; <label>:118:                                    ; preds = %115
  %119 = load i32, i32* %9, align 4
  %120 = invoke dereferenceable(16) %class.StringAccum* @_ZlsR11StringAccumi(%class.StringAccum* dereferenceable(16) %12, i32 %119)
          to label %121 unwind label %55

; <label>:121:                                    ; preds = %118
  %122 = load i8*, i8** %17, align 8
  %123 = invoke dereferenceable(16) %class.StringAccum* @_ZlsR11StringAccumPKc(%class.StringAccum* dereferenceable(16) %120, i8* %122)
          to label %124 unwind label %55

; <label>:124:                                    ; preds = %121
  br label %125

; <label>:125:                                    ; preds = %124, %115, %112
  %126 = load i32, i32* %10, align 4
  %127 = invoke dereferenceable(16) %class.StringAccum* @_ZlsR11StringAccumi(%class.StringAccum* dereferenceable(16) %12, i32 %126)
          to label %128 unwind label %55

; <label>:128:                                    ; preds = %125
  %129 = load i8*, i8** %18, align 8
  %130 = invoke dereferenceable(16) %class.StringAccum* @_ZlsR11StringAccumPKc(%class.StringAccum* dereferenceable(16) %127, i8* %129)
          to label %131 unwind label %55

; <label>:131:                                    ; preds = %128
  %132 = load i32, i32* %11, align 4
  %133 = invoke dereferenceable(16) %class.StringAccum* @_ZlsR11StringAccumi(%class.StringAccum* dereferenceable(16) %130, i32 %132)
          to label %134 unwind label %55

; <label>:134:                                    ; preds = %131
  %135 = load i8*, i8** %19, align 8
  %136 = invoke dereferenceable(16) %class.StringAccum* @_ZlsR11StringAccumPKc(%class.StringAccum* dereferenceable(16) %133, i8* %135)
          to label %137 unwind label %55

; <label>:137:                                    ; preds = %134
  %138 = invoke dereferenceable(16) %class.StringAccum* @_ZlsR11StringAccumc(%class.StringAccum* dereferenceable(16) %12, i8 signext 93)
          to label %139 unwind label %55

; <label>:139:                                    ; preds = %137
  invoke void @_ZN11StringAccum11take_stringEv(%class.String* sret %0, %class.StringAccum* %12)
          to label %140 unwind label %55

; <label>:140:                                    ; preds = %139
  call void @_ZN11StringAccumD2Ev(%class.StringAccum* %12) #9
  ret void

; <label>:141:                                    ; preds = %59, %55
  call void @_ZN11StringAccumD2Ev(%class.StringAccum* %12) #9
  br label %142

; <label>:142:                                    ; preds = %141
  %143 = load i8*, i8** %14, align 8
  %144 = load i32, i32* %15, align 4
  %145 = insertvalue { i8*, i32 } undef, i8* %143, 0
  %146 = insertvalue { i8*, i32 } %145, i32 %144, 1
  resume { i8*, i32 } %146
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(24) %class.String* @_ZNK5Lexer8Compound4nameEv(%"class.Lexer::Compound"*) #0 comdat align 2 {
  %2 = alloca %"class.Lexer::Compound"*, align 8
  store %"class.Lexer::Compound"* %0, %"class.Lexer::Compound"** %2, align 8
  %3 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %2, align 8
  %4 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %3, i32 0, i32 1
  ret %class.String* %4
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr i32 @_ZNK6VectorI6StringE4sizeEv(%class.Vector.0*) #0 comdat align 2 {
  %2 = alloca %class.Vector.0*, align 8
  store %class.Vector.0* %0, %class.Vector.0** %2, align 8
  %3 = load %class.Vector.0*, %class.Vector.0** %2, align 8
  %4 = getelementptr inbounds %class.Vector.0, %class.Vector.0* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %4, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  ret i32 %6
}

declare void @_ZN19ContextErrorHandlerC1EP12ErrorHandlerPKcz(%class.ContextErrorHandler*, %class.ErrorHandler*, i8*, ...) unnamed_addr #3

declare void @_ZN12ErrorHandler8lmessageERK6StringPKcz(%class.ErrorHandler*, %class.String* dereferenceable(24), i8*, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(24) %class.String* @_ZNK5Lexer8Compound8landmarkEv(%"class.Lexer::Compound"*) #0 comdat align 2 {
  %2 = alloca %"class.Lexer::Compound"*, align 8
  store %"class.Lexer::Compound"* %0, %"class.Lexer::Compound"** %2, align 8
  %3 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %2, align 8
  %4 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %3, i32 0, i32 2
  ret %class.String* %4
}

; Function Attrs: noinline optnone uwtable
define void @_ZNK5Lexer8Compound9signatureEv(%class.String* noalias sret, %"class.Lexer::Compound"*) #2 align 2 {
  %3 = alloca %"class.Lexer::Compound"*, align 8
  store %"class.Lexer::Compound"* %1, %"class.Lexer::Compound"** %3, align 8
  %4 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %3, align 8
  %5 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %4, i32 0, i32 1
  %6 = call dereferenceable(56) %class.VariableEnvironment* @_ZNK5Lexer8Compound5scopeEv(%"class.Lexer::Compound"* %4)
  %7 = call dereferenceable(16) %class.Vector.0* @_ZNK19VariableEnvironment6valuesEv(%class.VariableEnvironment* %6)
  %8 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %4, i32 0, i32 6
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %4, i32 0, i32 7
  %11 = load i32, i32* %10, align 8
  call void @_ZN5Lexer8Compound9signatureERK6StringPK6VectorIS1_Eiii(%class.String* sret %0, %class.String* dereferenceable(24) %5, %class.Vector.0* %7, i32 -1, i32 %9, i32 %11)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN19ContextErrorHandlerD2Ev(%class.ContextErrorHandler*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.ContextErrorHandler*, align 8
  store %class.ContextErrorHandler* %0, %class.ContextErrorHandler** %2, align 8
  %3 = load %class.ContextErrorHandler*, %class.ContextErrorHandler** %2, align 8
  %4 = bitcast %class.ContextErrorHandler* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTV19ContextErrorHandler, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.ContextErrorHandler, %class.ContextErrorHandler* %3, i32 0, i32 3
  call void @_ZN6StringD2Ev(%class.String* %5) #9
  %6 = getelementptr inbounds %class.ContextErrorHandler, %class.ContextErrorHandler* %3, i32 0, i32 2
  call void @_ZN6StringD2Ev(%class.String* %6) #9
  %7 = getelementptr inbounds %class.ContextErrorHandler, %class.ContextErrorHandler* %3, i32 0, i32 1
  call void @_ZN6StringD2Ev(%class.String* %7) #9
  %8 = bitcast %class.ContextErrorHandler* %3 to %class.ErrorVeneer*
  call void @_ZN11ErrorVeneerD2Ev(%class.ErrorVeneer* %8) #9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14*, i32) #0 comdat align 2 {
  %3 = alloca %class.Vector.14*, align 8
  %4 = alloca i32, align 4
  store %class.Vector.14* %0, %class.Vector.14** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Vector.14*, %class.Vector.14** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = getelementptr inbounds %class.Vector.14, %class.Vector.14* %5, i32 0, i32 0
  %8 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp ult i32 %6, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %2
  br label %14

; <label>:12:                                     ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.128, i32 0, i32 0), i32 288, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__._ZN6VectorIN5Lexer11ElementTypeEEixEi, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %14

; <label>:14:                                     ; preds = %13, %11
  %15 = getelementptr inbounds %class.Vector.14, %class.Vector.14* %5, i32 0, i32 0
  %16 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %15, i32 0, i32 0
  %17 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %16, align 8
  %18 = load i32, i32* %4, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %17, i64 %19
  ret %"struct.Lexer::ElementType"* %20
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN11StringAccumC2Ev(%class.StringAccum*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %class.StringAccum*, align 8
  store %class.StringAccum* %0, %class.StringAccum** %2, align 8
  %3 = load %class.StringAccum*, %class.StringAccum** %2, align 8
  %4 = getelementptr inbounds %class.StringAccum, %class.StringAccum* %3, i32 0, i32 0
  call void @_ZN11StringAccum5rep_tC2Ev(%"struct.StringAccum::rep_t"* %4)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dereferenceable(16) %class.StringAccum* @_ZlsR11StringAccumRK6String(%class.StringAccum* dereferenceable(16), %class.String* dereferenceable(24)) #2 comdat {
  %3 = alloca %class.StringAccum*, align 8
  %4 = alloca %class.String*, align 8
  store %class.StringAccum* %0, %class.StringAccum** %3, align 8
  store %class.String* %1, %class.String** %4, align 8
  %5 = load %class.StringAccum*, %class.StringAccum** %3, align 8
  %6 = load %class.String*, %class.String** %4, align 8
  %7 = call i8* @_ZNK6String4dataEv(%class.String* %6)
  %8 = load %class.String*, %class.String** %4, align 8
  %9 = call i32 @_ZNK6String6lengthEv(%class.String* %8)
  call void @_ZN11StringAccum6appendEPKci(%class.StringAccum* %5, i8* %7, i32 %9)
  %10 = load %class.StringAccum*, %class.StringAccum** %3, align 8
  ret %class.StringAccum* %10
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6StringC2EPKc(%class.String*, i8*) unnamed_addr #2 comdat align 2 {
  %3 = alloca %class.String*, align 8
  %4 = alloca i8*, align 8
  store %class.String* %0, %class.String** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %class.String*, %class.String** %3, align 8
  %6 = getelementptr inbounds %class.String, %class.String* %5, i32 0, i32 0
  %7 = load i8*, i8** %4, align 8
  %8 = icmp ne i8* %7, null
  br i1 %8, label %9, label %15

; <label>:9:                                      ; preds = %2
  br i1 false, label %10, label %15

; <label>:10:                                     ; preds = %9
  %11 = load i8*, i8** %4, align 8
  %12 = load i8*, i8** %4, align 8
  %13 = call i64 @strlen(i8* %12) #13
  %14 = trunc i64 %13 to i32
  call void @_ZNK6String11assign_memoEPKciPNS_6memo_tE(%class.String* %5, i8* %11, i32 %14, %"struct.String::memo_t"* null)
  br label %17

; <label>:15:                                     ; preds = %9, %2
  %16 = load i8*, i8** %4, align 8
  call void @_ZN6String6assignEPKcib(%class.String* %5, i8* %16, i32 -1, i1 zeroext false)
  br label %17

; <label>:17:                                     ; preds = %15, %10
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dereferenceable(16) %class.StringAccum* @_ZlsR11StringAccumc(%class.StringAccum* dereferenceable(16), i8 signext) #2 comdat {
  %3 = alloca %class.StringAccum*, align 8
  %4 = alloca i8, align 1
  store %class.StringAccum* %0, %class.StringAccum** %3, align 8
  store i8 %1, i8* %4, align 1
  %5 = load %class.StringAccum*, %class.StringAccum** %3, align 8
  %6 = load i8, i8* %4, align 1
  call void @_ZN11StringAccum6appendEc(%class.StringAccum* %5, i8 signext %6)
  %7 = load %class.StringAccum*, %class.StringAccum** %3, align 8
  ret %class.StringAccum* %7
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dereferenceable(16) %class.StringAccum* @_ZlsR11StringAccumPKc(%class.StringAccum* dereferenceable(16), i8*) #2 comdat {
  %3 = alloca %class.StringAccum*, align 8
  %4 = alloca i8*, align 8
  store %class.StringAccum* %0, %class.StringAccum** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %class.StringAccum*, %class.StringAccum** %3, align 8
  %6 = load i8*, i8** %4, align 8
  call void @_ZN11StringAccum6appendEPKc(%class.StringAccum* %5, i8* %6)
  %7 = load %class.StringAccum*, %class.StringAccum** %3, align 8
  ret %class.StringAccum* %7
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(24) %class.String* @_ZNK6VectorI6StringEixEi(%class.Vector.0*, i32) #0 comdat align 2 {
  %3 = alloca %class.Vector.0*, align 8
  %4 = alloca i32, align 4
  store %class.Vector.0* %0, %class.Vector.0** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Vector.0*, %class.Vector.0** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = getelementptr inbounds %class.Vector.0, %class.Vector.0* %5, i32 0, i32 0
  %8 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp ult i32 %6, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %2
  br label %14

; <label>:12:                                     ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.128, i32 0, i32 0), i32 295, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZNK6VectorI6StringEixEi, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %14

; <label>:14:                                     ; preds = %13, %11
  %15 = getelementptr inbounds %class.Vector.0, %class.Vector.0* %5, i32 0, i32 0
  %16 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %15, i32 0, i32 0
  %17 = load %class.String*, %class.String** %16, align 8
  %18 = load i32, i32* %4, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %class.String, %class.String* %17, i64 %19
  ret %class.String* %20
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dereferenceable(16) %class.StringAccum* @_ZlsR11StringAccumi(%class.StringAccum* dereferenceable(16), i32) #2 comdat {
  %3 = alloca %class.StringAccum*, align 8
  %4 = alloca i32, align 4
  store %class.StringAccum* %0, %class.StringAccum** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.StringAccum*, %class.StringAccum** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = sext i32 %6 to i64
  %8 = call dereferenceable(16) %class.StringAccum* @_ZlsR11StringAccuml(%class.StringAccum* dereferenceable(16) %5, i64 %7)
  ret %class.StringAccum* %8
}

declare void @_ZN11StringAccum11take_stringEv(%class.String* sret, %class.StringAccum*) #3

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN11StringAccumD2Ev(%class.StringAccum*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.StringAccum*, align 8
  store %class.StringAccum* %0, %class.StringAccum** %2, align 8
  %3 = load %class.StringAccum*, %class.StringAccum** %2, align 8
  %4 = getelementptr inbounds %class.StringAccum, %class.StringAccum* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.StringAccum::rep_t", %"struct.StringAccum::rep_t"* %4, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %20

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %class.StringAccum, %class.StringAccum* %3, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.StringAccum::rep_t", %"struct.StringAccum::rep_t"* %9, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = add nsw i32 %11, 12
  %13 = getelementptr inbounds %class.StringAccum, %class.StringAccum* %3, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.StringAccum::rep_t", %"struct.StringAccum::rep_t"* %13, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 -12
  %17 = icmp eq i8* %16, null
  br i1 %17, label %19, label %18

; <label>:18:                                     ; preds = %8
  call void @_ZdaPv(i8* %16) #14
  br label %19

; <label>:19:                                     ; preds = %18, %8
  br label %20

; <label>:20:                                     ; preds = %19, %1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(56) %class.VariableEnvironment* @_ZNK5Lexer8Compound5scopeEv(%"class.Lexer::Compound"*) #0 comdat align 2 {
  %2 = alloca %"class.Lexer::Compound"*, align 8
  store %"class.Lexer::Compound"* %0, %"class.Lexer::Compound"** %2, align 8
  %3 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %2, align 8
  %4 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %3, i32 0, i32 4
  ret %class.VariableEnvironment* %4
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(16) %class.Vector.0* @_ZNK19VariableEnvironment6valuesEv(%class.VariableEnvironment*) #0 comdat align 2 {
  %2 = alloca %class.VariableEnvironment*, align 8
  store %class.VariableEnvironment* %0, %class.VariableEnvironment** %2, align 8
  %3 = load %class.VariableEnvironment*, %class.VariableEnvironment** %2, align 8
  %4 = getelementptr inbounds %class.VariableEnvironment, %class.VariableEnvironment* %3, i32 0, i32 2
  ret %class.Vector.0* %4
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer8Compound11expand_intoEPS_iR19VariableEnvironment(%"class.Lexer::Compound"*, %class.Lexer*, i32, %class.VariableEnvironment* dereferenceable(56)) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.Lexer::Compound"*, align 8
  %6 = alloca %class.Lexer*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %class.VariableEnvironment*, align 8
  %9 = alloca %class.ErrorHandler*, align 8
  %10 = alloca %class.String, align 8
  %11 = alloca i8*
  %12 = alloca i32
  %13 = alloca [3 x i32], align 4
  %14 = alloca %class.String, align 8
  %15 = alloca %class.Vector.5, align 8
  %16 = alloca %class.String, align 8
  %17 = alloca %class.String, align 8
  %18 = alloca i32, align 4
  %19 = alloca %class.String, align 8
  %20 = alloca %class.String, align 8
  %21 = alloca i32, align 4
  %22 = alloca %class.String, align 8
  %23 = alloca %class.String, align 8
  %24 = alloca %class.String, align 8
  %25 = alloca i32
  %26 = alloca %class.String, align 8
  %27 = alloca %class.String, align 8
  %28 = alloca %class.String, align 8
  %29 = alloca %class.String, align 8
  %30 = alloca %"struct.Router::Connection"*, align 8
  %31 = alloca i32, align 4
  store %"class.Lexer::Compound"* %0, %"class.Lexer::Compound"** %5, align 8
  store %class.Lexer* %1, %class.Lexer** %6, align 8
  store i32 %2, i32* %7, align 4
  store %class.VariableEnvironment* %3, %class.VariableEnvironment** %8, align 8
  %32 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %5, align 8
  %33 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %32, i32 0, i32 12
  %34 = call dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %33, i32 0)
  %35 = call zeroext i1 @_ZeqRK6StringPKc(%class.String* dereferenceable(24) %34, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0))
  br i1 %35, label %36, label %40

; <label>:36:                                     ; preds = %4
  %37 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %32, i32 0, i32 12
  %38 = call dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %37, i32 1)
  %39 = call zeroext i1 @_ZeqRK6StringPKc(%class.String* dereferenceable(24) %38, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0))
  br label %40

; <label>:40:                                     ; preds = %36, %4
  %41 = phi i1 [ false, %4 ], [ %39, %36 ]
  br i1 %41, label %42, label %43

; <label>:42:                                     ; preds = %40
  br label %45

; <label>:43:                                     ; preds = %40
  call void @__assert_fail(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i32 386, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN5Lexer8Compound11expand_intoEPS_iR19VariableEnvironment, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %45

; <label>:45:                                     ; preds = %44, %42
  %46 = load %class.Lexer*, %class.Lexer** %6, align 8
  %47 = getelementptr inbounds %class.Lexer, %class.Lexer* %46, i32 0, i32 19
  %48 = load %class.ErrorHandler*, %class.ErrorHandler** %47, align 8
  store %class.ErrorHandler* %48, %class.ErrorHandler** %9, align 8
  %49 = load %class.Lexer*, %class.Lexer** %6, align 8
  %50 = getelementptr inbounds %class.Lexer, %class.Lexer* %49, i32 0, i32 12
  %51 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %50, align 8
  %52 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %51, i32 0, i32 12
  %53 = load i32, i32* %7, align 4
  %54 = call dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %52, i32 %53)
  call void @_ZN6StringC2ERKS_(%class.String* %10, %class.String* dereferenceable(24) %54)
  %55 = load %class.Lexer*, %class.Lexer** %6, align 8
  %56 = getelementptr inbounds %class.Lexer, %class.Lexer* %55, i32 0, i32 12
  %57 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %56, align 8
  %58 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %57, i32 0, i32 11
  %59 = load i32, i32* %7, align 4
  %60 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %58, i32 %59)
          to label %61 unwind label %108

; <label>:61:                                     ; preds = %45
  store i32 0, i32* %60, align 4
  %62 = load %class.Lexer*, %class.Lexer** %6, align 8
  invoke void @_ZN6StringC2ERKS_(%class.String* %14, %class.String* dereferenceable(24) %10)
          to label %63 unwind label %108

; <label>:63:                                     ; preds = %61
  %64 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i32 0, i32 0
  invoke void @_ZN5Lexer11add_tunnelsE6StringPi(%class.Lexer* %62, %class.String* %14, i32* %64)
          to label %65 unwind label %112

; <label>:65:                                     ; preds = %63
  call void @_ZN6StringD2Ev(%class.String* %14) #9
  invoke void @_ZN6VectorIiEC2Ev(%class.Vector.5* %15)
          to label %66 unwind label %108

; <label>:66:                                     ; preds = %65
  %67 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 1
  %68 = load i32, i32* %67, align 4
  invoke void @_ZN6VectorIiE9push_backEi(%class.Vector.5* %15, i32 %68)
          to label %69 unwind label %116

; <label>:69:                                     ; preds = %66
  %70 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 2
  %71 = load i32, i32* %70, align 4
  invoke void @_ZN6VectorIiE9push_backEi(%class.Vector.5* %15, i32 %71)
          to label %72 unwind label %116

; <label>:72:                                     ; preds = %69
  invoke void @_ZN6StringC2ERKS_(%class.String* %17, %class.String* dereferenceable(24) %10)
          to label %73 unwind label %116

; <label>:73:                                     ; preds = %72
  invoke void @_Zpl6StringPKc(%class.String* sret %16, %class.String* %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i32 0, i32 0))
          to label %74 unwind label %120

; <label>:74:                                     ; preds = %73
  call void @_ZN6StringD2Ev(%class.String* %17) #9
  store i32 2, i32* %18, align 4
  br label %75

; <label>:75:                                     ; preds = %233, %74
  %76 = load i32, i32* %18, align 4
  %77 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %32, i32 0, i32 11
  %78 = invoke i32 @_ZNK6VectorIiE4sizeEv(%class.Vector.5* %77)
          to label %79 unwind label %124

; <label>:79:                                     ; preds = %75
  %80 = icmp slt i32 %76, %78
  br i1 %80, label %81, label %237

; <label>:81:                                     ; preds = %79
  invoke void @_ZN6StringC2ERKS_(%class.String* %20, %class.String* dereferenceable(24) %16)
          to label %82 unwind label %124

; <label>:82:                                     ; preds = %81
  %83 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %32, i32 0, i32 12
  %84 = load i32, i32* %18, align 4
  %85 = invoke dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %83, i32 %84)
          to label %86 unwind label %128

; <label>:86:                                     ; preds = %82
  invoke void @_Zpl6StringRKS_(%class.String* sret %19, %class.String* %20, %class.String* dereferenceable(24) %85)
          to label %87 unwind label %128

; <label>:87:                                     ; preds = %86
  call void @_ZN6StringD2Ev(%class.String* %20) #9
  %88 = load %class.Lexer*, %class.Lexer** %6, align 8
  %89 = getelementptr inbounds %class.Lexer, %class.Lexer* %88, i32 0, i32 12
  %90 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %89, align 8
  %91 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %90, i32 0, i32 10
  %92 = invoke dereferenceable(4) i32* @_ZN9HashTableI6StringiEixERKS0_(%class.HashTable* %91, %class.String* dereferenceable(24) %19)
          to label %93 unwind label %132

; <label>:93:                                     ; preds = %87
  %94 = load i32, i32* %92, align 4
  store i32 %94, i32* %21, align 4
  %95 = load i32, i32* %21, align 4
  %96 = icmp sge i32 %95, 0
  br i1 %96, label %97, label %150

; <label>:97:                                     ; preds = %93
  %98 = load %class.ErrorHandler*, %class.ErrorHandler** %9, align 8
  invoke void @_ZN6StringC2ERKS_(%class.String* %22, %class.String* dereferenceable(24) %19)
          to label %99 unwind label %132

; <label>:99:                                     ; preds = %97
  %100 = load %class.Lexer*, %class.Lexer** %6, align 8
  %101 = load i32, i32* %7, align 4
  invoke void @_ZNK5Lexer16element_landmarkEi(%class.String* sret %23, %class.Lexer* %100, i32 %101)
          to label %102 unwind label %136

; <label>:102:                                    ; preds = %99
  %103 = load %class.Lexer*, %class.Lexer** %6, align 8
  %104 = load i32, i32* %21, align 4
  invoke void @_ZNK5Lexer16element_landmarkEi(%class.String* sret %24, %class.Lexer* %103, i32 %104)
          to label %105 unwind label %140

; <label>:105:                                    ; preds = %102
  invoke void @_ZL19redeclaration_errorP12ErrorHandlerPKc6StringRKS3_S5_(%class.ErrorHandler* %98, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0), %class.String* %22, %class.String* dereferenceable(24) %23, %class.String* dereferenceable(24) %24)
          to label %106 unwind label %144

; <label>:106:                                    ; preds = %105
  call void @_ZN6StringD2Ev(%class.String* %24) #9
  call void @_ZN6StringD2Ev(%class.String* %23) #9
  call void @_ZN6StringD2Ev(%class.String* %22) #9
  invoke void @_ZN6VectorIiE9push_backEi(%class.Vector.5* %15, i32 -1)
          to label %107 unwind label %132

; <label>:107:                                    ; preds = %106
  store i32 4, i32* %25, align 4
  br label %230

; <label>:108:                                    ; preds = %65, %61, %45
  %109 = landingpad { i8*, i32 }
          cleanup
  %110 = extractvalue { i8*, i32 } %109, 0
  store i8* %110, i8** %11, align 8
  %111 = extractvalue { i8*, i32 } %109, 1
  store i32 %111, i32* %12, align 4
  br label %329

; <label>:112:                                    ; preds = %63
  %113 = landingpad { i8*, i32 }
          cleanup
  %114 = extractvalue { i8*, i32 } %113, 0
  store i8* %114, i8** %11, align 8
  %115 = extractvalue { i8*, i32 } %113, 1
  store i32 %115, i32* %12, align 4
  call void @_ZN6StringD2Ev(%class.String* %14) #9
  br label %329

; <label>:116:                                    ; preds = %72, %69, %66
  %117 = landingpad { i8*, i32 }
          cleanup
  %118 = extractvalue { i8*, i32 } %117, 0
  store i8* %118, i8** %11, align 8
  %119 = extractvalue { i8*, i32 } %117, 1
  store i32 %119, i32* %12, align 4
  br label %328

; <label>:120:                                    ; preds = %73
  %121 = landingpad { i8*, i32 }
          cleanup
  %122 = extractvalue { i8*, i32 } %121, 0
  store i8* %122, i8** %11, align 8
  %123 = extractvalue { i8*, i32 } %121, 1
  store i32 %123, i32* %12, align 4
  call void @_ZN6StringD2Ev(%class.String* %17) #9
  br label %328

; <label>:124:                                    ; preds = %318, %314, %308, %303, %294, %290, %286, %281, %277, %273, %267, %260, %257, %250, %247, %241, %237, %81, %75
  %125 = landingpad { i8*, i32 }
          cleanup
  %126 = extractvalue { i8*, i32 } %125, 0
  store i8* %126, i8** %11, align 8
  %127 = extractvalue { i8*, i32 } %125, 1
  store i32 %127, i32* %12, align 4
  br label %327

; <label>:128:                                    ; preds = %86, %82
  %129 = landingpad { i8*, i32 }
          cleanup
  %130 = extractvalue { i8*, i32 } %129, 0
  store i8* %130, i8** %11, align 8
  %131 = extractvalue { i8*, i32 } %129, 1
  store i32 %131, i32* %12, align 4
  call void @_ZN6StringD2Ev(%class.String* %20) #9
  br label %327

; <label>:132:                                    ; preds = %217, %192, %179, %177, %175, %168, %155, %150, %106, %97, %87
  %133 = landingpad { i8*, i32 }
          cleanup
  %134 = extractvalue { i8*, i32 } %133, 0
  store i8* %134, i8** %11, align 8
  %135 = extractvalue { i8*, i32 } %133, 1
  store i32 %135, i32* %12, align 4
  br label %236

; <label>:136:                                    ; preds = %99
  %137 = landingpad { i8*, i32 }
          cleanup
  %138 = extractvalue { i8*, i32 } %137, 0
  store i8* %138, i8** %11, align 8
  %139 = extractvalue { i8*, i32 } %137, 1
  store i32 %139, i32* %12, align 4
  br label %149

; <label>:140:                                    ; preds = %102
  %141 = landingpad { i8*, i32 }
          cleanup
  %142 = extractvalue { i8*, i32 } %141, 0
  store i8* %142, i8** %11, align 8
  %143 = extractvalue { i8*, i32 } %141, 1
  store i32 %143, i32* %12, align 4
  br label %148

; <label>:144:                                    ; preds = %105
  %145 = landingpad { i8*, i32 }
          cleanup
  %146 = extractvalue { i8*, i32 } %145, 0
  store i8* %146, i8** %11, align 8
  %147 = extractvalue { i8*, i32 } %145, 1
  store i32 %147, i32* %12, align 4
  call void @_ZN6StringD2Ev(%class.String* %24) #9
  br label %148

; <label>:148:                                    ; preds = %144, %140
  call void @_ZN6StringD2Ev(%class.String* %23) #9
  br label %149

; <label>:149:                                    ; preds = %148, %136
  call void @_ZN6StringD2Ev(%class.String* %22) #9
  br label %236

; <label>:150:                                    ; preds = %93
  %151 = load %class.Lexer*, %class.Lexer** %6, align 8
  %152 = invoke i32 @_ZNK5Lexer12element_typeERK6String(%class.Lexer* %151, %class.String* dereferenceable(24) %19)
          to label %153 unwind label %132

; <label>:153:                                    ; preds = %150
  %154 = icmp sge i32 %152, 0
  br i1 %154, label %155, label %168

; <label>:155:                                    ; preds = %153
  %156 = load %class.ErrorHandler*, %class.ErrorHandler** %9, align 8
  %157 = load %class.Lexer*, %class.Lexer** %6, align 8
  %158 = load i32, i32* %7, align 4
  invoke void @_ZNK5Lexer16element_landmarkEi(%class.String* sret %26, %class.Lexer* %157, i32 %158)
          to label %159 unwind label %132

; <label>:159:                                    ; preds = %155
  %160 = invoke i8* @_ZNK6String5c_strEv(%class.String* %19)
          to label %161 unwind label %164

; <label>:161:                                    ; preds = %159
  %162 = invoke i32 (%class.ErrorHandler*, %class.String*, i8*, ...) @_ZN12ErrorHandler6lerrorERK6StringPKcz(%class.ErrorHandler* %156, %class.String* dereferenceable(24) %26, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i32 0, i32 0), i8* %160)
          to label %163 unwind label %164

; <label>:163:                                    ; preds = %161
  call void @_ZN6StringD2Ev(%class.String* %26) #9
  br label %168

; <label>:164:                                    ; preds = %161, %159
  %165 = landingpad { i8*, i32 }
          cleanup
  %166 = extractvalue { i8*, i32 } %165, 0
  store i8* %166, i8** %11, align 8
  %167 = extractvalue { i8*, i32 } %165, 1
  store i32 %167, i32* %12, align 4
  call void @_ZN6StringD2Ev(%class.String* %26) #9
  br label %236

; <label>:168:                                    ; preds = %163, %153
  %169 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %32, i32 0, i32 11
  %170 = load i32, i32* %18, align 4
  %171 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %169, i32 %170)
          to label %172 unwind label %132

; <label>:172:                                    ; preds = %168
  %173 = load i32, i32* %171, align 4
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %192

; <label>:175:                                    ; preds = %172
  %176 = invoke i32 @_ZNK6VectorIiE4sizeEv(%class.Vector.5* %15)
          to label %177 unwind label %132

; <label>:177:                                    ; preds = %175
  %178 = add nsw i32 %176, 3
  invoke void @_ZN6VectorIiE6resizeEii(%class.Vector.5* %15, i32 %178, i32 0)
          to label %179 unwind label %132

; <label>:179:                                    ; preds = %177
  %180 = load %class.Lexer*, %class.Lexer** %6, align 8
  invoke void @_ZN6StringC2ERKS_(%class.String* %27, %class.String* dereferenceable(24) %19)
          to label %181 unwind label %132

; <label>:181:                                    ; preds = %179
  %182 = invoke i32* @_ZN6VectorIiE3endEv(%class.Vector.5* %15)
          to label %183 unwind label %188

; <label>:183:                                    ; preds = %181
  %184 = getelementptr inbounds i32, i32* %182, i64 -3
  invoke void @_ZN5Lexer11add_tunnelsE6StringPi(%class.Lexer* %180, %class.String* %27, i32* %184)
          to label %185 unwind label %188

; <label>:185:                                    ; preds = %183
  call void @_ZN6StringD2Ev(%class.String* %27) #9
  %186 = load i32, i32* %18, align 4
  %187 = add nsw i32 %186, 2
  store i32 %187, i32* %18, align 4
  br label %229

; <label>:188:                                    ; preds = %183, %181
  %189 = landingpad { i8*, i32 }
          cleanup
  %190 = extractvalue { i8*, i32 } %189, 0
  store i8* %190, i8** %11, align 8
  %191 = extractvalue { i8*, i32 } %189, 1
  store i32 %191, i32* %12, align 4
  call void @_ZN6StringD2Ev(%class.String* %27) #9
  br label %236

; <label>:192:                                    ; preds = %172
  %193 = load %class.Lexer*, %class.Lexer** %6, align 8
  invoke void @_ZN6StringC2ERKS_(%class.String* %28, %class.String* dereferenceable(24) %19)
          to label %194 unwind label %132

; <label>:194:                                    ; preds = %192
  %195 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %32, i32 0, i32 11
  %196 = load i32, i32* %18, align 4
  %197 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %195, i32 %196)
          to label %198 unwind label %220

; <label>:198:                                    ; preds = %194
  %199 = load i32, i32* %197, align 4
  %200 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %32, i32 0, i32 13
  %201 = load i32, i32* %18, align 4
  %202 = invoke dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %200, i32 %201)
          to label %203 unwind label %220

; <label>:203:                                    ; preds = %198
  %204 = load %class.VariableEnvironment*, %class.VariableEnvironment** %8, align 8
  %205 = bitcast %class.VariableEnvironment* %204 to %class.VariableExpander*
  invoke void @_Z9cp_expandRK6StringRK16VariableExpanderbi(%class.String* sret %29, %class.String* dereferenceable(24) %202, %class.VariableExpander* dereferenceable(8) %205, i1 zeroext false, i32 0)
          to label %206 unwind label %220

; <label>:206:                                    ; preds = %203
  %207 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %32, i32 0, i32 14
  %208 = load i32, i32* %18, align 4
  %209 = invoke dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %207, i32 %208)
          to label %210 unwind label %224

; <label>:210:                                    ; preds = %206
  %211 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %32, i32 0, i32 15
  %212 = load i32, i32* %18, align 4
  %213 = invoke dereferenceable(4) i32* @_ZN6VectorIjEixEi(%class.Vector.2* %211, i32 %212)
          to label %214 unwind label %224

; <label>:214:                                    ; preds = %210
  %215 = load i32, i32* %213, align 4
  %216 = invoke i32 @_ZN5Lexer11get_elementE6StringiRKS0_S2_j(%class.Lexer* %193, %class.String* %28, i32 %199, %class.String* dereferenceable(24) %29, %class.String* dereferenceable(24) %209, i32 %215)
          to label %217 unwind label %224

; <label>:217:                                    ; preds = %214
  store i32 %216, i32* %21, align 4
  call void @_ZN6StringD2Ev(%class.String* %29) #9
  call void @_ZN6StringD2Ev(%class.String* %28) #9
  %218 = load i32, i32* %21, align 4
  invoke void @_ZN6VectorIiE9push_backEi(%class.Vector.5* %15, i32 %218)
          to label %219 unwind label %132

; <label>:219:                                    ; preds = %217
  br label %229

; <label>:220:                                    ; preds = %203, %198, %194
  %221 = landingpad { i8*, i32 }
          cleanup
  %222 = extractvalue { i8*, i32 } %221, 0
  store i8* %222, i8** %11, align 8
  %223 = extractvalue { i8*, i32 } %221, 1
  store i32 %223, i32* %12, align 4
  br label %228

; <label>:224:                                    ; preds = %214, %210, %206
  %225 = landingpad { i8*, i32 }
          cleanup
  %226 = extractvalue { i8*, i32 } %225, 0
  store i8* %226, i8** %11, align 8
  %227 = extractvalue { i8*, i32 } %225, 1
  store i32 %227, i32* %12, align 4
  call void @_ZN6StringD2Ev(%class.String* %29) #9
  br label %228

; <label>:228:                                    ; preds = %224, %220
  call void @_ZN6StringD2Ev(%class.String* %28) #9
  br label %236

; <label>:229:                                    ; preds = %219, %185
  store i32 0, i32* %25, align 4
  br label %230

; <label>:230:                                    ; preds = %229, %107
  call void @_ZN6StringD2Ev(%class.String* %19) #9
  %231 = load i32, i32* %25, align 4
  switch i32 %231, label %335 [
    i32 0, label %232
    i32 4, label %233
  ]

; <label>:232:                                    ; preds = %230
  br label %233

; <label>:233:                                    ; preds = %232, %230
  %234 = load i32, i32* %18, align 4
  %235 = add nsw i32 %234, 1
  store i32 %235, i32* %18, align 4
  br label %75

; <label>:236:                                    ; preds = %228, %188, %164, %149, %132
  call void @_ZN6StringD2Ev(%class.String* %19) #9
  br label %327

; <label>:237:                                    ; preds = %79
  %238 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %32, i32 0, i32 19
  %239 = invoke %"struct.Router::Connection"* @_ZN6VectorIN6Router10ConnectionEE5beginEv(%class.Vector.8* %238)
          to label %240 unwind label %124

; <label>:240:                                    ; preds = %237
  store %"struct.Router::Connection"* %239, %"struct.Router::Connection"** %30, align 8
  br label %241

; <label>:241:                                    ; preds = %299, %240
  %242 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %30, align 8
  %243 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %32, i32 0, i32 19
  %244 = invoke %"struct.Router::Connection"* @_ZN6VectorIN6Router10ConnectionEE3endEv(%class.Vector.8* %243)
          to label %245 unwind label %124

; <label>:245:                                    ; preds = %241
  %246 = icmp ne %"struct.Router::Connection"* %242, %244
  br i1 %246, label %247, label %302

; <label>:247:                                    ; preds = %245
  %248 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %30, align 8
  %249 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZNK6Router10ConnectionixEi(%"struct.Router::Connection"* %248, i32 0)
          to label %250 unwind label %124

; <label>:250:                                    ; preds = %247
  %251 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %249, i32 0, i32 0
  %252 = load i32, i32* %251, align 4
  %253 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %15, i32 %252)
          to label %254 unwind label %124

; <label>:254:                                    ; preds = %250
  %255 = load i32, i32* %253, align 4
  %256 = icmp sge i32 %255, 0
  br i1 %256, label %257, label %298

; <label>:257:                                    ; preds = %254
  %258 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %30, align 8
  %259 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZNK6Router10ConnectionixEi(%"struct.Router::Connection"* %258, i32 1)
          to label %260 unwind label %124

; <label>:260:                                    ; preds = %257
  %261 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %259, i32 0, i32 0
  %262 = load i32, i32* %261, align 4
  %263 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %15, i32 %262)
          to label %264 unwind label %124

; <label>:264:                                    ; preds = %260
  %265 = load i32, i32* %263, align 4
  %266 = icmp sge i32 %265, 0
  br i1 %266, label %267, label %298

; <label>:267:                                    ; preds = %264
  %268 = load %class.Lexer*, %class.Lexer** %6, align 8
  %269 = getelementptr inbounds %class.Lexer, %class.Lexer* %268, i32 0, i32 12
  %270 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %269, align 8
  %271 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %30, align 8
  %272 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZNK6Router10ConnectionixEi(%"struct.Router::Connection"* %271, i32 1)
          to label %273 unwind label %124

; <label>:273:                                    ; preds = %267
  %274 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %272, i32 0, i32 0
  %275 = load i32, i32* %274, align 4
  %276 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %15, i32 %275)
          to label %277 unwind label %124

; <label>:277:                                    ; preds = %273
  %278 = load i32, i32* %276, align 4
  %279 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %30, align 8
  %280 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZNK6Router10ConnectionixEi(%"struct.Router::Connection"* %279, i32 1)
          to label %281 unwind label %124

; <label>:281:                                    ; preds = %277
  %282 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %280, i32 0, i32 1
  %283 = load i32, i32* %282, align 4
  %284 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %30, align 8
  %285 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZNK6Router10ConnectionixEi(%"struct.Router::Connection"* %284, i32 0)
          to label %286 unwind label %124

; <label>:286:                                    ; preds = %281
  %287 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %285, i32 0, i32 0
  %288 = load i32, i32* %287, align 4
  %289 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %15, i32 %288)
          to label %290 unwind label %124

; <label>:290:                                    ; preds = %286
  %291 = load i32, i32* %289, align 4
  %292 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %30, align 8
  %293 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZNK6Router10ConnectionixEi(%"struct.Router::Connection"* %292, i32 0)
          to label %294 unwind label %124

; <label>:294:                                    ; preds = %290
  %295 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %293, i32 0, i32 1
  %296 = load i32, i32* %295, align 4
  invoke void @_ZN5Lexer8Compound7connectEiiii(%"class.Lexer::Compound"* %270, i32 %278, i32 %283, i32 %291, i32 %296)
          to label %297 unwind label %124

; <label>:297:                                    ; preds = %294
  br label %298

; <label>:298:                                    ; preds = %297, %264, %254
  br label %299

; <label>:299:                                    ; preds = %298
  %300 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %30, align 8
  %301 = getelementptr inbounds %"struct.Router::Connection", %"struct.Router::Connection"* %300, i32 1
  store %"struct.Router::Connection"* %301, %"struct.Router::Connection"** %30, align 8
  br label %241

; <label>:302:                                    ; preds = %245
  store i32 2, i32* %31, align 4
  br label %303

; <label>:303:                                    ; preds = %323, %302
  %304 = load i32, i32* %31, align 4
  %305 = invoke i32 @_ZNK6VectorIiE4sizeEv(%class.Vector.5* %15)
          to label %306 unwind label %124

; <label>:306:                                    ; preds = %303
  %307 = icmp slt i32 %304, %305
  br i1 %307, label %308, label %326

; <label>:308:                                    ; preds = %306
  %309 = load i32, i32* %31, align 4
  %310 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %15, i32 %309)
          to label %311 unwind label %124

; <label>:311:                                    ; preds = %308
  %312 = load i32, i32* %310, align 4
  %313 = icmp sge i32 %312, 0
  br i1 %313, label %314, label %322

; <label>:314:                                    ; preds = %311
  %315 = load %class.Lexer*, %class.Lexer** %6, align 8
  %316 = load i32, i32* %31, align 4
  %317 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %15, i32 %316)
          to label %318 unwind label %124

; <label>:318:                                    ; preds = %314
  %319 = load i32, i32* %317, align 4
  %320 = load %class.VariableEnvironment*, %class.VariableEnvironment** %8, align 8
  invoke void @_ZN5Lexer23expand_compound_elementEiR19VariableEnvironment(%class.Lexer* %315, i32 %319, %class.VariableEnvironment* dereferenceable(56) %320)
          to label %321 unwind label %124

; <label>:321:                                    ; preds = %318
  br label %322

; <label>:322:                                    ; preds = %321, %311
  br label %323

; <label>:323:                                    ; preds = %322
  %324 = load i32, i32* %31, align 4
  %325 = add nsw i32 %324, 1
  store i32 %325, i32* %31, align 4
  br label %303

; <label>:326:                                    ; preds = %306
  call void @_ZN6StringD2Ev(%class.String* %16) #9
  call void @_ZN6VectorIiED2Ev(%class.Vector.5* %15) #9
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  ret void

; <label>:327:                                    ; preds = %236, %128, %124
  call void @_ZN6StringD2Ev(%class.String* %16) #9
  br label %328

; <label>:328:                                    ; preds = %327, %120, %116
  call void @_ZN6VectorIiED2Ev(%class.Vector.5* %15) #9
  br label %329

; <label>:329:                                    ; preds = %328, %112, %108
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  br label %330

; <label>:330:                                    ; preds = %329
  %331 = load i8*, i8** %11, align 8
  %332 = load i32, i32* %12, align 4
  %333 = insertvalue { i8*, i32 } undef, i8* %331, 0
  %334 = insertvalue { i8*, i32 } %333, i32 %332, 1
  resume { i8*, i32 } %334

; <label>:335:                                    ; preds = %230
  unreachable
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer11add_tunnelsE6StringPi(%class.Lexer*, %class.String*, i32*) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.Lexer*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca [4 x %class.String], align 16
  %7 = alloca i8*
  %8 = alloca i32
  %9 = alloca %class.String, align 8
  %10 = alloca %class.String, align 8
  %11 = alloca %class.String, align 8
  %12 = alloca %class.String, align 8
  %13 = alloca %class.String, align 8
  %14 = alloca %class.String, align 8
  %15 = alloca [4 x %"struct.Router::Port"], align 16
  %16 = alloca i8, align 1
  %17 = alloca i32, align 4
  %18 = alloca %class.String, align 8
  %19 = alloca %class.String, align 8
  %20 = alloca %class.String, align 8
  %21 = alloca %class.String, align 8
  %22 = alloca %class.String, align 8
  %23 = alloca %class.String, align 8
  %24 = alloca [4 x %"class.Lexer::TunnelEnd"*], align 16
  %25 = alloca i32, align 4
  %26 = alloca %class.String, align 8
  %27 = alloca %class.String, align 8
  %28 = alloca %class.String, align 8
  store %class.Lexer* %0, %class.Lexer** %4, align 8
  store i32* %2, i32** %5, align 8
  %29 = load %class.Lexer*, %class.Lexer** %4, align 8
  %30 = getelementptr inbounds [4 x %class.String], [4 x %class.String]* %6, i32 0, i32 0
  %31 = getelementptr inbounds %class.String, %class.String* %30, i64 4
  br label %32

; <label>:32:                                     ; preds = %34, %3
  %33 = phi %class.String* [ %30, %3 ], [ %35, %34 ]
  invoke void @_ZN6StringC2Ev(%class.String* %33)
          to label %34 unwind label %120

; <label>:34:                                     ; preds = %32
  %35 = getelementptr inbounds %class.String, %class.String* %33, i64 1
  %36 = icmp eq %class.String* %35, %31
  br i1 %36, label %37, label %32

; <label>:37:                                     ; preds = %34
  %38 = getelementptr inbounds [4 x %class.String], [4 x %class.String]* %6, i64 0, i64 3
  %39 = invoke dereferenceable(24) %class.String* @_ZN6StringaSERKS_(%class.String* %38, %class.String* dereferenceable(24) %1)
          to label %40 unwind label %130

; <label>:40:                                     ; preds = %37
  %41 = getelementptr inbounds [4 x %class.String], [4 x %class.String]* %6, i64 0, i64 0
  %42 = invoke dereferenceable(24) %class.String* @_ZN6StringaSERKS_(%class.String* %41, %class.String* dereferenceable(24) %39)
          to label %43 unwind label %130

; <label>:43:                                     ; preds = %40
  invoke void @_ZN6StringC2ERKS_(%class.String* %11, %class.String* dereferenceable(24) %1)
          to label %44 unwind label %130

; <label>:44:                                     ; preds = %43
  invoke void @_Zpl6StringPKc(%class.String* sret %10, %class.String* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i32 0, i32 0))
          to label %45 unwind label %134

; <label>:45:                                     ; preds = %44
  %46 = load i8*, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZL10port_names, i64 0, i64 0), align 16
  invoke void @_Zpl6StringPKc(%class.String* sret %9, %class.String* %10, i8* %46)
          to label %47 unwind label %138

; <label>:47:                                     ; preds = %45
  %48 = getelementptr inbounds [4 x %class.String], [4 x %class.String]* %6, i64 0, i64 1
  %49 = invoke dereferenceable(24) %class.String* @_ZN6StringaSEOS_(%class.String* %48, %class.String* dereferenceable(24) %9)
          to label %50 unwind label %142

; <label>:50:                                     ; preds = %47
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  invoke void @_ZN6StringC2ERKS_(%class.String* %14, %class.String* dereferenceable(24) %1)
          to label %51 unwind label %130

; <label>:51:                                     ; preds = %50
  invoke void @_Zpl6StringPKc(%class.String* sret %13, %class.String* %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i32 0, i32 0))
          to label %52 unwind label %148

; <label>:52:                                     ; preds = %51
  %53 = load i8*, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZL10port_names, i64 0, i64 1), align 8
  invoke void @_Zpl6StringPKc(%class.String* sret %12, %class.String* %13, i8* %53)
          to label %54 unwind label %152

; <label>:54:                                     ; preds = %52
  %55 = getelementptr inbounds [4 x %class.String], [4 x %class.String]* %6, i64 0, i64 2
  %56 = invoke dereferenceable(24) %class.String* @_ZN6StringaSEOS_(%class.String* %55, %class.String* dereferenceable(24) %12)
          to label %57 unwind label %156

; <label>:57:                                     ; preds = %54
  call void @_ZN6StringD2Ev(%class.String* %12) #9
  call void @_ZN6StringD2Ev(%class.String* %13) #9
  call void @_ZN6StringD2Ev(%class.String* %14) #9
  %58 = getelementptr inbounds [4 x %"struct.Router::Port"], [4 x %"struct.Router::Port"]* %15, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %58, i64 4
  br label %60

; <label>:60:                                     ; preds = %62, %57
  %61 = phi %"struct.Router::Port"* [ %58, %57 ], [ %63, %62 ]
  invoke void @_ZN6Router4PortC2Ev(%"struct.Router::Port"* %61)
          to label %62 unwind label %130

; <label>:62:                                     ; preds = %60
  %63 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %61, i64 1
  %64 = icmp eq %"struct.Router::Port"* %63, %59
  br i1 %64, label %65, label %60

; <label>:65:                                     ; preds = %62
  store i8 1, i8* %16, align 1
  store i32 0, i32* %17, align 4
  br label %66

; <label>:66:                                     ; preds = %191, %65
  %67 = load i32, i32* %17, align 4
  %68 = icmp slt i32 %67, 3
  br i1 %68, label %69, label %194

; <label>:69:                                     ; preds = %66
  %70 = load i32, i32* %17, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds [4 x %class.String], [4 x %class.String]* %6, i64 0, i64 %71
  invoke void @_ZN6StringC2ERKS_(%class.String* %18, %class.String* dereferenceable(24) %72)
          to label %73 unwind label %130

; <label>:73:                                     ; preds = %69
  invoke void @_ZN6StringC2Ev(%class.String* %19)
          to label %74 unwind label %162

; <label>:74:                                     ; preds = %73
  invoke void @_ZN6StringC2Ev(%class.String* %20)
          to label %75 unwind label %166

; <label>:75:                                     ; preds = %74
  %76 = invoke i32 @_ZN5Lexer11get_elementE6StringiRKS0_S2_j(%class.Lexer* %29, %class.String* %18, i32 0, %class.String* dereferenceable(24) %19, %class.String* dereferenceable(24) %20, i32 0)
          to label %77 unwind label %170

; <label>:77:                                     ; preds = %75
  %78 = load i32*, i32** %5, align 8
  %79 = load i32, i32* %17, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i32, i32* %78, i64 %80
  store i32 %76, i32* %81, align 4
  %82 = load i32, i32* %17, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds [4 x %"struct.Router::Port"], [4 x %"struct.Router::Port"]* %15, i64 0, i64 %83
  %85 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %84, i32 0, i32 0
  store i32 %76, i32* %85, align 8
  call void @_ZN6StringD2Ev(%class.String* %20) #9
  call void @_ZN6StringD2Ev(%class.String* %19) #9
  call void @_ZN6StringD2Ev(%class.String* %18) #9
  %86 = load i32, i32* %17, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [4 x %"struct.Router::Port"], [4 x %"struct.Router::Port"]* %15, i64 0, i64 %87
  %89 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %88, i32 0, i32 1
  store i32 0, i32* %89, align 4
  %90 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 12
  %91 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %90, align 8
  %92 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %91, i32 0, i32 11
  %93 = load i32*, i32** %5, align 8
  %94 = load i32, i32* %17, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds i32, i32* %93, i64 %95
  %97 = load i32, i32* %96, align 4
  %98 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %92, i32 %97)
          to label %99 unwind label %130

; <label>:99:                                     ; preds = %77
  %100 = load i32, i32* %98, align 4
  %101 = icmp ne i32 %100, 0
  br i1 %101, label %102, label %190

; <label>:102:                                    ; preds = %99
  %103 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 19
  %104 = load %class.ErrorHandler*, %class.ErrorHandler** %103, align 8
  %105 = load i32, i32* %17, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds [4 x %class.String], [4 x %class.String]* %6, i64 0, i64 %106
  invoke void @_ZN6StringC2ERKS_(%class.String* %21, %class.String* dereferenceable(24) %107)
          to label %108 unwind label %130

; <label>:108:                                    ; preds = %102
  %109 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 1
  invoke void @_ZNK5Lexer9FileState8landmarkEv(%class.String* sret %22, %"struct.Lexer::FileState"* %109)
          to label %110 unwind label %176

; <label>:110:                                    ; preds = %108
  %111 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 12
  %112 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %111, align 8
  %113 = load i32, i32* %17, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds [4 x %"struct.Router::Port"], [4 x %"struct.Router::Port"]* %15, i64 0, i64 %114
  %116 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %115, i32 0, i32 0
  %117 = load i32, i32* %116, align 8
  invoke void @_ZNK5Lexer8Compound16element_landmarkEi(%class.String* sret %23, %"class.Lexer::Compound"* %112, i32 %117)
          to label %118 unwind label %180

; <label>:118:                                    ; preds = %110
  invoke void @_ZL19redeclaration_errorP12ErrorHandlerPKc6StringRKS3_S5_(%class.ErrorHandler* %104, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0), %class.String* %21, %class.String* dereferenceable(24) %22, %class.String* dereferenceable(24) %23)
          to label %119 unwind label %184

; <label>:119:                                    ; preds = %118
  call void @_ZN6StringD2Ev(%class.String* %23) #9
  call void @_ZN6StringD2Ev(%class.String* %22) #9
  call void @_ZN6StringD2Ev(%class.String* %21) #9
  store i8 0, i8* %16, align 1
  br label %190

; <label>:120:                                    ; preds = %32
  %121 = landingpad { i8*, i32 }
          cleanup
  %122 = extractvalue { i8*, i32 } %121, 0
  store i8* %122, i8** %7, align 8
  %123 = extractvalue { i8*, i32 } %121, 1
  store i32 %123, i32* %8, align 4
  %124 = icmp eq %class.String* %30, %33
  br i1 %124, label %129, label %125

; <label>:125:                                    ; preds = %125, %120
  %126 = phi %class.String* [ %33, %120 ], [ %127, %125 ]
  %127 = getelementptr inbounds %class.String, %class.String* %126, i64 -1
  call void @_ZN6StringD2Ev(%class.String* %127) #9
  %128 = icmp eq %class.String* %127, %30
  br i1 %128, label %129, label %125

; <label>:129:                                    ; preds = %125, %120
  br label %297

; <label>:130:                                    ; preds = %274, %269, %230, %219, %211, %201, %102, %77, %69, %60, %50, %43, %40, %37
  %131 = landingpad { i8*, i32 }
          cleanup
  %132 = extractvalue { i8*, i32 } %131, 0
  store i8* %132, i8** %7, align 8
  %133 = extractvalue { i8*, i32 } %131, 1
  store i32 %133, i32* %8, align 4
  br label %289

; <label>:134:                                    ; preds = %44
  %135 = landingpad { i8*, i32 }
          cleanup
  %136 = extractvalue { i8*, i32 } %135, 0
  store i8* %136, i8** %7, align 8
  %137 = extractvalue { i8*, i32 } %135, 1
  store i32 %137, i32* %8, align 4
  br label %147

; <label>:138:                                    ; preds = %45
  %139 = landingpad { i8*, i32 }
          cleanup
  %140 = extractvalue { i8*, i32 } %139, 0
  store i8* %140, i8** %7, align 8
  %141 = extractvalue { i8*, i32 } %139, 1
  store i32 %141, i32* %8, align 4
  br label %146

; <label>:142:                                    ; preds = %47
  %143 = landingpad { i8*, i32 }
          cleanup
  %144 = extractvalue { i8*, i32 } %143, 0
  store i8* %144, i8** %7, align 8
  %145 = extractvalue { i8*, i32 } %143, 1
  store i32 %145, i32* %8, align 4
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  br label %146

; <label>:146:                                    ; preds = %142, %138
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  br label %147

; <label>:147:                                    ; preds = %146, %134
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  br label %289

; <label>:148:                                    ; preds = %51
  %149 = landingpad { i8*, i32 }
          cleanup
  %150 = extractvalue { i8*, i32 } %149, 0
  store i8* %150, i8** %7, align 8
  %151 = extractvalue { i8*, i32 } %149, 1
  store i32 %151, i32* %8, align 4
  br label %161

; <label>:152:                                    ; preds = %52
  %153 = landingpad { i8*, i32 }
          cleanup
  %154 = extractvalue { i8*, i32 } %153, 0
  store i8* %154, i8** %7, align 8
  %155 = extractvalue { i8*, i32 } %153, 1
  store i32 %155, i32* %8, align 4
  br label %160

; <label>:156:                                    ; preds = %54
  %157 = landingpad { i8*, i32 }
          cleanup
  %158 = extractvalue { i8*, i32 } %157, 0
  store i8* %158, i8** %7, align 8
  %159 = extractvalue { i8*, i32 } %157, 1
  store i32 %159, i32* %8, align 4
  call void @_ZN6StringD2Ev(%class.String* %12) #9
  br label %160

; <label>:160:                                    ; preds = %156, %152
  call void @_ZN6StringD2Ev(%class.String* %13) #9
  br label %161

; <label>:161:                                    ; preds = %160, %148
  call void @_ZN6StringD2Ev(%class.String* %14) #9
  br label %289

; <label>:162:                                    ; preds = %73
  %163 = landingpad { i8*, i32 }
          cleanup
  %164 = extractvalue { i8*, i32 } %163, 0
  store i8* %164, i8** %7, align 8
  %165 = extractvalue { i8*, i32 } %163, 1
  store i32 %165, i32* %8, align 4
  br label %175

; <label>:166:                                    ; preds = %74
  %167 = landingpad { i8*, i32 }
          cleanup
  %168 = extractvalue { i8*, i32 } %167, 0
  store i8* %168, i8** %7, align 8
  %169 = extractvalue { i8*, i32 } %167, 1
  store i32 %169, i32* %8, align 4
  br label %174

; <label>:170:                                    ; preds = %75
  %171 = landingpad { i8*, i32 }
          cleanup
  %172 = extractvalue { i8*, i32 } %171, 0
  store i8* %172, i8** %7, align 8
  %173 = extractvalue { i8*, i32 } %171, 1
  store i32 %173, i32* %8, align 4
  call void @_ZN6StringD2Ev(%class.String* %20) #9
  br label %174

; <label>:174:                                    ; preds = %170, %166
  call void @_ZN6StringD2Ev(%class.String* %19) #9
  br label %175

; <label>:175:                                    ; preds = %174, %162
  call void @_ZN6StringD2Ev(%class.String* %18) #9
  br label %289

; <label>:176:                                    ; preds = %108
  %177 = landingpad { i8*, i32 }
          cleanup
  %178 = extractvalue { i8*, i32 } %177, 0
  store i8* %178, i8** %7, align 8
  %179 = extractvalue { i8*, i32 } %177, 1
  store i32 %179, i32* %8, align 4
  br label %189

; <label>:180:                                    ; preds = %110
  %181 = landingpad { i8*, i32 }
          cleanup
  %182 = extractvalue { i8*, i32 } %181, 0
  store i8* %182, i8** %7, align 8
  %183 = extractvalue { i8*, i32 } %181, 1
  store i32 %183, i32* %8, align 4
  br label %188

; <label>:184:                                    ; preds = %118
  %185 = landingpad { i8*, i32 }
          cleanup
  %186 = extractvalue { i8*, i32 } %185, 0
  store i8* %186, i8** %7, align 8
  %187 = extractvalue { i8*, i32 } %185, 1
  store i32 %187, i32* %8, align 4
  call void @_ZN6StringD2Ev(%class.String* %23) #9
  br label %188

; <label>:188:                                    ; preds = %184, %180
  call void @_ZN6StringD2Ev(%class.String* %22) #9
  br label %189

; <label>:189:                                    ; preds = %188, %176
  call void @_ZN6StringD2Ev(%class.String* %21) #9
  br label %289

; <label>:190:                                    ; preds = %119, %99
  br label %191

; <label>:191:                                    ; preds = %190
  %192 = load i32, i32* %17, align 4
  %193 = add nsw i32 %192, 1
  store i32 %193, i32* %17, align 4
  br label %66

; <label>:194:                                    ; preds = %66
  %195 = getelementptr inbounds [4 x %"struct.Router::Port"], [4 x %"struct.Router::Port"]* %15, i64 0, i64 0
  %196 = getelementptr inbounds [4 x %"struct.Router::Port"], [4 x %"struct.Router::Port"]* %15, i64 0, i64 3
  %197 = bitcast %"struct.Router::Port"* %196 to i8*
  %198 = bitcast %"struct.Router::Port"* %195 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %197, i8* %198, i64 8, i32 4, i1 false)
  %199 = load i8, i8* %16, align 1
  %200 = trunc i8 %199 to i1
  br i1 %200, label %201, label %281

; <label>:201:                                    ; preds = %194
  %202 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 12
  %203 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %202, align 8
  %204 = invoke i32 @_ZNK5Lexer8Compound5depthEv(%"class.Lexer::Compound"* %203)
          to label %205 unwind label %130

; <label>:205:                                    ; preds = %201
  %206 = icmp eq i32 %204, 0
  br i1 %206, label %207, label %281

; <label>:207:                                    ; preds = %205
  store i32 0, i32* %25, align 4
  br label %208

; <label>:208:                                    ; preds = %263, %207
  %209 = load i32, i32* %25, align 4
  %210 = icmp slt i32 %209, 4
  br i1 %210, label %211, label %266

; <label>:211:                                    ; preds = %208
  %212 = load i32, i32* %25, align 4
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds [4 x %"struct.Router::Port"], [4 x %"struct.Router::Port"]* %15, i64 0, i64 %213
  %215 = load i32, i32* %25, align 4
  %216 = srem i32 %215, 2
  %217 = icmp ne i32 %216, 0
  %218 = invoke %"class.Lexer::TunnelEnd"* @_ZN5Lexer11find_tunnelERKN6Router4PortEbb(%class.Lexer* %29, %"struct.Router::Port"* dereferenceable(8) %214, i1 zeroext %217, i1 zeroext true)
          to label %219 unwind label %130

; <label>:219:                                    ; preds = %211
  %220 = load i32, i32* %25, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds [4 x %"class.Lexer::TunnelEnd"*], [4 x %"class.Lexer::TunnelEnd"*]* %24, i64 0, i64 %221
  store %"class.Lexer::TunnelEnd"* %218, %"class.Lexer::TunnelEnd"** %222, align 8
  %223 = load i32, i32* %25, align 4
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds [4 x %"class.Lexer::TunnelEnd"*], [4 x %"class.Lexer::TunnelEnd"*]* %24, i64 0, i64 %224
  %226 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %225, align 8
  %227 = invoke %"class.Lexer::TunnelEnd"* @_ZNK5Lexer9TunnelEnd5otherEv(%"class.Lexer::TunnelEnd"* %226)
          to label %228 unwind label %130

; <label>:228:                                    ; preds = %219
  %229 = icmp ne %"class.Lexer::TunnelEnd"* %227, null
  br i1 %229, label %230, label %262

; <label>:230:                                    ; preds = %228
  %231 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 19
  %232 = load %class.ErrorHandler*, %class.ErrorHandler** %231, align 8
  %233 = load i32, i32* %25, align 4
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds [4 x %class.String], [4 x %class.String]* %6, i64 0, i64 %234
  invoke void @_ZN6StringC2ERKS_(%class.String* %26, %class.String* dereferenceable(24) %235)
          to label %236 unwind label %130

; <label>:236:                                    ; preds = %230
  %237 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 1
  invoke void @_ZNK5Lexer9FileState8landmarkEv(%class.String* sret %27, %"struct.Lexer::FileState"* %237)
          to label %238 unwind label %248

; <label>:238:                                    ; preds = %236
  %239 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 12
  %240 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %239, align 8
  %241 = load i32, i32* %25, align 4
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds [4 x %"struct.Router::Port"], [4 x %"struct.Router::Port"]* %15, i64 0, i64 %242
  %244 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %243, i32 0, i32 0
  %245 = load i32, i32* %244, align 8
  invoke void @_ZNK5Lexer8Compound16element_landmarkEi(%class.String* sret %28, %"class.Lexer::Compound"* %240, i32 %245)
          to label %246 unwind label %252

; <label>:246:                                    ; preds = %238
  invoke void @_ZL19redeclaration_errorP12ErrorHandlerPKc6StringRKS3_S5_(%class.ErrorHandler* %232, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.44, i32 0, i32 0), %class.String* %26, %class.String* dereferenceable(24) %27, %class.String* dereferenceable(24) %28)
          to label %247 unwind label %256

; <label>:247:                                    ; preds = %246
  call void @_ZN6StringD2Ev(%class.String* %28) #9
  call void @_ZN6StringD2Ev(%class.String* %27) #9
  call void @_ZN6StringD2Ev(%class.String* %26) #9
  store i8 0, i8* %16, align 1
  br label %262

; <label>:248:                                    ; preds = %236
  %249 = landingpad { i8*, i32 }
          cleanup
  %250 = extractvalue { i8*, i32 } %249, 0
  store i8* %250, i8** %7, align 8
  %251 = extractvalue { i8*, i32 } %249, 1
  store i32 %251, i32* %8, align 4
  br label %261

; <label>:252:                                    ; preds = %238
  %253 = landingpad { i8*, i32 }
          cleanup
  %254 = extractvalue { i8*, i32 } %253, 0
  store i8* %254, i8** %7, align 8
  %255 = extractvalue { i8*, i32 } %253, 1
  store i32 %255, i32* %8, align 4
  br label %260

; <label>:256:                                    ; preds = %246
  %257 = landingpad { i8*, i32 }
          cleanup
  %258 = extractvalue { i8*, i32 } %257, 0
  store i8* %258, i8** %7, align 8
  %259 = extractvalue { i8*, i32 } %257, 1
  store i32 %259, i32* %8, align 4
  call void @_ZN6StringD2Ev(%class.String* %28) #9
  br label %260

; <label>:260:                                    ; preds = %256, %252
  call void @_ZN6StringD2Ev(%class.String* %27) #9
  br label %261

; <label>:261:                                    ; preds = %260, %248
  call void @_ZN6StringD2Ev(%class.String* %26) #9
  br label %289

; <label>:262:                                    ; preds = %247, %228
  br label %263

; <label>:263:                                    ; preds = %262
  %264 = load i32, i32* %25, align 4
  %265 = add nsw i32 %264, 1
  store i32 %265, i32* %25, align 4
  br label %208

; <label>:266:                                    ; preds = %208
  %267 = load i8, i8* %16, align 1
  %268 = trunc i8 %267 to i1
  br i1 %268, label %269, label %280

; <label>:269:                                    ; preds = %266
  %270 = getelementptr inbounds [4 x %"class.Lexer::TunnelEnd"*], [4 x %"class.Lexer::TunnelEnd"*]* %24, i64 0, i64 0
  %271 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %270, align 16
  %272 = getelementptr inbounds [4 x %"class.Lexer::TunnelEnd"*], [4 x %"class.Lexer::TunnelEnd"*]* %24, i64 0, i64 1
  %273 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %272, align 8
  invoke void @_ZN5Lexer9TunnelEnd9pair_withEPS0_(%"class.Lexer::TunnelEnd"* %271, %"class.Lexer::TunnelEnd"* %273)
          to label %274 unwind label %130

; <label>:274:                                    ; preds = %269
  %275 = getelementptr inbounds [4 x %"class.Lexer::TunnelEnd"*], [4 x %"class.Lexer::TunnelEnd"*]* %24, i64 0, i64 2
  %276 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %275, align 16
  %277 = getelementptr inbounds [4 x %"class.Lexer::TunnelEnd"*], [4 x %"class.Lexer::TunnelEnd"*]* %24, i64 0, i64 3
  %278 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %277, align 8
  invoke void @_ZN5Lexer9TunnelEnd9pair_withEPS0_(%"class.Lexer::TunnelEnd"* %276, %"class.Lexer::TunnelEnd"* %278)
          to label %279 unwind label %130

; <label>:279:                                    ; preds = %274
  br label %280

; <label>:280:                                    ; preds = %279, %266
  br label %281

; <label>:281:                                    ; preds = %280, %205, %194
  %282 = getelementptr inbounds [4 x %class.String], [4 x %class.String]* %6, i32 0, i32 0
  %283 = getelementptr inbounds %class.String, %class.String* %282, i64 4
  br label %284

; <label>:284:                                    ; preds = %284, %281
  %285 = phi %class.String* [ %283, %281 ], [ %286, %284 ]
  %286 = getelementptr inbounds %class.String, %class.String* %285, i64 -1
  call void @_ZN6StringD2Ev(%class.String* %286) #9
  %287 = icmp eq %class.String* %286, %282
  br i1 %287, label %288, label %284

; <label>:288:                                    ; preds = %284
  ret void

; <label>:289:                                    ; preds = %261, %189, %175, %161, %147, %130
  %290 = getelementptr inbounds [4 x %class.String], [4 x %class.String]* %6, i32 0, i32 0
  %291 = getelementptr inbounds %class.String, %class.String* %290, i64 4
  br label %292

; <label>:292:                                    ; preds = %292, %289
  %293 = phi %class.String* [ %291, %289 ], [ %294, %292 ]
  %294 = getelementptr inbounds %class.String, %class.String* %293, i64 -1
  call void @_ZN6StringD2Ev(%class.String* %294) #9
  %295 = icmp eq %class.String* %294, %290
  br i1 %295, label %296, label %292

; <label>:296:                                    ; preds = %292
  br label %297

; <label>:297:                                    ; preds = %296, %129
  %298 = load i8*, i8** %7, align 8
  %299 = load i32, i32* %8, align 4
  %300 = insertvalue { i8*, i32 } undef, i8* %298, 0
  %301 = insertvalue { i8*, i32 } %300, i32 %299, 1
  resume { i8*, i32 } %301
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6VectorIiE9push_backEi(%class.Vector.5*, i32) #2 comdat align 2 {
  %3 = alloca %class.Vector.5*, align 8
  %4 = alloca i32, align 4
  store %class.Vector.5* %0, %class.Vector.5** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Vector.5*, %class.Vector.5** %3, align 8
  %6 = getelementptr inbounds %class.Vector.5, %class.Vector.5* %5, i32 0, i32 0
  %7 = call %struct.char_array.4* @_ZN18sized_array_memoryILm4EE4castIiEEP10char_arrayILm4EEPT_(i32* %4)
  call void @_ZN13vector_memoryI18sized_array_memoryILm4EEE9push_backEPK10char_arrayILm4EE(%class.vector_memory.3* %6, %struct.char_array.4* %7)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_Zpl6StringPKc(%class.String* noalias sret, %class.String*, i8*) #2 comdat {
  %4 = alloca i8*, align 8
  store i8* %2, i8** %4, align 8
  %5 = load i8*, i8** %4, align 8
  call void @_ZN6String6appendEPKc(%class.String* %1, i8* %5)
  call void @_ZN6StringC2EOS_(%class.String* %0, %class.String* dereferenceable(24) %1)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_Zpl6StringRKS_(%class.String* noalias sret, %class.String*, %class.String* dereferenceable(24)) #2 comdat {
  %4 = alloca %class.String*, align 8
  store %class.String* %2, %class.String** %4, align 8
  %5 = load %class.String*, %class.String** %4, align 8
  %6 = call dereferenceable(24) %class.String* @_ZN6StringpLERKS_(%class.String* %1, %class.String* dereferenceable(24) %5)
  call void @_ZN6StringC2EOS_(%class.String* %0, %class.String* dereferenceable(24) %1)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dereferenceable(4) i32* @_ZN9HashTableI6StringiEixERKS0_(%class.HashTable*, %class.String* dereferenceable(24)) #2 comdat align 2 {
  %3 = alloca %class.HashTable*, align 8
  %4 = alloca %class.String*, align 8
  %5 = alloca %class.HashTable_iterator, align 8
  store %class.HashTable* %0, %class.HashTable** %3, align 8
  store %class.String* %1, %class.String** %4, align 8
  %6 = load %class.HashTable*, %class.HashTable** %3, align 8
  %7 = load %class.String*, %class.String** %4, align 8
  call void @_ZN9HashTableI6StringiE11find_insertERKS0_(%class.HashTable_iterator* sret %5, %class.HashTable* %6, %class.String* dereferenceable(24) %7)
  %8 = call dereferenceable(4) i32* @_ZNK18HashTable_iteratorI4PairIK6StringiEE5valueEv(%class.HashTable_iterator* %5)
  ret i32* %8
}

; Function Attrs: noinline optnone uwtable
define internal void @_ZL19redeclaration_errorP12ErrorHandlerPKc6StringRKS3_S5_(%class.ErrorHandler*, i8*, %class.String*, %class.String* dereferenceable(24), %class.String* dereferenceable(24)) #2 {
  %6 = alloca %class.ErrorHandler*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %class.String*, align 8
  %9 = alloca %class.String*, align 8
  %10 = alloca i8*, align 8
  store %class.ErrorHandler* %0, %class.ErrorHandler** %6, align 8
  store i8* %1, i8** %7, align 8
  store %class.String* %3, %class.String** %8, align 8
  store %class.String* %4, %class.String** %9, align 8
  %11 = load i8*, i8** %7, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %14, label %13

; <label>:13:                                     ; preds = %5
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13, i32 0, i32 0), i8** %7, align 8
  br label %14

; <label>:14:                                     ; preds = %13, %5
  %15 = load i8*, i8** %7, align 8
  %16 = call i64 @strlen(i8* %15) #13
  %17 = icmp ne i64 %16, 0
  %18 = zext i1 %17 to i64
  %19 = select i1 %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13, i32 0, i32 0)
  store i8* %19, i8** %10, align 8
  %20 = load %class.ErrorHandler*, %class.ErrorHandler** %6, align 8
  %21 = load %class.String*, %class.String** %8, align 8
  %22 = load i8*, i8** %7, align 8
  %23 = load i8*, i8** %10, align 8
  %24 = call i8* @_ZNK6String5c_strEv(%class.String* %2)
  %25 = call i32 (%class.ErrorHandler*, %class.String*, i8*, ...) @_ZN12ErrorHandler6lerrorERK6StringPKcz(%class.ErrorHandler* %20, %class.String* dereferenceable(24) %21, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.120, i32 0, i32 0), i8* %22, i8* %23, i8* %24)
  %26 = load %class.ErrorHandler*, %class.ErrorHandler** %6, align 8
  %27 = load %class.String*, %class.String** %9, align 8
  %28 = call i8* @_ZNK6String5c_strEv(%class.String* %2)
  %29 = call i32 (%class.ErrorHandler*, %class.String*, i8*, ...) @_ZN12ErrorHandler6lerrorERK6StringPKcz(%class.ErrorHandler* %26, %class.String* dereferenceable(24) %27, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.121, i32 0, i32 0), i8* %28)
  ret void
}

; Function Attrs: noinline optnone uwtable
define void @_ZNK5Lexer16element_landmarkEi(%class.String* noalias sret, %class.Lexer*, i32) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.Lexer*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.String, align 8
  %7 = alloca i8*
  %8 = alloca i32
  %9 = alloca i32
  store %class.Lexer* %1, %class.Lexer** %4, align 8
  store i32 %2, i32* %5, align 4
  %10 = load %class.Lexer*, %class.Lexer** %4, align 8
  %11 = load i32, i32* %5, align 4
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %20, label %13

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* %5, align 4
  %15 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 12
  %16 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %15, align 8
  %17 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %16, i32 0, i32 11
  %18 = call i32 @_ZNK6VectorIiE4sizeEv(%class.Vector.5* %17)
  %19 = icmp sge i32 %14, %18
  br i1 %19, label %20, label %21

; <label>:20:                                     ; preds = %13, %3
  call void @_ZN6String11make_stableEPKc(%class.String* sret %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.50, i32 0, i32 0))
  br label %38

; <label>:21:                                     ; preds = %13
  %22 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 12
  %23 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %22, align 8
  %24 = load i32, i32* %5, align 4
  call void @_ZNK5Lexer8Compound16element_landmarkEi(%class.String* sret %6, %"class.Lexer::Compound"* %23, i32 %24)
  %25 = invoke { i64, i64 } @_ZNK6StringcvMS_KFivEEv(%class.String* %6)
          to label %26 unwind label %31

; <label>:26:                                     ; preds = %21
  %27 = extractvalue { i64, i64 } %25, 0
  %28 = icmp ne i64 %27, 0
  br i1 %28, label %29, label %35

; <label>:29:                                     ; preds = %26
  invoke void @_ZN6StringC2EOS_(%class.String* %0, %class.String* dereferenceable(24) %6)
          to label %30 unwind label %31

; <label>:30:                                     ; preds = %29
  store i32 1, i32* %9, align 4
  br label %37

; <label>:31:                                     ; preds = %35, %29, %21
  %32 = landingpad { i8*, i32 }
          cleanup
  %33 = extractvalue { i8*, i32 } %32, 0
  store i8* %33, i8** %7, align 8
  %34 = extractvalue { i8*, i32 } %32, 1
  store i32 %34, i32* %8, align 4
  call void @_ZN6StringD2Ev(%class.String* %6) #9
  br label %39

; <label>:35:                                     ; preds = %26
  invoke void @_ZN6String11make_stableEPKc(%class.String* sret %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.55, i32 0, i32 0))
          to label %36 unwind label %31

; <label>:36:                                     ; preds = %35
  store i32 1, i32* %9, align 4
  br label %37

; <label>:37:                                     ; preds = %36, %30
  call void @_ZN6StringD2Ev(%class.String* %6) #9
  br label %38

; <label>:38:                                     ; preds = %37, %20
  ret void

; <label>:39:                                     ; preds = %31
  %40 = load i8*, i8** %7, align 8
  %41 = load i32, i32* %8, align 4
  %42 = insertvalue { i8*, i32 } undef, i8* %40, 0
  %43 = insertvalue { i8*, i32 } %42, i32 %41, 1
  resume { i8*, i32 } %43
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr i32 @_ZNK5Lexer12element_typeERK6String(%class.Lexer*, %class.String* dereferenceable(24)) #2 comdat align 2 {
  %3 = alloca %class.Lexer*, align 8
  %4 = alloca %class.String*, align 8
  store %class.Lexer* %0, %class.Lexer** %3, align 8
  store %class.String* %1, %class.String** %4, align 8
  %5 = load %class.Lexer*, %class.Lexer** %3, align 8
  %6 = getelementptr inbounds %class.Lexer, %class.Lexer* %5, i32 0, i32 7
  %7 = load %class.String*, %class.String** %4, align 8
  %8 = call dereferenceable(4) i32* @_ZNK9HashTableI6StringiEixERKS0_(%class.HashTable* %6, %class.String* dereferenceable(24) %7)
  %9 = load i32, i32* %8, align 4
  ret i32 %9
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6VectorIiE6resizeEii(%class.Vector.5*, i32, i32) #2 comdat align 2 {
  %4 = alloca %class.Vector.5*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %class.Vector.5* %0, %class.Vector.5** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %class.Vector.5*, %class.Vector.5** %4, align 8
  %8 = getelementptr inbounds %class.Vector.5, %class.Vector.5* %7, i32 0, i32 0
  %9 = load i32, i32* %5, align 4
  %10 = call %struct.char_array.4* @_ZN18sized_array_memoryILm4EE4castIiEEP10char_arrayILm4EEPT_(i32* %6)
  call void @_ZN13vector_memoryI18sized_array_memoryILm4EEE6resizeEiPK10char_arrayILm4EE(%class.vector_memory.3* %8, i32 %9, %struct.char_array.4* %10)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr i32* @_ZN6VectorIiE3endEv(%class.Vector.5*) #0 comdat align 2 {
  %2 = alloca %class.Vector.5*, align 8
  store %class.Vector.5* %0, %class.Vector.5** %2, align 8
  %3 = load %class.Vector.5*, %class.Vector.5** %2, align 8
  %4 = getelementptr inbounds %class.Vector.5, %class.Vector.5* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %4, i32 0, i32 0
  %6 = load %struct.char_array.4*, %struct.char_array.4** %5, align 8
  %7 = bitcast %struct.char_array.4* %6 to i32*
  %8 = getelementptr inbounds %class.Vector.5, %class.Vector.5* %3, i32 0, i32 0
  %9 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i32, i32* %7, i64 %11
  ret i32* %12
}

; Function Attrs: noinline optnone uwtable
define i32 @_ZN5Lexer11get_elementE6StringiRKS0_S2_j(%class.Lexer*, %class.String*, i32, %class.String* dereferenceable(24), %class.String* dereferenceable(24), i32) #2 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca %class.Lexer*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %class.String*, align 8
  %11 = alloca %class.String*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  store %class.Lexer* %0, %class.Lexer** %8, align 8
  store i32 %2, i32* %9, align 4
  store %class.String* %3, %class.String** %10, align 8
  store %class.String* %4, %class.String** %11, align 8
  store i32 %5, i32* %12, align 4
  %16 = load %class.Lexer*, %class.Lexer** %8, align 8
  %17 = call { i64, i64 } @_ZNK6StringcvMS_KFivEEv(%class.String* %1)
  %18 = extractvalue { i64, i64 } %17, 0
  %19 = icmp ne i64 %18, 0
  br i1 %19, label %20, label %28

; <label>:20:                                     ; preds = %6
  %21 = load i32, i32* %9, align 4
  %22 = icmp sge i32 %21, 0
  br i1 %22, label %23, label %28

; <label>:23:                                     ; preds = %20
  %24 = load i32, i32* %9, align 4
  %25 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 8
  %26 = call i32 @_ZNK6VectorIN5Lexer11ElementTypeEE4sizeEv(%class.Vector.14* %25)
  %27 = icmp slt i32 %24, %26
  br label %28

; <label>:28:                                     ; preds = %23, %20, %6
  %29 = phi i1 [ false, %20 ], [ false, %6 ], [ %27, %23 ]
  br i1 %29, label %30, label %31

; <label>:30:                                     ; preds = %28
  br label %33

; <label>:31:                                     ; preds = %28
  call void @__assert_fail(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i32 1097, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__._ZN5Lexer11get_elementE6StringiRKS0_S2_j, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %33

; <label>:33:                                     ; preds = %32, %30
  %34 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 12
  %35 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %34, align 8
  %36 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %35, i32 0, i32 10
  %37 = call dereferenceable(4) i32* @_ZN9HashTableI6StringiEixERKS0_(%class.HashTable* %36, %class.String* dereferenceable(24) %1)
  %38 = load i32, i32* %37, align 4
  %39 = icmp sge i32 %38, 0
  br i1 %39, label %40, label %46

; <label>:40:                                     ; preds = %33
  %41 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 12
  %42 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %41, align 8
  %43 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %42, i32 0, i32 10
  %44 = call dereferenceable(4) i32* @_ZN9HashTableI6StringiEixERKS0_(%class.HashTable* %43, %class.String* dereferenceable(24) %1)
  %45 = load i32, i32* %44, align 4
  store i32 %45, i32* %7, align 4
  br label %140

; <label>:46:                                     ; preds = %33
  %47 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 12
  %48 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %47, align 8
  %49 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %48, i32 0, i32 11
  %50 = call i32 @_ZNK6VectorIiE4sizeEv(%class.Vector.5* %49)
  store i32 %50, i32* %13, align 4
  %51 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 12
  %52 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %51, align 8
  %53 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %52, i32 0, i32 10
  %54 = call zeroext i1 @_ZN9HashTableI6StringiE3setERKS0_RKi(%class.HashTable* %53, %class.String* dereferenceable(24) %1, i32* dereferenceable(4) %13)
  store i32 0, i32* %14, align 4
  br label %55

; <label>:55:                                     ; preds = %89, %46
  %56 = load i32, i32* %14, align 4
  %57 = call i32 @_ZNK6String6lengthEv(%class.String* %1)
  %58 = icmp slt i32 %56, %57
  br i1 %58, label %59, label %92

; <label>:59:                                     ; preds = %55
  store i8 0, i8* %15, align 1
  br label %60

; <label>:60:                                     ; preds = %79, %59
  %61 = load i32, i32* %14, align 4
  %62 = call i32 @_ZNK6String6lengthEv(%class.String* %1)
  %63 = icmp slt i32 %61, %62
  br i1 %63, label %64, label %69

; <label>:64:                                     ; preds = %60
  %65 = load i32, i32* %14, align 4
  %66 = call signext i8 @_ZNK6StringixEi(%class.String* %1, i32 %65)
  %67 = sext i8 %66 to i32
  %68 = icmp ne i32 %67, 47
  br label %69

; <label>:69:                                     ; preds = %64, %60
  %70 = phi i1 [ false, %60 ], [ %68, %64 ]
  br i1 %70, label %71, label %82

; <label>:71:                                     ; preds = %69
  %72 = load i32, i32* %14, align 4
  %73 = call signext i8 @_ZNK6StringixEi(%class.String* %1, i32 %72)
  %74 = zext i8 %73 to i32
  %75 = call i32 @isdigit(i32 %74) #13
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %78, label %77

; <label>:77:                                     ; preds = %71
  store i8 1, i8* %15, align 1
  br label %78

; <label>:78:                                     ; preds = %77, %71
  br label %79

; <label>:79:                                     ; preds = %78
  %80 = load i32, i32* %14, align 4
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %14, align 4
  br label %60

; <label>:82:                                     ; preds = %69
  %83 = load i8, i8* %15, align 1
  %84 = trunc i8 %83 to i1
  br i1 %84, label %88, label %85

; <label>:85:                                     ; preds = %82
  %86 = call i8* @_ZNK6String5c_strEv(%class.String* %1)
  %87 = call i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.46, i32 0, i32 0), i8* %86)
  br label %92

; <label>:88:                                     ; preds = %82
  br label %89

; <label>:89:                                     ; preds = %88
  %90 = load i32, i32* %14, align 4
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %14, align 4
  br label %55

; <label>:92:                                     ; preds = %85, %55
  %93 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 12
  %94 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %93, align 8
  %95 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %94, i32 0, i32 12
  call void @_ZN6VectorI6StringE9push_backERKS0_(%class.Vector.0* %95, %class.String* dereferenceable(24) %1)
  %96 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 12
  %97 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %96, align 8
  %98 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %97, i32 0, i32 13
  %99 = load %class.String*, %class.String** %10, align 8
  call void @_ZN6VectorI6StringE9push_backERKS0_(%class.Vector.0* %98, %class.String* dereferenceable(24) %99)
  %100 = load %class.String*, %class.String** %11, align 8
  %101 = call zeroext i1 @_ZNK6StringntEv(%class.String* %100)
  br i1 %101, label %102, label %117

; <label>:102:                                    ; preds = %92
  %103 = load i32, i32* %12, align 4
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %117, label %105

; <label>:105:                                    ; preds = %102
  %106 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 12
  %107 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %106, align 8
  %108 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %107, i32 0, i32 14
  %109 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 1
  %110 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %109, i32 0, i32 3
  call void @_ZN6VectorI6StringE9push_backERKS0_(%class.Vector.0* %108, %class.String* dereferenceable(24) %110)
  %111 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 12
  %112 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %111, align 8
  %113 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %112, i32 0, i32 15
  %114 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 1
  %115 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %114, i32 0, i32 5
  %116 = load i32, i32* %115, align 8
  call void @_ZN6VectorIjE9push_backEj(%class.Vector.2* %113, i32 %116)
  br label %126

; <label>:117:                                    ; preds = %102, %92
  %118 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 12
  %119 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %118, align 8
  %120 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %119, i32 0, i32 14
  %121 = load %class.String*, %class.String** %11, align 8
  call void @_ZN6VectorI6StringE9push_backERKS0_(%class.Vector.0* %120, %class.String* dereferenceable(24) %121)
  %122 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 12
  %123 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %122, align 8
  %124 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %123, i32 0, i32 15
  %125 = load i32, i32* %12, align 4
  call void @_ZN6VectorIjE9push_backEj(%class.Vector.2* %124, i32 %125)
  br label %126

; <label>:126:                                    ; preds = %117, %105
  %127 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 12
  %128 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %127, align 8
  %129 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %128, i32 0, i32 11
  %130 = load i32, i32* %9, align 4
  call void @_ZN6VectorIiE9push_backEi(%class.Vector.5* %129, i32 %130)
  %131 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 12
  %132 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %131, align 8
  %133 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %132, i32 0, i32 16
  %134 = getelementptr inbounds [2 x %class.Vector.5], [2 x %class.Vector.5]* %133, i64 0, i64 0
  call void @_ZN6VectorIiE9push_backEi(%class.Vector.5* %134, i32 0)
  %135 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 12
  %136 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %135, align 8
  %137 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %136, i32 0, i32 16
  %138 = getelementptr inbounds [2 x %class.Vector.5], [2 x %class.Vector.5]* %137, i64 0, i64 1
  call void @_ZN6VectorIiE9push_backEi(%class.Vector.5* %138, i32 0)
  %139 = load i32, i32* %13, align 4
  store i32 %139, i32* %7, align 4
  br label %140

; <label>:140:                                    ; preds = %126, %40
  %141 = load i32, i32* %7, align 4
  ret i32 %141
}

declare void @_Z9cp_expandRK6StringRK16VariableExpanderbi(%class.String* sret, %class.String* dereferenceable(24), %class.VariableExpander* dereferenceable(8), i1 zeroext, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(4) i32* @_ZN6VectorIjEixEi(%class.Vector.2*, i32) #0 comdat align 2 {
  %3 = alloca %class.Vector.2*, align 8
  %4 = alloca i32, align 4
  store %class.Vector.2* %0, %class.Vector.2** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Vector.2*, %class.Vector.2** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = getelementptr inbounds %class.Vector.2, %class.Vector.2* %5, i32 0, i32 0
  %8 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp ult i32 %6, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %2
  br label %14

; <label>:12:                                     ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.128, i32 0, i32 0), i32 288, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN6VectorIjEixEi, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %14

; <label>:14:                                     ; preds = %13, %11
  %15 = getelementptr inbounds %class.Vector.2, %class.Vector.2* %5, i32 0, i32 0
  %16 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %15, i32 0, i32 0
  %17 = load %struct.char_array.4*, %struct.char_array.4** %16, align 8
  %18 = load i32, i32* %4, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %struct.char_array.4, %struct.char_array.4* %17, i64 %19
  %21 = bitcast %struct.char_array.4* %20 to i32*
  ret i32* %21
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr %"struct.Router::Connection"* @_ZN6VectorIN6Router10ConnectionEE5beginEv(%class.Vector.8*) #0 comdat align 2 {
  %2 = alloca %class.Vector.8*, align 8
  store %class.Vector.8* %0, %class.Vector.8** %2, align 8
  %3 = load %class.Vector.8*, %class.Vector.8** %2, align 8
  %4 = getelementptr inbounds %class.Vector.8, %class.Vector.8* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %4, i32 0, i32 0
  %6 = load %struct.char_array.10*, %struct.char_array.10** %5, align 8
  %7 = bitcast %struct.char_array.10* %6 to %"struct.Router::Connection"*
  ret %"struct.Router::Connection"* %7
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr %"struct.Router::Connection"* @_ZN6VectorIN6Router10ConnectionEE3endEv(%class.Vector.8*) #0 comdat align 2 {
  %2 = alloca %class.Vector.8*, align 8
  store %class.Vector.8* %0, %class.Vector.8** %2, align 8
  %3 = load %class.Vector.8*, %class.Vector.8** %2, align 8
  %4 = getelementptr inbounds %class.Vector.8, %class.Vector.8* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %4, i32 0, i32 0
  %6 = load %struct.char_array.10*, %struct.char_array.10** %5, align 8
  %7 = bitcast %struct.char_array.10* %6 to %"struct.Router::Connection"*
  %8 = getelementptr inbounds %class.Vector.8, %class.Vector.8* %3, i32 0, i32 0
  %9 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.Router::Connection", %"struct.Router::Connection"* %7, i64 %11
  ret %"struct.Router::Connection"* %12
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer23expand_compound_elementEiR19VariableEnvironment(%class.Lexer*, i32, %class.VariableEnvironment* dereferenceable(56)) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.Lexer*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.VariableEnvironment*, align 8
  %7 = alloca %class.String, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*
  %10 = alloca i32
  %11 = alloca %class.String, align 8
  %12 = alloca i32
  %13 = alloca %class.String, align 8
  %14 = alloca %"class.Lexer::Compound"*, align 8
  %15 = alloca %class.Vector.0, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %class.String, align 8
  %20 = alloca %"class.Lexer::Compound"*, align 8
  %21 = alloca %class.VariableEnvironment, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca %class.String, align 8
  store %class.Lexer* %0, %class.Lexer** %4, align 8
  store i32 %1, i32* %5, align 4
  store %class.VariableEnvironment* %2, %class.VariableEnvironment** %6, align 8
  %25 = load %class.Lexer*, %class.Lexer** %4, align 8
  %26 = getelementptr inbounds %class.Lexer, %class.Lexer* %25, i32 0, i32 12
  %27 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %26, align 8
  %28 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %27, i32 0, i32 12
  %29 = load i32, i32* %5, align 4
  %30 = call dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %28, i32 %29)
  call void @_ZN6StringC2ERKS_(%class.String* %7, %class.String* dereferenceable(24) %30)
  %31 = getelementptr inbounds %class.Lexer, %class.Lexer* %25, i32 0, i32 12
  %32 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %31, align 8
  %33 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %32, i32 0, i32 11
  %34 = load i32, i32* %5, align 4
  %35 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %33, i32 %34)
          to label %36 unwind label %44

; <label>:36:                                     ; preds = %3
  %37 = load i32, i32* %35, align 4
  store i32 %37, i32* %8, align 4
  %38 = invoke { i64, i64 } @_ZNK6StringcvMS_KFivEEv(%class.String* %7)
          to label %39 unwind label %44

; <label>:39:                                     ; preds = %36
  %40 = extractvalue { i64, i64 } %38, 0
  %41 = icmp ne i64 %40, 0
  br i1 %41, label %42, label %43

; <label>:42:                                     ; preds = %39
  br label %49

; <label>:43:                                     ; preds = %39
  call void @__assert_fail(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i32 2129, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN5Lexer23expand_compound_elementEiR19VariableEnvironment, i32 0, i32 0)) #12
  unreachable

; <label>:44:                                     ; preds = %103, %99, %86, %75, %69, %54, %49, %36, %3
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = extractvalue { i8*, i32 } %45, 0
  store i8* %46, i8** %9, align 8
  %47 = extractvalue { i8*, i32 } %45, 1
  store i32 %47, i32* %10, align 4
  br label %261
                                                  ; No predecessors!
  br label %49

; <label>:49:                                     ; preds = %48, %42
  %50 = invoke signext i8 @_ZNK6StringixEi(%class.String* %7, i32 0)
          to label %51 unwind label %44

; <label>:51:                                     ; preds = %49
  %52 = sext i8 %50 to i32
  %53 = icmp eq i32 %52, 59
  br i1 %53, label %54, label %65

; <label>:54:                                     ; preds = %51
  %55 = getelementptr inbounds %class.Lexer, %class.Lexer* %25, i32 0, i32 12
  %56 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %55, align 8
  %57 = load i32, i32* %5, align 4
  invoke void @_ZN5Lexer8Compound24deanonymize_element_nameEi(%class.String* sret %11, %"class.Lexer::Compound"* %56, i32 %57)
          to label %58 unwind label %44

; <label>:58:                                     ; preds = %54
  %59 = invoke dereferenceable(24) %class.String* @_ZN6StringaSEOS_(%class.String* %7, %class.String* dereferenceable(24) %11)
          to label %60 unwind label %61

; <label>:60:                                     ; preds = %58
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  br label %65

; <label>:61:                                     ; preds = %58
  %62 = landingpad { i8*, i32 }
          cleanup
  %63 = extractvalue { i8*, i32 } %62, 0
  store i8* %63, i8** %9, align 8
  %64 = extractvalue { i8*, i32 } %62, 1
  store i32 %64, i32* %10, align 4
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  br label %261

; <label>:65:                                     ; preds = %60, %51
  %66 = load i32, i32* %8, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

; <label>:68:                                     ; preds = %65
  store i32 1, i32* %12, align 4
  br label %257

; <label>:69:                                     ; preds = %65
  %70 = getelementptr inbounds %class.Lexer, %class.Lexer* %25, i32 0, i32 12
  %71 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %70, align 8
  %72 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %71, i32 0, i32 13
  %73 = load i32, i32* %5, align 4
  %74 = invoke dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %72, i32 %73)
          to label %75 unwind label %44

; <label>:75:                                     ; preds = %69
  %76 = load %class.VariableEnvironment*, %class.VariableEnvironment** %6, align 8
  %77 = bitcast %class.VariableEnvironment* %76 to %class.VariableExpander*
  invoke void @_Z9cp_expandRK6StringRK16VariableExpanderbi(%class.String* sret %13, %class.String* dereferenceable(24) %74, %class.VariableExpander* dereferenceable(8) %77, i1 zeroext false, i32 0)
          to label %78 unwind label %44

; <label>:78:                                     ; preds = %75
  %79 = getelementptr inbounds %class.Lexer, %class.Lexer* %25, i32 0, i32 12
  %80 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %79, align 8
  %81 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %80, i32 0, i32 13
  %82 = load i32, i32* %5, align 4
  %83 = invoke dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %81, i32 %82)
          to label %84 unwind label %95

; <label>:84:                                     ; preds = %78
  %85 = invoke dereferenceable(24) %class.String* @_ZN6StringaSEOS_(%class.String* %83, %class.String* dereferenceable(24) %13)
          to label %86 unwind label %95

; <label>:86:                                     ; preds = %84
  call void @_ZN6StringD2Ev(%class.String* %13) #9
  %87 = getelementptr inbounds %class.Lexer, %class.Lexer* %25, i32 0, i32 8
  %88 = load i32, i32* %8, align 4
  %89 = invoke dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %87, i32 %88)
          to label %90 unwind label %44

; <label>:90:                                     ; preds = %86
  %91 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %89, i32 0, i32 0
  %92 = load %class.Element* (i64)*, %class.Element* (i64)** %91, align 8
  %93 = icmp ne %class.Element* (i64)* %92, @_ZN5Lexer24compound_element_factoryEm
  br i1 %93, label %94, label %99

; <label>:94:                                     ; preds = %90
  store i32 1, i32* %12, align 4
  br label %257

; <label>:95:                                     ; preds = %84, %78
  %96 = landingpad { i8*, i32 }
          cleanup
  %97 = extractvalue { i8*, i32 } %96, 0
  store i8* %97, i8** %9, align 8
  %98 = extractvalue { i8*, i32 } %96, 1
  store i32 %98, i32* %10, align 4
  call void @_ZN6StringD2Ev(%class.String* %13) #9
  br label %261

; <label>:99:                                     ; preds = %90
  %100 = getelementptr inbounds %class.Lexer, %class.Lexer* %25, i32 0, i32 8
  %101 = load i32, i32* %8, align 4
  %102 = invoke dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %100, i32 %101)
          to label %103 unwind label %44

; <label>:103:                                    ; preds = %99
  %104 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %102, i32 0, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %105 to %"class.Lexer::Compound"*
  store %"class.Lexer::Compound"* %106, %"class.Lexer::Compound"** %14, align 8
  invoke void @_ZN6VectorI6StringEC2Ev(%class.Vector.0* %15)
          to label %107 unwind label %44

; <label>:107:                                    ; preds = %103
  %108 = getelementptr inbounds %class.Lexer, %class.Lexer* %25, i32 0, i32 12
  %109 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %108, align 8
  %110 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %109, i32 0, i32 13
  %111 = load i32, i32* %5, align 4
  %112 = invoke dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %110, i32 %111)
          to label %113 unwind label %150

; <label>:113:                                    ; preds = %107
  invoke void @_Z9cp_argvecRK6StringR6VectorIS_E(%class.String* dereferenceable(24) %112, %class.Vector.0* dereferenceable(16) %15)
          to label %114 unwind label %150

; <label>:114:                                    ; preds = %113
  %115 = getelementptr inbounds %class.Lexer, %class.Lexer* %25, i32 0, i32 12
  %116 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %115, align 8
  %117 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %116, i32 0, i32 16
  %118 = getelementptr inbounds [2 x %class.Vector.5], [2 x %class.Vector.5]* %117, i64 0, i64 0
  %119 = load i32, i32* %5, align 4
  %120 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %118, i32 %119)
          to label %121 unwind label %150

; <label>:121:                                    ; preds = %114
  %122 = load i32, i32* %120, align 4
  store i32 %122, i32* %16, align 4
  %123 = getelementptr inbounds %class.Lexer, %class.Lexer* %25, i32 0, i32 12
  %124 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %123, align 8
  %125 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %124, i32 0, i32 16
  %126 = getelementptr inbounds [2 x %class.Vector.5], [2 x %class.Vector.5]* %125, i64 0, i64 1
  %127 = load i32, i32* %5, align 4
  %128 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %126, i32 %127)
          to label %129 unwind label %150

; <label>:129:                                    ; preds = %121
  %130 = load i32, i32* %128, align 4
  store i32 %130, i32* %17, align 4
  %131 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %14, align 8
  %132 = load i32, i32* %8, align 4
  %133 = load i32, i32* %16, align 4
  %134 = load i32, i32* %17, align 4
  %135 = getelementptr inbounds %class.Lexer, %class.Lexer* %25, i32 0, i32 19
  %136 = load %class.ErrorHandler*, %class.ErrorHandler** %135, align 8
  %137 = getelementptr inbounds %class.Lexer, %class.Lexer* %25, i32 0, i32 1
  invoke void @_ZNK5Lexer9FileState8landmarkEv(%class.String* sret %19, %"struct.Lexer::FileState"* %137)
          to label %138 unwind label %150

; <label>:138:                                    ; preds = %129
  %139 = invoke i32 @_ZN5Lexer8Compound7resolveEPS_iiiR6VectorI6StringEP12ErrorHandlerRKS3_(%"class.Lexer::Compound"* %131, %class.Lexer* %25, i32 %132, i32 %133, i32 %134, %class.Vector.0* dereferenceable(16) %15, %class.ErrorHandler* %136, %class.String* dereferenceable(24) %19)
          to label %140 unwind label %154

; <label>:140:                                    ; preds = %138
  call void @_ZN6StringD2Ev(%class.String* %19) #9
  store i32 %139, i32* %18, align 4
  %141 = load i32, i32* %18, align 4
  %142 = icmp slt i32 %141, 0
  br i1 %142, label %143, label %158

; <label>:143:                                    ; preds = %140
  %144 = getelementptr inbounds %class.Lexer, %class.Lexer* %25, i32 0, i32 12
  %145 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %144, align 8
  %146 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %145, i32 0, i32 11
  %147 = load i32, i32* %5, align 4
  %148 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %146, i32 %147)
          to label %149 unwind label %150

; <label>:149:                                    ; preds = %143
  store i32 1, i32* %148, align 4
  br label %256

; <label>:150:                                    ; preds = %187, %185, %178, %174, %166, %158, %143, %129, %121, %114, %113, %107
  %151 = landingpad { i8*, i32 }
          cleanup
  %152 = extractvalue { i8*, i32 } %151, 0
  store i8* %152, i8** %9, align 8
  %153 = extractvalue { i8*, i32 } %151, 1
  store i32 %153, i32* %10, align 4
  br label %260

; <label>:154:                                    ; preds = %138
  %155 = landingpad { i8*, i32 }
          cleanup
  %156 = extractvalue { i8*, i32 } %155, 0
  store i8* %156, i8** %9, align 8
  %157 = extractvalue { i8*, i32 } %155, 1
  store i32 %157, i32* %10, align 4
  call void @_ZN6StringD2Ev(%class.String* %19) #9
  br label %260

; <label>:158:                                    ; preds = %140
  %159 = getelementptr inbounds %class.Lexer, %class.Lexer* %25, i32 0, i32 8
  %160 = load i32, i32* %18, align 4
  %161 = invoke dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %159, i32 %160)
          to label %162 unwind label %150

; <label>:162:                                    ; preds = %158
  %163 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %161, i32 0, i32 0
  %164 = load %class.Element* (i64)*, %class.Element* (i64)** %163, align 8
  %165 = icmp ne %class.Element* (i64)* %164, @_ZN5Lexer24compound_element_factoryEm
  br i1 %165, label %166, label %174

; <label>:166:                                    ; preds = %162
  %167 = load i32, i32* %18, align 4
  %168 = getelementptr inbounds %class.Lexer, %class.Lexer* %25, i32 0, i32 12
  %169 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %168, align 8
  %170 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %169, i32 0, i32 11
  %171 = load i32, i32* %5, align 4
  %172 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %170, i32 %171)
          to label %173 unwind label %150

; <label>:173:                                    ; preds = %166
  store i32 %167, i32* %172, align 4
  br label %255

; <label>:174:                                    ; preds = %162
  %175 = getelementptr inbounds %class.Lexer, %class.Lexer* %25, i32 0, i32 8
  %176 = load i32, i32* %18, align 4
  %177 = invoke dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %175, i32 %176)
          to label %178 unwind label %150

; <label>:178:                                    ; preds = %174
  %179 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %177, i32 0, i32 1
  %180 = load i64, i64* %179, align 8
  %181 = inttoptr i64 %180 to %"class.Lexer::Compound"*
  store %"class.Lexer::Compound"* %181, %"class.Lexer::Compound"** %20, align 8
  %182 = load %class.VariableEnvironment*, %class.VariableEnvironment** %6, align 8
  %183 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %20, align 8
  %184 = invoke i32 @_ZNK5Lexer8Compound5depthEv(%"class.Lexer::Compound"* %183)
          to label %185 unwind label %150

; <label>:185:                                    ; preds = %178
  %186 = invoke %class.VariableEnvironment* @_ZNK19VariableEnvironment9parent_ofEi(%class.VariableEnvironment* %182, i32 %184)
          to label %187 unwind label %150

; <label>:187:                                    ; preds = %185
  invoke void @_ZN19VariableEnvironmentC1EPS_(%class.VariableEnvironment* %21, %class.VariableEnvironment* %186)
          to label %188 unwind label %150

; <label>:188:                                    ; preds = %187
  store i32 0, i32* %22, align 4
  br label %189

; <label>:189:                                    ; preds = %207, %188
  %190 = load i32, i32* %22, align 4
  %191 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %20, align 8
  %192 = invoke i32 @_ZNK5Lexer8Compound8nformalsEv(%"class.Lexer::Compound"* %191)
          to label %193 unwind label %210

; <label>:193:                                    ; preds = %189
  %194 = icmp slt i32 %190, %192
  br i1 %194, label %195, label %214

; <label>:195:                                    ; preds = %193
  %196 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %20, align 8
  %197 = invoke dereferenceable(56) %class.VariableEnvironment* @_ZN5Lexer8Compound5scopeEv(%"class.Lexer::Compound"* %196)
          to label %198 unwind label %210

; <label>:198:                                    ; preds = %195
  %199 = load i32, i32* %22, align 4
  %200 = invoke dereferenceable(24) %class.String* @_ZNK19VariableEnvironment4nameEi(%class.VariableEnvironment* %197, i32 %199)
          to label %201 unwind label %210

; <label>:201:                                    ; preds = %198
  %202 = load i32, i32* %22, align 4
  %203 = invoke dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %15, i32 %202)
          to label %204 unwind label %210

; <label>:204:                                    ; preds = %201
  %205 = invoke zeroext i1 @_ZN19VariableEnvironment6defineERK6StringS2_b(%class.VariableEnvironment* %21, %class.String* dereferenceable(24) %200, %class.String* dereferenceable(24) %203, i1 zeroext true)
          to label %206 unwind label %210

; <label>:206:                                    ; preds = %204
  br label %207

; <label>:207:                                    ; preds = %206
  %208 = load i32, i32* %22, align 4
  %209 = add nsw i32 %208, 1
  store i32 %209, i32* %22, align 4
  br label %189

; <label>:210:                                    ; preds = %250, %238, %235, %232, %229, %226, %222, %218, %214, %204, %201, %198, %195, %189
  %211 = landingpad { i8*, i32 }
          cleanup
  %212 = extractvalue { i8*, i32 } %211, 0
  store i8* %212, i8** %9, align 8
  %213 = extractvalue { i8*, i32 } %211, 1
  store i32 %213, i32* %10, align 4
  br label %254

; <label>:214:                                    ; preds = %193
  %215 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %20, align 8
  %216 = invoke i32 @_ZNK5Lexer8Compound8nformalsEv(%"class.Lexer::Compound"* %215)
          to label %217 unwind label %210

; <label>:217:                                    ; preds = %214
  store i32 %216, i32* %23, align 4
  br label %218

; <label>:218:                                    ; preds = %243, %217
  %219 = load i32, i32* %23, align 4
  %220 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %20, align 8
  %221 = invoke dereferenceable(56) %class.VariableEnvironment* @_ZN5Lexer8Compound5scopeEv(%"class.Lexer::Compound"* %220)
          to label %222 unwind label %210

; <label>:222:                                    ; preds = %218
  %223 = invoke i32 @_ZNK19VariableEnvironment4sizeEv(%class.VariableEnvironment* %221)
          to label %224 unwind label %210

; <label>:224:                                    ; preds = %222
  %225 = icmp slt i32 %219, %223
  br i1 %225, label %226, label %250

; <label>:226:                                    ; preds = %224
  %227 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %20, align 8
  %228 = invoke dereferenceable(56) %class.VariableEnvironment* @_ZN5Lexer8Compound5scopeEv(%"class.Lexer::Compound"* %227)
          to label %229 unwind label %210

; <label>:229:                                    ; preds = %226
  %230 = load i32, i32* %23, align 4
  %231 = invoke dereferenceable(24) %class.String* @_ZNK19VariableEnvironment4nameEi(%class.VariableEnvironment* %228, i32 %230)
          to label %232 unwind label %210

; <label>:232:                                    ; preds = %229
  %233 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %20, align 8
  %234 = invoke dereferenceable(56) %class.VariableEnvironment* @_ZN5Lexer8Compound5scopeEv(%"class.Lexer::Compound"* %233)
          to label %235 unwind label %210

; <label>:235:                                    ; preds = %232
  %236 = load i32, i32* %23, align 4
  %237 = invoke dereferenceable(24) %class.String* @_ZNK19VariableEnvironment5valueEi(%class.VariableEnvironment* %234, i32 %236)
          to label %238 unwind label %210

; <label>:238:                                    ; preds = %235
  %239 = bitcast %class.VariableEnvironment* %21 to %class.VariableExpander*
  invoke void @_Z9cp_expandRK6StringRK16VariableExpanderbi(%class.String* sret %24, %class.String* dereferenceable(24) %237, %class.VariableExpander* dereferenceable(8) %239, i1 zeroext false, i32 0)
          to label %240 unwind label %210

; <label>:240:                                    ; preds = %238
  %241 = invoke zeroext i1 @_ZN19VariableEnvironment6defineERK6StringS2_b(%class.VariableEnvironment* %21, %class.String* dereferenceable(24) %231, %class.String* dereferenceable(24) %24, i1 zeroext true)
          to label %242 unwind label %246

; <label>:242:                                    ; preds = %240
  call void @_ZN6StringD2Ev(%class.String* %24) #9
  br label %243

; <label>:243:                                    ; preds = %242
  %244 = load i32, i32* %23, align 4
  %245 = add nsw i32 %244, 1
  store i32 %245, i32* %23, align 4
  br label %218

; <label>:246:                                    ; preds = %240
  %247 = landingpad { i8*, i32 }
          cleanup
  %248 = extractvalue { i8*, i32 } %247, 0
  store i8* %248, i8** %9, align 8
  %249 = extractvalue { i8*, i32 } %247, 1
  store i32 %249, i32* %10, align 4
  call void @_ZN6StringD2Ev(%class.String* %24) #9
  br label %254

; <label>:250:                                    ; preds = %224
  %251 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %20, align 8
  %252 = load i32, i32* %5, align 4
  invoke void @_ZN5Lexer8Compound11expand_intoEPS_iR19VariableEnvironment(%"class.Lexer::Compound"* %251, %class.Lexer* %25, i32 %252, %class.VariableEnvironment* dereferenceable(56) %21)
          to label %253 unwind label %210

; <label>:253:                                    ; preds = %250
  call void @_ZN19VariableEnvironmentD2Ev(%class.VariableEnvironment* %21) #9
  br label %255

; <label>:254:                                    ; preds = %246, %210
  call void @_ZN19VariableEnvironmentD2Ev(%class.VariableEnvironment* %21) #9
  br label %260

; <label>:255:                                    ; preds = %253, %173
  br label %256

; <label>:256:                                    ; preds = %255, %149
  call void @_ZN6VectorI6StringED2Ev(%class.Vector.0* %15) #9
  store i32 0, i32* %12, align 4
  br label %257

; <label>:257:                                    ; preds = %256, %94, %68
  call void @_ZN6StringD2Ev(%class.String* %7) #9
  %258 = load i32, i32* %12, align 4
  switch i32 %258, label %267 [
    i32 0, label %259
    i32 1, label %259
  ]

; <label>:259:                                    ; preds = %257, %257
  ret void

; <label>:260:                                    ; preds = %254, %154, %150
  call void @_ZN6VectorI6StringED2Ev(%class.Vector.0* %15) #9
  br label %261

; <label>:261:                                    ; preds = %260, %95, %61, %44
  call void @_ZN6StringD2Ev(%class.String* %7) #9
  br label %262

; <label>:262:                                    ; preds = %261
  %263 = load i8*, i8** %9, align 8
  %264 = load i32, i32* %10, align 4
  %265 = insertvalue { i8*, i32 } undef, i8* %263, 0
  %266 = insertvalue { i8*, i32 } %265, i32 %264, 1
  resume { i8*, i32 } %266

; <label>:267:                                    ; preds = %257
  unreachable
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer9FileStateC2ERK6StringS3_(%"struct.Lexer::FileState"*, %class.String* dereferenceable(24), %class.String* dereferenceable(24)) unnamed_addr #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.Lexer::FileState"*, align 8
  %5 = alloca %class.String*, align 8
  %6 = alloca %class.String*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.Lexer::FileState"* %0, %"struct.Lexer::FileState"** %4, align 8
  store %class.String* %1, %class.String** %5, align 8
  store %class.String* %2, %class.String** %6, align 8
  %9 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %4, align 8
  %10 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %9, i32 0, i32 0
  %11 = load %class.String*, %class.String** %5, align 8
  call void @_ZN6StringC2ERKS_(%class.String* %10, %class.String* dereferenceable(24) %11)
  %12 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %9, i32 0, i32 1
  %13 = load %class.String*, %class.String** %5, align 8
  %14 = invoke i8* @_ZNK6String3endEv(%class.String* %13)
          to label %15 unwind label %36

; <label>:15:                                     ; preds = %3
  store i8* %14, i8** %12, align 8
  %16 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %9, i32 0, i32 2
  %17 = load %class.String*, %class.String** %5, align 8
  %18 = invoke i8* @_ZNK6String5beginEv(%class.String* %17)
          to label %19 unwind label %36

; <label>:19:                                     ; preds = %15
  store i8* %18, i8** %16, align 8
  %20 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %9, i32 0, i32 3
  %21 = load %class.String*, %class.String** %6, align 8
  %22 = invoke { i64, i64 } @_ZNK6StringcvMS_KFivEEv(%class.String* %21)
          to label %23 unwind label %36

; <label>:23:                                     ; preds = %19
  %24 = extractvalue { i64, i64 } %22, 0
  %25 = icmp ne i64 %24, 0
  br i1 %25, label %26, label %29

; <label>:26:                                     ; preds = %23
  %27 = load %class.String*, %class.String** %6, align 8
  invoke void @_ZN6StringC2ERKS_(%class.String* %20, %class.String* dereferenceable(24) %27)
          to label %28 unwind label %36

; <label>:28:                                     ; preds = %26
  br label %31

; <label>:29:                                     ; preds = %23
  invoke void @_ZN6String11make_stableEPKci(%class.String* sret %20, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i32 0, i32 0), i32 6)
          to label %30 unwind label %36

; <label>:30:                                     ; preds = %29
  br label %31

; <label>:31:                                     ; preds = %30, %28
  %32 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %9, i32 0, i32 4
  %33 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %9, i32 0, i32 3
  invoke void @_ZN6StringC2ERKS_(%class.String* %32, %class.String* dereferenceable(24) %33)
          to label %34 unwind label %40

; <label>:34:                                     ; preds = %31
  %35 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %9, i32 0, i32 5
  store i32 1, i32* %35, align 8
  ret void

; <label>:36:                                     ; preds = %29, %26, %19, %15, %3
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %7, align 8
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %8, align 4
  br label %44

; <label>:40:                                     ; preds = %31
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %7, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %8, align 4
  call void @_ZN6StringD2Ev(%class.String* %20) #9
  br label %44

; <label>:44:                                     ; preds = %40, %36
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  br label %45

; <label>:45:                                     ; preds = %44
  %46 = load i8*, i8** %7, align 8
  %47 = load i32, i32* %8, align 4
  %48 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1
  resume { i8*, i32 } %49
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr i8* @_ZNK6String3endEv(%class.String*) #0 comdat align 2 {
  %2 = alloca %class.String*, align 8
  store %class.String* %0, %class.String** %2, align 8
  %3 = load %class.String*, %class.String** %2, align 8
  %4 = getelementptr inbounds %class.String, %class.String* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %4, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %class.String, %class.String* %3, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i8, i8* %6, i64 %10
  ret i8* %11
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr i8* @_ZNK6String5beginEv(%class.String*) #0 comdat align 2 {
  %2 = alloca %class.String*, align 8
  store %class.String* %0, %class.String** %2, align 8
  %3 = load %class.String*, %class.String** %2, align 8
  %4 = getelementptr inbounds %class.String, %class.String* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %4, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  ret i8* %6
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6String11make_stableEPKci(%class.String* noalias sret, i8*, i32) #2 comdat align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  store i8* %1, i8** %4, align 8
  store i32 %2, i32* %5, align 4
  %6 = load i8*, i8** %4, align 8
  %7 = load i32, i32* %5, align 4
  call void @_ZN6String16hard_make_stableEPKci(%class.String* sret %0, i8* %6, i32 %7)
  ret void
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5LexerC2Ev(%class.Lexer*) unnamed_addr #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Lexer*, align 8
  %3 = alloca %class.String, align 8
  %4 = alloca %class.String, align 8
  %5 = alloca i8*
  %6 = alloca i32
  %7 = alloca i32, align 4
  %8 = alloca %class.String, align 8
  %9 = alloca %class.String, align 8
  %10 = alloca %class.String, align 8
  %11 = alloca %class.String, align 8
  %12 = alloca i1, align 1
  store %class.Lexer* %0, %class.Lexer** %2, align 8
  %13 = load %class.Lexer*, %class.Lexer** %2, align 8
  %14 = bitcast %class.Lexer* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV5Lexer, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %class.Lexer, %class.Lexer* %13, i32 0, i32 1
  call void @_ZN6StringC2Ev(%class.String* %3)
  invoke void @_ZN6StringC2Ev(%class.String* %4)
          to label %16 unwind label %68

; <label>:16:                                     ; preds = %1
  invoke void @_ZN5Lexer9FileStateC1ERK6StringS3_(%"struct.Lexer::FileState"* %15, %class.String* dereferenceable(24) %3, %class.String* dereferenceable(24) %4)
          to label %17 unwind label %72

; <label>:17:                                     ; preds = %16
  call void @_ZN6StringD2Ev(%class.String* %4) #9
  call void @_ZN6StringD2Ev(%class.String* %3) #9
  %18 = getelementptr inbounds %class.Lexer, %class.Lexer* %13, i32 0, i32 3
  store %class.LexerExtra* null, %class.LexerExtra** %18, align 8
  %19 = getelementptr inbounds %class.Lexer, %class.Lexer* %13, i32 0, i32 4
  %20 = getelementptr inbounds [2 x %class.Lexeme], [2 x %class.Lexeme]* %19, i32 0, i32 0
  %21 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %20, i64 2
  br label %22

; <label>:22:                                     ; preds = %24, %17
  %23 = phi %class.Lexeme* [ %20, %17 ], [ %25, %24 ]
  invoke void @_ZN6LexemeC2Ev(%class.Lexeme* %23)
          to label %24 unwind label %77

; <label>:24:                                     ; preds = %22
  %25 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %23, i64 1
  %26 = icmp eq %class.Lexeme* %25, %21
  br i1 %26, label %27, label %22

; <label>:27:                                     ; preds = %24
  %28 = getelementptr inbounds %class.Lexer, %class.Lexer* %13, i32 0, i32 5
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds %class.Lexer, %class.Lexer* %13, i32 0, i32 7
  store i32 -1, i32* %7, align 4
  invoke void @_ZN9HashTableI6StringiEC2ERKi(%class.HashTable* %29, i32* dereferenceable(4) %7)
          to label %30 unwind label %87

; <label>:30:                                     ; preds = %27
  %31 = getelementptr inbounds %class.Lexer, %class.Lexer* %13, i32 0, i32 8
  invoke void @_ZN6VectorIN5Lexer11ElementTypeEEC2Ev(%class.Vector.14* %31)
          to label %32 unwind label %91

; <label>:32:                                     ; preds = %30
  %33 = getelementptr inbounds %class.Lexer, %class.Lexer* %13, i32 0, i32 9
  store i32 2147483647, i32* %33, align 8
  %34 = getelementptr inbounds %class.Lexer, %class.Lexer* %13, i32 0, i32 10
  store i32 -1, i32* %34, align 4
  %35 = getelementptr inbounds %class.Lexer, %class.Lexer* %13, i32 0, i32 11
  invoke void @_ZN19VariableEnvironmentC1EPS_(%class.VariableEnvironment* %35, %class.VariableEnvironment* null)
          to label %36 unwind label %95

; <label>:36:                                     ; preds = %32
  %37 = getelementptr inbounds %class.Lexer, %class.Lexer* %13, i32 0, i32 12
  store %"class.Lexer::Compound"* null, %"class.Lexer::Compound"** %37, align 8
  %38 = getelementptr inbounds %class.Lexer, %class.Lexer* %13, i32 0, i32 13
  store %"struct.Lexer::ParseState"* null, %"struct.Lexer::ParseState"** %38, align 8
  %39 = getelementptr inbounds %class.Lexer, %class.Lexer* %13, i32 0, i32 15
  invoke void @_ZN6VectorIPN5Lexer9TunnelEndEEC2Ev(%class.Vector.16* %39)
          to label %40 unwind label %99

; <label>:40:                                     ; preds = %36
  %41 = getelementptr inbounds %class.Lexer, %class.Lexer* %13, i32 0, i32 17
  invoke void @_ZN6VectorI6StringEC2Ev(%class.Vector.0* %41)
          to label %42 unwind label %103

; <label>:42:                                     ; preds = %40
  %43 = getelementptr inbounds %class.Lexer, %class.Lexer* %13, i32 0, i32 18
  invoke void @_ZN6VectorI6StringEC2Ev(%class.Vector.0* %43)
          to label %44 unwind label %107

; <label>:44:                                     ; preds = %42
  %45 = getelementptr inbounds %class.Lexer, %class.Lexer* %13, i32 0, i32 19
  %46 = invoke %class.ErrorHandler* @_ZN12ErrorHandler15default_handlerEv()
          to label %47 unwind label %111

; <label>:47:                                     ; preds = %44
  store %class.ErrorHandler* %46, %class.ErrorHandler** %45, align 8
  invoke void @_ZN5Lexer9end_parseEi(%class.Lexer* %13, i32 2147483647)
          to label %48 unwind label %111

; <label>:48:                                     ; preds = %47
  invoke void @_ZN6StringC2EPKc(%class.String* %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i32 0, i32 0))
          to label %49 unwind label %111

; <label>:49:                                     ; preds = %48
  %50 = invoke i32 @_ZN5Lexer16add_element_typeERK6StringPFP7ElementmEmb(%class.Lexer* %13, %class.String* dereferenceable(24) %8, %class.Element* (i64)* @_ZL21error_element_factorym, i64 0, i1 zeroext false)
          to label %51 unwind label %115

; <label>:51:                                     ; preds = %49
  call void @_ZN6StringD2Ev(%class.String* %8) #9
  invoke void @_ZN6StringC2EPKc(%class.String* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0))
          to label %52 unwind label %111

; <label>:52:                                     ; preds = %51
  %53 = invoke i32 @_ZN5Lexer16add_element_typeERK6StringPFP7ElementmEmb(%class.Lexer* %13, %class.String* dereferenceable(24) %9, %class.Element* (i64)* @_ZL21error_element_factorym, i64 0, i1 zeroext false)
          to label %54 unwind label %119

; <label>:54:                                     ; preds = %52
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  store i1 false, i1* %12, align 1
  invoke void @_ZN6StringC2EPKc(%class.String* %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i32 0, i32 0))
          to label %55 unwind label %111

; <label>:55:                                     ; preds = %54
  %56 = invoke i32 @_ZNK5Lexer12element_typeERK6String(%class.Lexer* %13, %class.String* dereferenceable(24) %10)
          to label %57 unwind label %123

; <label>:57:                                     ; preds = %55
  %58 = icmp eq i32 %56, 0
  br i1 %58, label %59, label %64

; <label>:59:                                     ; preds = %57
  invoke void @_ZN6StringC2EPKc(%class.String* %11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0))
          to label %60 unwind label %123

; <label>:60:                                     ; preds = %59
  store i1 true, i1* %12, align 1
  %61 = invoke i32 @_ZNK5Lexer12element_typeERK6String(%class.Lexer* %13, %class.String* dereferenceable(24) %11)
          to label %62 unwind label %127

; <label>:62:                                     ; preds = %60
  %63 = icmp eq i32 %61, 1
  br label %64

; <label>:64:                                     ; preds = %62, %57
  %65 = phi i1 [ false, %57 ], [ %63, %62 ]
  br i1 %65, label %66, label %67

; <label>:66:                                     ; preds = %64
  br label %133

; <label>:67:                                     ; preds = %64
  call void @__assert_fail(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i32 537, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__PRETTY_FUNCTION__._ZN5LexerC2Ev, i32 0, i32 0)) #12
  unreachable

; <label>:68:                                     ; preds = %1
  %69 = landingpad { i8*, i32 }
          cleanup
  %70 = extractvalue { i8*, i32 } %69, 0
  store i8* %70, i8** %5, align 8
  %71 = extractvalue { i8*, i32 } %69, 1
  store i32 %71, i32* %6, align 4
  br label %76

; <label>:72:                                     ; preds = %16
  %73 = landingpad { i8*, i32 }
          cleanup
  %74 = extractvalue { i8*, i32 } %73, 0
  store i8* %74, i8** %5, align 8
  %75 = extractvalue { i8*, i32 } %73, 1
  store i32 %75, i32* %6, align 4
  call void @_ZN6StringD2Ev(%class.String* %4) #9
  br label %76

; <label>:76:                                     ; preds = %72, %68
  call void @_ZN6StringD2Ev(%class.String* %3) #9
  br label %155

; <label>:77:                                     ; preds = %22
  %78 = landingpad { i8*, i32 }
          cleanup
  %79 = extractvalue { i8*, i32 } %78, 0
  store i8* %79, i8** %5, align 8
  %80 = extractvalue { i8*, i32 } %78, 1
  store i32 %80, i32* %6, align 4
  %81 = icmp eq %class.Lexeme* %20, %23
  br i1 %81, label %86, label %82

; <label>:82:                                     ; preds = %82, %77
  %83 = phi %class.Lexeme* [ %23, %77 ], [ %84, %82 ]
  %84 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %83, i64 -1
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %84) #9
  %85 = icmp eq %class.Lexeme* %84, %20
  br i1 %85, label %86, label %82

; <label>:86:                                     ; preds = %82, %77
  br label %154

; <label>:87:                                     ; preds = %27
  %88 = landingpad { i8*, i32 }
          cleanup
  %89 = extractvalue { i8*, i32 } %88, 0
  store i8* %89, i8** %5, align 8
  %90 = extractvalue { i8*, i32 } %88, 1
  store i32 %90, i32* %6, align 4
  br label %146

; <label>:91:                                     ; preds = %30
  %92 = landingpad { i8*, i32 }
          cleanup
  %93 = extractvalue { i8*, i32 } %92, 0
  store i8* %93, i8** %5, align 8
  %94 = extractvalue { i8*, i32 } %92, 1
  store i32 %94, i32* %6, align 4
  br label %145

; <label>:95:                                     ; preds = %32
  %96 = landingpad { i8*, i32 }
          cleanup
  %97 = extractvalue { i8*, i32 } %96, 0
  store i8* %97, i8** %5, align 8
  %98 = extractvalue { i8*, i32 } %96, 1
  store i32 %98, i32* %6, align 4
  br label %144

; <label>:99:                                     ; preds = %36
  %100 = landingpad { i8*, i32 }
          cleanup
  %101 = extractvalue { i8*, i32 } %100, 0
  store i8* %101, i8** %5, align 8
  %102 = extractvalue { i8*, i32 } %100, 1
  store i32 %102, i32* %6, align 4
  br label %143

; <label>:103:                                    ; preds = %40
  %104 = landingpad { i8*, i32 }
          cleanup
  %105 = extractvalue { i8*, i32 } %104, 0
  store i8* %105, i8** %5, align 8
  %106 = extractvalue { i8*, i32 } %104, 1
  store i32 %106, i32* %6, align 4
  br label %142

; <label>:107:                                    ; preds = %42
  %108 = landingpad { i8*, i32 }
          cleanup
  %109 = extractvalue { i8*, i32 } %108, 0
  store i8* %109, i8** %5, align 8
  %110 = extractvalue { i8*, i32 } %108, 1
  store i32 %110, i32* %6, align 4
  br label %141

; <label>:111:                                    ; preds = %54, %51, %48, %47, %44
  %112 = landingpad { i8*, i32 }
          cleanup
  %113 = extractvalue { i8*, i32 } %112, 0
  store i8* %113, i8** %5, align 8
  %114 = extractvalue { i8*, i32 } %112, 1
  store i32 %114, i32* %6, align 4
  br label %140

; <label>:115:                                    ; preds = %49
  %116 = landingpad { i8*, i32 }
          cleanup
  %117 = extractvalue { i8*, i32 } %116, 0
  store i8* %117, i8** %5, align 8
  %118 = extractvalue { i8*, i32 } %116, 1
  store i32 %118, i32* %6, align 4
  call void @_ZN6StringD2Ev(%class.String* %8) #9
  br label %140

; <label>:119:                                    ; preds = %52
  %120 = landingpad { i8*, i32 }
          cleanup
  %121 = extractvalue { i8*, i32 } %120, 0
  store i8* %121, i8** %5, align 8
  %122 = extractvalue { i8*, i32 } %120, 1
  store i32 %122, i32* %6, align 4
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  br label %140

; <label>:123:                                    ; preds = %59, %55
  %124 = landingpad { i8*, i32 }
          cleanup
  %125 = extractvalue { i8*, i32 } %124, 0
  store i8* %125, i8** %5, align 8
  %126 = extractvalue { i8*, i32 } %124, 1
  store i32 %126, i32* %6, align 4
  br label %139

; <label>:127:                                    ; preds = %60
  %128 = landingpad { i8*, i32 }
          cleanup
  %129 = extractvalue { i8*, i32 } %128, 0
  store i8* %129, i8** %5, align 8
  %130 = extractvalue { i8*, i32 } %128, 1
  store i32 %130, i32* %6, align 4
  %131 = load i1, i1* %12, align 1
  br i1 %131, label %137, label %138
                                                  ; No predecessors!
  br label %133

; <label>:133:                                    ; preds = %132, %66
  %134 = load i1, i1* %12, align 1
  br i1 %134, label %135, label %136

; <label>:135:                                    ; preds = %133
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  br label %136

; <label>:136:                                    ; preds = %135, %133
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  ret void

; <label>:137:                                    ; preds = %127
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  br label %138

; <label>:138:                                    ; preds = %137, %127
  br label %139

; <label>:139:                                    ; preds = %138, %123
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  br label %140

; <label>:140:                                    ; preds = %139, %119, %115, %111
  call void @_ZN6VectorI6StringED2Ev(%class.Vector.0* %43) #9
  br label %141

; <label>:141:                                    ; preds = %140, %107
  call void @_ZN6VectorI6StringED2Ev(%class.Vector.0* %41) #9
  br label %142

; <label>:142:                                    ; preds = %141, %103
  call void @_ZN6VectorIPN5Lexer9TunnelEndEED2Ev(%class.Vector.16* %39) #9
  br label %143

; <label>:143:                                    ; preds = %142, %99
  call void @_ZN19VariableEnvironmentD2Ev(%class.VariableEnvironment* %35) #9
  br label %144

; <label>:144:                                    ; preds = %143, %95
  call void @_ZN6VectorIN5Lexer11ElementTypeEED2Ev(%class.Vector.14* %31) #9
  br label %145

; <label>:145:                                    ; preds = %144, %91
  call void @_ZN9HashTableI6StringiED2Ev(%class.HashTable* %29) #9
  br label %146

; <label>:146:                                    ; preds = %145, %87
  %147 = getelementptr inbounds [2 x %class.Lexeme], [2 x %class.Lexeme]* %19, i32 0, i32 0
  %148 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %147, i64 2
  br label %149

; <label>:149:                                    ; preds = %149, %146
  %150 = phi %class.Lexeme* [ %148, %146 ], [ %151, %149 ]
  %151 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %150, i64 -1
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %151) #9
  %152 = icmp eq %class.Lexeme* %151, %147
  br i1 %152, label %153, label %149

; <label>:153:                                    ; preds = %149
  br label %154

; <label>:154:                                    ; preds = %153, %86
  call void @_ZN5Lexer9FileStateD2Ev(%"struct.Lexer::FileState"* %15) #9
  br label %155

; <label>:155:                                    ; preds = %154, %76
  %156 = load i8*, i8** %5, align 8
  %157 = load i32, i32* %6, align 4
  %158 = insertvalue { i8*, i32 } undef, i8* %156, 0
  %159 = insertvalue { i8*, i32 } %158, i32 %157, 1
  resume { i8*, i32 } %159
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6StringC2Ev(%class.String*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %class.String*, align 8
  store %class.String* %0, %class.String** %2, align 8
  %3 = load %class.String*, %class.String** %2, align 8
  %4 = getelementptr inbounds %class.String, %class.String* %3, i32 0, i32 0
  call void @_ZNK6String11assign_memoEPKciPNS_6memo_tE(%class.String* %3, i8* @_ZN6String9null_dataE, i32 0, %"struct.String::memo_t"* null)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6LexemeC2Ev(%class.Lexeme*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %class.Lexeme*, align 8
  store %class.Lexeme* %0, %class.Lexeme** %2, align 8
  %3 = load %class.Lexeme*, %class.Lexeme** %2, align 8
  %4 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %3, i32 0, i32 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %3, i32 0, i32 1
  call void @_ZN6StringC2Ev(%class.String* %5)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN6LexemeD2Ev(%class.Lexeme*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.Lexeme*, align 8
  store %class.Lexeme* %0, %class.Lexeme** %2, align 8
  %3 = load %class.Lexeme*, %class.Lexeme** %2, align 8
  %4 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %3, i32 0, i32 1
  call void @_ZN6StringD2Ev(%class.String* %4) #9
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6VectorIN5Lexer11ElementTypeEEC2Ev(%class.Vector.14*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %class.Vector.14*, align 8
  store %class.Vector.14* %0, %class.Vector.14** %2, align 8
  %3 = load %class.Vector.14*, %class.Vector.14** %2, align 8
  %4 = getelementptr inbounds %class.Vector.14, %class.Vector.14* %3, i32 0, i32 0
  call void @_ZN13vector_memoryI18typed_array_memoryIN5Lexer11ElementTypeEEEC2Ev(%class.vector_memory.15* %4)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6VectorIPN5Lexer9TunnelEndEEC2Ev(%class.Vector.16*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %class.Vector.16*, align 8
  store %class.Vector.16* %0, %class.Vector.16** %2, align 8
  %3 = load %class.Vector.16*, %class.Vector.16** %2, align 8
  %4 = getelementptr inbounds %class.Vector.16, %class.Vector.16* %3, i32 0, i32 0
  call void @_ZN13vector_memoryI18sized_array_memoryILm8EEEC2Ev(%class.vector_memory* %4)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr %class.ErrorHandler* @_ZN12ErrorHandler15default_handlerEv() #0 comdat align 2 {
  %1 = load %class.ErrorHandler*, %class.ErrorHandler** @_ZN12ErrorHandler19the_default_handlerE, align 8
  ret %class.ErrorHandler* %1
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer9end_parseEi(%class.Lexer*, i32) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.Lexer*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.Lexer::TunnelEnd"**, align 8
  %6 = alloca %"class.Lexer::TunnelEnd"*, align 8
  %7 = alloca %"struct.Lexer::FileState", align 8
  %8 = alloca %class.String, align 8
  %9 = alloca %class.String, align 8
  %10 = alloca i8*
  %11 = alloca i32
  %12 = alloca i32, align 4
  %13 = alloca %class.Lexeme, align 8
  store %class.Lexer* %0, %class.Lexer** %3, align 8
  store i32 %1, i32* %4, align 4
  %14 = load %class.Lexer*, %class.Lexer** %3, align 8
  %15 = load i32, i32* %4, align 4
  call void @_ZN5Lexer19lexical_scoping_outEi(%class.Lexer* %14, i32 %15)
  %16 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 15
  %17 = call %"class.Lexer::TunnelEnd"** @_ZN6VectorIPN5Lexer9TunnelEndEE5beginEv(%class.Vector.16* %16)
  store %"class.Lexer::TunnelEnd"** %17, %"class.Lexer::TunnelEnd"*** %5, align 8
  br label %18

; <label>:18:                                     ; preds = %39, %2
  %19 = load %"class.Lexer::TunnelEnd"**, %"class.Lexer::TunnelEnd"*** %5, align 8
  %20 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 15
  %21 = call %"class.Lexer::TunnelEnd"** @_ZN6VectorIPN5Lexer9TunnelEndEE3endEv(%class.Vector.16* %20)
  %22 = icmp ne %"class.Lexer::TunnelEnd"** %19, %21
  br i1 %22, label %23, label %42

; <label>:23:                                     ; preds = %18
  br label %24

; <label>:24:                                     ; preds = %37, %23
  %25 = load %"class.Lexer::TunnelEnd"**, %"class.Lexer::TunnelEnd"*** %5, align 8
  %26 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %25, align 8
  store %"class.Lexer::TunnelEnd"* %26, %"class.Lexer::TunnelEnd"** %6, align 8
  %27 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %6, align 8
  %28 = icmp ne %"class.Lexer::TunnelEnd"* %27, null
  br i1 %28, label %29, label %38

; <label>:29:                                     ; preds = %24
  %30 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %6, align 8
  %31 = call %"class.Lexer::TunnelEnd"* @_ZNK5Lexer9TunnelEnd4nextEv(%"class.Lexer::TunnelEnd"* %30)
  %32 = load %"class.Lexer::TunnelEnd"**, %"class.Lexer::TunnelEnd"*** %5, align 8
  store %"class.Lexer::TunnelEnd"* %31, %"class.Lexer::TunnelEnd"** %32, align 8
  %33 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %6, align 8
  %34 = icmp eq %"class.Lexer::TunnelEnd"* %33, null
  br i1 %34, label %37, label %35

; <label>:35:                                     ; preds = %29
  call void @_ZN5Lexer9TunnelEndD2Ev(%"class.Lexer::TunnelEnd"* %33) #9
  %36 = bitcast %"class.Lexer::TunnelEnd"* %33 to i8*
  call void @_ZdlPv(i8* %36) #14
  br label %37

; <label>:37:                                     ; preds = %35, %29
  br label %24

; <label>:38:                                     ; preds = %24
  br label %39

; <label>:39:                                     ; preds = %38
  %40 = load %"class.Lexer::TunnelEnd"**, %"class.Lexer::TunnelEnd"*** %5, align 8
  %41 = getelementptr inbounds %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %40, i32 1
  store %"class.Lexer::TunnelEnd"** %41, %"class.Lexer::TunnelEnd"*** %5, align 8
  br label %18

; <label>:42:                                     ; preds = %18
  %43 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 15
  call void @_ZN6VectorIPN5Lexer9TunnelEndEE5clearEv(%class.Vector.16* %43)
  %44 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 12
  %45 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %44, align 8
  %46 = icmp ne %"class.Lexer::Compound"* %45, null
  br i1 %46, label %47, label %50

; <label>:47:                                     ; preds = %42
  %48 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 12
  %49 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %48, align 8
  call void @_ZN5Lexer8Compound5unuseEv(%"class.Lexer::Compound"* %49)
  br label %50

; <label>:50:                                     ; preds = %47, %42
  %51 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 12
  store %"class.Lexer::Compound"* null, %"class.Lexer::Compound"** %51, align 8
  %52 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %53 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %52, align 8
  %54 = icmp eq %"struct.Lexer::ParseState"* %53, null
  br i1 %54, label %57, label %55

; <label>:55:                                     ; preds = %50
  call void @_ZN5Lexer10ParseStateD2Ev(%"struct.Lexer::ParseState"* %53) #9
  %56 = bitcast %"struct.Lexer::ParseState"* %53 to i8*
  call void @_ZdlPv(i8* %56) #14
  br label %57

; <label>:57:                                     ; preds = %55, %50
  %58 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  store %"struct.Lexer::ParseState"* null, %"struct.Lexer::ParseState"** %58, align 8
  %59 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 17
  call void @_ZN6VectorI6StringE5clearEv(%class.Vector.0* %59)
  %60 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 18
  call void @_ZN6VectorI6StringE5clearEv(%class.Vector.0* %60)
  call void @_ZN6StringC2Ev(%class.String* %8)
  invoke void @_ZN6StringC2Ev(%class.String* %9)
          to label %61 unwind label %80

; <label>:61:                                     ; preds = %57
  invoke void @_ZN5Lexer9FileStateC1ERK6StringS3_(%"struct.Lexer::FileState"* %7, %class.String* dereferenceable(24) %8, %class.String* dereferenceable(24) %9)
          to label %62 unwind label %84

; <label>:62:                                     ; preds = %61
  %63 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 1
  %64 = invoke dereferenceable(96) %"struct.Lexer::FileState"* @_ZN5Lexer9FileStateaSEOS0_(%"struct.Lexer::FileState"* %63, %"struct.Lexer::FileState"* dereferenceable(96) %7)
          to label %65 unwind label %88

; <label>:65:                                     ; preds = %62
  call void @_ZN5Lexer9FileStateD2Ev(%"struct.Lexer::FileState"* %7) #9
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  call void @_ZN6StringD2Ev(%class.String* %8) #9
  %66 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 3
  store %class.LexerExtra* null, %class.LexerExtra** %66, align 8
  store i32 0, i32* %12, align 4
  br label %67

; <label>:67:                                     ; preds = %77, %65
  %68 = load i32, i32* %12, align 4
  %69 = icmp slt i32 %68, 2
  br i1 %69, label %70, label %98

; <label>:70:                                     ; preds = %67
  call void @_ZN6LexemeC2Ev(%class.Lexeme* %13)
  %71 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 4
  %72 = load i32, i32* %12, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [2 x %class.Lexeme], [2 x %class.Lexeme]* %71, i64 0, i64 %73
  %75 = invoke dereferenceable(32) %class.Lexeme* @_ZN6LexemeaSEOS_(%class.Lexeme* %74, %class.Lexeme* dereferenceable(32) %13)
          to label %76 unwind label %94

; <label>:76:                                     ; preds = %70
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %13) #9
  br label %77

; <label>:77:                                     ; preds = %76
  %78 = load i32, i32* %12, align 4
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %12, align 4
  br label %67

; <label>:80:                                     ; preds = %57
  %81 = landingpad { i8*, i32 }
          cleanup
  %82 = extractvalue { i8*, i32 } %81, 0
  store i8* %82, i8** %10, align 8
  %83 = extractvalue { i8*, i32 } %81, 1
  store i32 %83, i32* %11, align 4
  br label %93

; <label>:84:                                     ; preds = %61
  %85 = landingpad { i8*, i32 }
          cleanup
  %86 = extractvalue { i8*, i32 } %85, 0
  store i8* %86, i8** %10, align 8
  %87 = extractvalue { i8*, i32 } %85, 1
  store i32 %87, i32* %11, align 4
  br label %92

; <label>:88:                                     ; preds = %62
  %89 = landingpad { i8*, i32 }
          cleanup
  %90 = extractvalue { i8*, i32 } %89, 0
  store i8* %90, i8** %10, align 8
  %91 = extractvalue { i8*, i32 } %89, 1
  store i32 %91, i32* %11, align 4
  call void @_ZN5Lexer9FileStateD2Ev(%"struct.Lexer::FileState"* %7) #9
  br label %92

; <label>:92:                                     ; preds = %88, %84
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  br label %93

; <label>:93:                                     ; preds = %92, %80
  call void @_ZN6StringD2Ev(%class.String* %8) #9
  br label %102

; <label>:94:                                     ; preds = %70
  %95 = landingpad { i8*, i32 }
          cleanup
  %96 = extractvalue { i8*, i32 } %95, 0
  store i8* %96, i8** %10, align 8
  %97 = extractvalue { i8*, i32 } %95, 1
  store i32 %97, i32* %11, align 4
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %13) #9
  br label %102

; <label>:98:                                     ; preds = %67
  %99 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 5
  store i32 0, i32* %99, align 8
  %100 = call %class.ErrorHandler* @_ZN12ErrorHandler15default_handlerEv()
  %101 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 19
  store %class.ErrorHandler* %100, %class.ErrorHandler** %101, align 8
  ret void

; <label>:102:                                    ; preds = %94, %93
  %103 = load i8*, i8** %10, align 8
  %104 = load i32, i32* %11, align 4
  %105 = insertvalue { i8*, i32 } undef, i8* %103, 0
  %106 = insertvalue { i8*, i32 } %105, i32 %104, 1
  resume { i8*, i32 } %106
}

; Function Attrs: noinline optnone uwtable
define i32 @_ZN5Lexer16add_element_typeERK6StringPFP7ElementmEmb(%class.Lexer*, %class.String* dereferenceable(24), %class.Element* (i64)*, i64, i1 zeroext) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %class.Lexer*, align 8
  %7 = alloca %class.String*, align 8
  %8 = alloca %class.Element* (i64)*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca %"struct.Lexer::ElementType", align 8
  %13 = alloca i8*
  %14 = alloca i32
  store %class.Lexer* %0, %class.Lexer** %6, align 8
  store %class.String* %1, %class.String** %7, align 8
  store %class.Element* (i64)* %2, %class.Element* (i64)** %8, align 8
  store i64 %3, i64* %9, align 8
  %15 = zext i1 %4 to i8
  store i8 %15, i8* %10, align 1
  %16 = load %class.Lexer*, %class.Lexer** %6, align 8
  %17 = load %class.Element* (i64)*, %class.Element* (i64)** %8, align 8
  %18 = icmp ne %class.Element* (i64)* %17, null
  br i1 %18, label %19, label %20

; <label>:19:                                     ; preds = %5
  br label %22

; <label>:20:                                     ; preds = %5
  call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i32 948, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN5Lexer16add_element_typeERK6StringPFP7ElementmEmb, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %22

; <label>:22:                                     ; preds = %21, %19
  %23 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 10
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %26, label %36

; <label>:26:                                     ; preds = %22
  %27 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 8
  %28 = call i32 @_ZNK6VectorIN5Lexer11ElementTypeEE4sizeEv(%class.Vector.14* %27)
  store i32 %28, i32* %11, align 4
  %29 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 8
  %30 = bitcast %"struct.Lexer::ElementType"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* %30, i8 0, i64 48, i32 8, i1 false)
  call void @_ZN5Lexer11ElementTypeC2Ev(%"struct.Lexer::ElementType"* %12)
  invoke void @_ZN6VectorIN5Lexer11ElementTypeEE9push_backI13fast_argumentIS1_Lb1EEEENT_23enable_rvalue_referenceEOS1_(%class.Vector.14* %29, %"struct.Lexer::ElementType"* dereferenceable(48) %12)
          to label %31 unwind label %32

; <label>:31:                                     ; preds = %26
  call void @_ZN5Lexer11ElementTypeD2Ev(%"struct.Lexer::ElementType"* %12) #9
  br label %45

; <label>:32:                                     ; preds = %26
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  store i8* %34, i8** %13, align 8
  %35 = extractvalue { i8*, i32 } %33, 1
  store i32 %35, i32* %14, align 4
  call void @_ZN5Lexer11ElementTypeD2Ev(%"struct.Lexer::ElementType"* %12) #9
  br label %85

; <label>:36:                                     ; preds = %22
  %37 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 10
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %11, align 4
  %39 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 8
  %40 = load i32, i32* %11, align 4
  %41 = call dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %39, i32 %40)
  %42 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %41, i32 0, i32 3
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 10
  store i32 %43, i32* %44, align 4
  br label %45

; <label>:45:                                     ; preds = %36, %31
  %46 = load %class.Element* (i64)*, %class.Element* (i64)** %8, align 8
  %47 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 8
  %48 = load i32, i32* %11, align 4
  %49 = call dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %47, i32 %48)
  %50 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %49, i32 0, i32 0
  store %class.Element* (i64)* %46, %class.Element* (i64)** %50, align 8
  %51 = load i64, i64* %9, align 8
  %52 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 8
  %53 = load i32, i32* %11, align 4
  %54 = call dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %52, i32 %53)
  %55 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %54, i32 0, i32 1
  store i64 %51, i64* %55, align 8
  %56 = load %class.String*, %class.String** %7, align 8
  %57 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 8
  %58 = load i32, i32* %11, align 4
  %59 = call dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %57, i32 %58)
  %60 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %59, i32 0, i32 2
  %61 = call dereferenceable(24) %class.String* @_ZN6StringaSERKS_(%class.String* %60, %class.String* dereferenceable(24) %56)
  %62 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 9
  %63 = load i32, i32* %62, align 8
  %64 = load i8, i8* %10, align 1
  %65 = trunc i8 %64 to i1
  %66 = zext i1 %65 to i64
  %67 = select i1 %65, i32 -2147483648, i32 0
  %68 = or i32 %63, %67
  %69 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 8
  %70 = load i32, i32* %11, align 4
  %71 = call dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %69, i32 %70)
  %72 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %71, i32 0, i32 3
  store i32 %68, i32* %72, align 8
  %73 = load %class.String*, %class.String** %7, align 8
  %74 = call { i64, i64 } @_ZNK6StringcvMS_KFivEEv(%class.String* %73)
  %75 = extractvalue { i64, i64 } %74, 0
  %76 = icmp ne i64 %75, 0
  br i1 %76, label %77, label %81

; <label>:77:                                     ; preds = %45
  %78 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 7
  %79 = load %class.String*, %class.String** %7, align 8
  %80 = call zeroext i1 @_ZN9HashTableI6StringiE3setERKS0_RKi(%class.HashTable* %78, %class.String* dereferenceable(24) %79, i32* dereferenceable(4) %11)
  br label %81

; <label>:81:                                     ; preds = %77, %45
  %82 = load i32, i32* %11, align 4
  %83 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 9
  store i32 %82, i32* %83, align 8
  %84 = load i32, i32* %11, align 4
  ret i32 %84

; <label>:85:                                     ; preds = %32
  %86 = load i8*, i8** %13, align 8
  %87 = load i32, i32* %14, align 4
  %88 = insertvalue { i8*, i32 } undef, i8* %86, 0
  %89 = insertvalue { i8*, i32 } %88, i32 %87, 1
  resume { i8*, i32 } %89
}

; Function Attrs: noinline optnone uwtable
define internal %class.Element* @_ZL21error_element_factorym(i64) #2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca i64, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store i64 %0, i64* %2, align 8
  %5 = call i8* @_Znwm(i64 112) #15
  %6 = bitcast i8* %5 to %class.ErrorElement*
  invoke void @_ZN12ErrorElementC1Ev(%class.ErrorElement* %6)
          to label %7 unwind label %9

; <label>:7:                                      ; preds = %1
  %8 = bitcast %class.ErrorElement* %6 to %class.Element*
  ret %class.Element* %8

; <label>:9:                                      ; preds = %1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  store i8* %11, i8** %3, align 8
  %12 = extractvalue { i8*, i32 } %10, 1
  store i32 %12, i32* %4, align 4
  call void @_ZdlPv(i8* %5) #14
  br label %13

; <label>:13:                                     ; preds = %9
  %14 = load i8*, i8** %3, align 8
  %15 = load i32, i32* %4, align 4
  %16 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1
  resume { i8*, i32 } %17
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN6VectorIPN5Lexer9TunnelEndEED2Ev(%class.Vector.16*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.Vector.16*, align 8
  store %class.Vector.16* %0, %class.Vector.16** %2, align 8
  %3 = load %class.Vector.16*, %class.Vector.16** %2, align 8
  %4 = getelementptr inbounds %class.Vector.16, %class.Vector.16* %3, i32 0, i32 0
  call void @_ZN13vector_memoryI18sized_array_memoryILm8EEED2Ev(%class.vector_memory* %4) #9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN6VectorIN5Lexer11ElementTypeEED2Ev(%class.Vector.14*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.Vector.14*, align 8
  store %class.Vector.14* %0, %class.Vector.14** %2, align 8
  %3 = load %class.Vector.14*, %class.Vector.14** %2, align 8
  %4 = getelementptr inbounds %class.Vector.14, %class.Vector.14* %3, i32 0, i32 0
  call void @_ZN13vector_memoryI18typed_array_memoryIN5Lexer11ElementTypeEEED2Ev(%class.vector_memory.15* %4) #9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN5Lexer9FileStateD2Ev(%"struct.Lexer::FileState"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.Lexer::FileState"*, align 8
  store %"struct.Lexer::FileState"* %0, %"struct.Lexer::FileState"** %2, align 8
  %3 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %2, align 8
  %4 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %3, i32 0, i32 4
  call void @_ZN6StringD2Ev(%class.String* %4) #9
  %5 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %3, i32 0, i32 3
  call void @_ZN6StringD2Ev(%class.String* %5) #9
  %6 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %3, i32 0, i32 0
  call void @_ZN6StringD2Ev(%class.String* %6) #9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @_ZN5LexerD2Ev(%class.Lexer*) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Lexer*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  %5 = alloca i32, align 4
  %6 = alloca %"class.Lexer::Compound"*, align 8
  store %class.Lexer* %0, %class.Lexer** %2, align 8
  %7 = load %class.Lexer*, %class.Lexer** %2, align 8
  %8 = bitcast %class.Lexer* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV5Lexer, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %8, align 8
  invoke void @_ZN5Lexer9end_parseEi(%class.Lexer* %7, i32 2147483647)
          to label %9 unwind label %28

; <label>:9:                                      ; preds = %1
  store i32 0, i32* %5, align 4
  br label %10

; <label>:10:                                     ; preds = %42, %9
  %11 = load i32, i32* %5, align 4
  %12 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 8
  %13 = invoke i32 @_ZNK6VectorIN5Lexer11ElementTypeEE4sizeEv(%class.Vector.14* %12)
          to label %14 unwind label %28

; <label>:14:                                     ; preds = %10
  %15 = icmp slt i32 %11, %13
  br i1 %15, label %16, label %45

; <label>:16:                                     ; preds = %14
  %17 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 8
  %18 = load i32, i32* %5, align 4
  %19 = invoke dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %17, i32 %18)
          to label %20 unwind label %28

; <label>:20:                                     ; preds = %16
  %21 = invoke %"class.Lexer::Compound"* @_ZNK5Lexer11ElementType8compoundEv(%"struct.Lexer::ElementType"* %19)
          to label %22 unwind label %28

; <label>:22:                                     ; preds = %20
  store %"class.Lexer::Compound"* %21, %"class.Lexer::Compound"** %6, align 8
  %23 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %6, align 8
  %24 = icmp ne %"class.Lexer::Compound"* %23, null
  br i1 %24, label %25, label %41

; <label>:25:                                     ; preds = %22
  %26 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %6, align 8
  invoke void @_ZN5Lexer8Compound5unuseEv(%"class.Lexer::Compound"* %26)
          to label %27 unwind label %28

; <label>:27:                                     ; preds = %25
  br label %41

; <label>:28:                                     ; preds = %25, %20, %16, %10, %1
  %29 = landingpad { i8*, i32 }
          catch i8* null
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %3, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %4, align 4
  %32 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 18
  call void @_ZN6VectorI6StringED2Ev(%class.Vector.0* %32) #9
  %33 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 17
  call void @_ZN6VectorI6StringED2Ev(%class.Vector.0* %33) #9
  %34 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 15
  call void @_ZN6VectorIPN5Lexer9TunnelEndEED2Ev(%class.Vector.16* %34) #9
  %35 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 11
  call void @_ZN19VariableEnvironmentD2Ev(%class.VariableEnvironment* %35) #9
  %36 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 8
  call void @_ZN6VectorIN5Lexer11ElementTypeEED2Ev(%class.Vector.14* %36) #9
  %37 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 7
  call void @_ZN9HashTableI6StringiED2Ev(%class.HashTable* %37) #9
  %38 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 4
  %39 = getelementptr inbounds [2 x %class.Lexeme], [2 x %class.Lexeme]* %38, i32 0, i32 0
  %40 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %39, i64 2
  br label %61

; <label>:41:                                     ; preds = %27, %22
  br label %42

; <label>:42:                                     ; preds = %41
  %43 = load i32, i32* %5, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %5, align 4
  br label %10

; <label>:45:                                     ; preds = %14
  %46 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 18
  call void @_ZN6VectorI6StringED2Ev(%class.Vector.0* %46) #9
  %47 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 17
  call void @_ZN6VectorI6StringED2Ev(%class.Vector.0* %47) #9
  %48 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 15
  call void @_ZN6VectorIPN5Lexer9TunnelEndEED2Ev(%class.Vector.16* %48) #9
  %49 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 11
  call void @_ZN19VariableEnvironmentD2Ev(%class.VariableEnvironment* %49) #9
  %50 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 8
  call void @_ZN6VectorIN5Lexer11ElementTypeEED2Ev(%class.Vector.14* %50) #9
  %51 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 7
  call void @_ZN9HashTableI6StringiED2Ev(%class.HashTable* %51) #9
  %52 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 4
  %53 = getelementptr inbounds [2 x %class.Lexeme], [2 x %class.Lexeme]* %52, i32 0, i32 0
  %54 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %53, i64 2
  br label %55

; <label>:55:                                     ; preds = %55, %45
  %56 = phi %class.Lexeme* [ %54, %45 ], [ %57, %55 ]
  %57 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %56, i64 -1
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %57) #9
  %58 = icmp eq %class.Lexeme* %57, %53
  br i1 %58, label %59, label %55

; <label>:59:                                     ; preds = %55
  %60 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 1
  call void @_ZN5Lexer9FileStateD2Ev(%"struct.Lexer::FileState"* %60) #9
  ret void

; <label>:61:                                     ; preds = %61, %28
  %62 = phi %class.Lexeme* [ %40, %28 ], [ %63, %61 ]
  %63 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %62, i64 -1
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %63) #9
  %64 = icmp eq %class.Lexeme* %63, %39
  br i1 %64, label %65, label %61

; <label>:65:                                     ; preds = %61
  %66 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 1
  call void @_ZN5Lexer9FileStateD2Ev(%"struct.Lexer::FileState"* %66) #9
  br label %67

; <label>:67:                                     ; preds = %65
  %68 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %68) #12
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr i32 @_ZNK6VectorIN5Lexer11ElementTypeEE4sizeEv(%class.Vector.14*) #0 comdat align 2 {
  %2 = alloca %class.Vector.14*, align 8
  store %class.Vector.14* %0, %class.Vector.14** %2, align 8
  %3 = load %class.Vector.14*, %class.Vector.14** %2, align 8
  %4 = getelementptr inbounds %class.Vector.14, %class.Vector.14* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %4, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  ret i32 %6
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr %"class.Lexer::Compound"* @_ZNK5Lexer11ElementType8compoundEv(%"struct.Lexer::ElementType"*) #0 comdat align 2 {
  %2 = alloca %"class.Lexer::Compound"*, align 8
  %3 = alloca %"struct.Lexer::ElementType"*, align 8
  store %"struct.Lexer::ElementType"* %0, %"struct.Lexer::ElementType"** %3, align 8
  %4 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %3, align 8
  %5 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %4, i32 0, i32 0
  %6 = load %class.Element* (i64)*, %class.Element* (i64)** %5, align 8
  %7 = icmp eq %class.Element* (i64)* %6, @_ZN5Lexer24compound_element_factoryEm
  br i1 %7, label %8, label %12

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %4, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to %"class.Lexer::Compound"*
  store %"class.Lexer::Compound"* %11, %"class.Lexer::Compound"** %2, align 8
  br label %13

; <label>:12:                                     ; preds = %1
  store %"class.Lexer::Compound"* null, %"class.Lexer::Compound"** %2, align 8
  br label %13

; <label>:13:                                     ; preds = %12, %8
  %14 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %2, align 8
  ret %"class.Lexer::Compound"* %14
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN5Lexer8Compound5unuseEv(%"class.Lexer::Compound"*) #0 comdat align 2 {
  %2 = alloca %"class.Lexer::Compound"*, align 8
  store %"class.Lexer::Compound"* %0, %"class.Lexer::Compound"** %2, align 8
  %3 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %2, align 8
  %4 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %3, i32 0, i32 18
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, -1
  store i32 %6, i32* %4, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %16

; <label>:8:                                      ; preds = %1
  %9 = icmp eq %"class.Lexer::Compound"* %3, null
  br i1 %9, label %15, label %10

; <label>:10:                                     ; preds = %8
  %11 = bitcast %"class.Lexer::Compound"* %3 to void (%"class.Lexer::Compound"*)***
  %12 = load void (%"class.Lexer::Compound"*)**, void (%"class.Lexer::Compound"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.Lexer::Compound"*)*, void (%"class.Lexer::Compound"*)** %12, i64 1
  %14 = load void (%"class.Lexer::Compound"*)*, void (%"class.Lexer::Compound"*)** %13, align 8
  call void %14(%"class.Lexer::Compound"* %3) #9
  br label %15

; <label>:15:                                     ; preds = %10, %8
  br label %16

; <label>:16:                                     ; preds = %15, %1
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #6 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #9
  call void @_ZSt9terminatev() #12
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline nounwind optnone uwtable
define void @_ZN5LexerD0Ev(%class.Lexer*) unnamed_addr #0 align 2 {
  %2 = alloca %class.Lexer*, align 8
  store %class.Lexer* %0, %class.Lexer** %2, align 8
  %3 = load %class.Lexer*, %class.Lexer** %2, align 8
  call void @_ZN5LexerD1Ev(%class.Lexer* %3) #9
  %4 = bitcast %class.Lexer* %3 to i8*
  call void @_ZdlPv(i8* %4) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #7

; Function Attrs: noinline optnone uwtable
define i32 @_ZN5Lexer11begin_parseERK6StringS2_P10LexerExtraP12ErrorHandler(%class.Lexer*, %class.String* dereferenceable(24), %class.String* dereferenceable(24), %class.LexerExtra*, %class.ErrorHandler*) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %class.Lexer*, align 8
  %7 = alloca %class.String*, align 8
  %8 = alloca %class.String*, align 8
  %9 = alloca %class.LexerExtra*, align 8
  %10 = alloca %class.ErrorHandler*, align 8
  %11 = alloca %"struct.Lexer::FileState", align 8
  %12 = alloca i8*
  %13 = alloca i32
  %14 = alloca %class.String, align 8
  %15 = alloca %class.String, align 8
  %16 = alloca i1, align 1
  store %class.Lexer* %0, %class.Lexer** %6, align 8
  store %class.String* %1, %class.String** %7, align 8
  store %class.String* %2, %class.String** %8, align 8
  store %class.LexerExtra* %3, %class.LexerExtra** %9, align 8
  store %class.ErrorHandler* %4, %class.ErrorHandler** %10, align 8
  %17 = load %class.Lexer*, %class.Lexer** %6, align 8
  %18 = load %class.String*, %class.String** %7, align 8
  %19 = load %class.String*, %class.String** %8, align 8
  call void @_ZN5Lexer9FileStateC1ERK6StringS3_(%"struct.Lexer::FileState"* %11, %class.String* dereferenceable(24) %18, %class.String* dereferenceable(24) %19)
  %20 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 1
  %21 = invoke dereferenceable(96) %"struct.Lexer::FileState"* @_ZN5Lexer9FileStateaSEOS0_(%"struct.Lexer::FileState"* %20, %"struct.Lexer::FileState"* dereferenceable(96) %11)
          to label %22 unwind label %46

; <label>:22:                                     ; preds = %5
  call void @_ZN5Lexer9FileStateD2Ev(%"struct.Lexer::FileState"* %11) #9
  %23 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 2
  store i8 0, i8* %23, align 8
  %24 = call i8* @_Znwm(i64 440) #15
  store i1 true, i1* %16, align 1
  %25 = bitcast i8* %24 to %"class.Lexer::Compound"*
  invoke void @_ZN6StringC2EPKc(%class.String* %14, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13, i32 0, i32 0))
          to label %26 unwind label %50

; <label>:26:                                     ; preds = %22
  invoke void @_ZN6StringC2EPKc(%class.String* %15, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13, i32 0, i32 0))
          to label %27 unwind label %54

; <label>:27:                                     ; preds = %26
  invoke void @_ZN5Lexer8CompoundC1ERK6StringS3_P19VariableEnvironment(%"class.Lexer::Compound"* %25, %class.String* dereferenceable(24) %14, %class.String* dereferenceable(24) %15, %class.VariableEnvironment* null)
          to label %28 unwind label %58

; <label>:28:                                     ; preds = %27
  store i1 false, i1* %16, align 1
  %29 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 12
  store %"class.Lexer::Compound"* %25, %"class.Lexer::Compound"** %29, align 8
  call void @_ZN6StringD2Ev(%class.String* %15) #9
  call void @_ZN6StringD2Ev(%class.String* %14) #9
  %30 = call i8* @_Znwm(i64 216) #15
  %31 = bitcast i8* %30 to %"struct.Lexer::ParseState"*
  invoke void @_ZN5Lexer10ParseStateC2EiPS0_(%"struct.Lexer::ParseState"* %31, i32 0, %"struct.Lexer::ParseState"* null)
          to label %32 unwind label %67

; <label>:32:                                     ; preds = %28
  %33 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 13
  store %"struct.Lexer::ParseState"* %31, %"struct.Lexer::ParseState"** %33, align 8
  %34 = load %class.LexerExtra*, %class.LexerExtra** %9, align 8
  %35 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 3
  store %class.LexerExtra* %34, %class.LexerExtra** %35, align 8
  %36 = load %class.ErrorHandler*, %class.ErrorHandler** %10, align 8
  %37 = icmp ne %class.ErrorHandler* %36, null
  br i1 %37, label %38, label %40

; <label>:38:                                     ; preds = %32
  %39 = load %class.ErrorHandler*, %class.ErrorHandler** %10, align 8
  br label %42

; <label>:40:                                     ; preds = %32
  %41 = call %class.ErrorHandler* @_ZN12ErrorHandler15default_handlerEv()
  br label %42

; <label>:42:                                     ; preds = %40, %38
  %43 = phi %class.ErrorHandler* [ %39, %38 ], [ %41, %40 ]
  %44 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 19
  store %class.ErrorHandler* %43, %class.ErrorHandler** %44, align 8
  %45 = call i32 @_ZNK5Lexer18lexical_scoping_inEv(%class.Lexer* %17)
  ret i32 %45

; <label>:46:                                     ; preds = %5
  %47 = landingpad { i8*, i32 }
          cleanup
  %48 = extractvalue { i8*, i32 } %47, 0
  store i8* %48, i8** %12, align 8
  %49 = extractvalue { i8*, i32 } %47, 1
  store i32 %49, i32* %13, align 4
  call void @_ZN5Lexer9FileStateD2Ev(%"struct.Lexer::FileState"* %11) #9
  br label %71

; <label>:50:                                     ; preds = %22
  %51 = landingpad { i8*, i32 }
          cleanup
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %12, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %13, align 4
  br label %63

; <label>:54:                                     ; preds = %26
  %55 = landingpad { i8*, i32 }
          cleanup
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %12, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %13, align 4
  br label %62

; <label>:58:                                     ; preds = %27
  %59 = landingpad { i8*, i32 }
          cleanup
  %60 = extractvalue { i8*, i32 } %59, 0
  store i8* %60, i8** %12, align 8
  %61 = extractvalue { i8*, i32 } %59, 1
  store i32 %61, i32* %13, align 4
  call void @_ZN6StringD2Ev(%class.String* %15) #9
  br label %62

; <label>:62:                                     ; preds = %58, %54
  call void @_ZN6StringD2Ev(%class.String* %14) #9
  br label %63

; <label>:63:                                     ; preds = %62, %50
  %64 = load i1, i1* %16, align 1
  br i1 %64, label %65, label %66

; <label>:65:                                     ; preds = %63
  call void @_ZdlPv(i8* %24) #14
  br label %66

; <label>:66:                                     ; preds = %65, %63
  br label %71

; <label>:67:                                     ; preds = %28
  %68 = landingpad { i8*, i32 }
          cleanup
  %69 = extractvalue { i8*, i32 } %68, 0
  store i8* %69, i8** %12, align 8
  %70 = extractvalue { i8*, i32 } %68, 1
  store i32 %70, i32* %13, align 4
  call void @_ZdlPv(i8* %30) #14
  br label %71

; <label>:71:                                     ; preds = %67, %66, %46
  %72 = load i8*, i8** %12, align 8
  %73 = load i32, i32* %13, align 4
  %74 = insertvalue { i8*, i32 } undef, i8* %72, 0
  %75 = insertvalue { i8*, i32 } %74, i32 %73, 1
  resume { i8*, i32 } %75
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dereferenceable(96) %"struct.Lexer::FileState"* @_ZN5Lexer9FileStateaSEOS0_(%"struct.Lexer::FileState"*, %"struct.Lexer::FileState"* dereferenceable(96)) #2 comdat align 2 {
  %3 = alloca %"struct.Lexer::FileState"*, align 8
  %4 = alloca %"struct.Lexer::FileState"*, align 8
  store %"struct.Lexer::FileState"* %0, %"struct.Lexer::FileState"** %3, align 8
  store %"struct.Lexer::FileState"* %1, %"struct.Lexer::FileState"** %4, align 8
  %5 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %3, align 8
  %6 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %5, i32 0, i32 0
  %7 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %4, align 8
  %8 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %7, i32 0, i32 0
  %9 = call dereferenceable(24) %class.String* @_ZN6StringaSEOS_(%class.String* %6, %class.String* dereferenceable(24) %8)
  %10 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %5, i32 0, i32 1
  %11 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %4, align 8
  %12 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %11, i32 0, i32 1
  %13 = bitcast i8** %10 to i8*
  %14 = bitcast i8** %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 16, i32 8, i1 false)
  %15 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %5, i32 0, i32 3
  %16 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %4, align 8
  %17 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %16, i32 0, i32 3
  %18 = call dereferenceable(24) %class.String* @_ZN6StringaSEOS_(%class.String* %15, %class.String* dereferenceable(24) %17)
  %19 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %5, i32 0, i32 4
  %20 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %4, align 8
  %21 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %20, i32 0, i32 4
  %22 = call dereferenceable(24) %class.String* @_ZN6StringaSEOS_(%class.String* %19, %class.String* dereferenceable(24) %21)
  %23 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %4, align 8
  %24 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %23, i32 0, i32 5
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %5, i32 0, i32 5
  store i32 %25, i32* %26, align 8
  ret %"struct.Lexer::FileState"* %5
}

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #8

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN5Lexer10ParseStateC2EiPS0_(%"struct.Lexer::ParseState"*, i32, %"struct.Lexer::ParseState"*) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.Lexer::ParseState"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %"struct.Lexer::ParseState"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.Lexer::ParseState"* %0, %"struct.Lexer::ParseState"** %4, align 8
  store i32 %1, i32* %5, align 4
  store %"struct.Lexer::ParseState"* %2, %"struct.Lexer::ParseState"** %6, align 8
  %9 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %4, align 8
  %10 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %9, i32 0, i32 0
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %9, i32 0, i32 1
  %12 = load i32, i32* %5, align 4
  store i32 %12, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %9, i32 0, i32 2
  call void @_ZN6VectorIiEC2Ev(%class.Vector.5* %13)
  %14 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %9, i32 0, i32 3
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %9, i32 0, i32 9
  store i8 1, i8* %15, align 2
  %16 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %9, i32 0, i32 11
  invoke void @_ZN6VectorIiEC2Ev(%class.Vector.5* %16)
          to label %17 unwind label %35

; <label>:17:                                     ; preds = %3
  %18 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %9, i32 0, i32 14
  invoke void @_ZN6StringC2Ev(%class.String* %18)
          to label %19 unwind label %39

; <label>:19:                                     ; preds = %17
  %20 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %9, i32 0, i32 15
  invoke void @_ZN9HashTableI6StringiEC2Ev(%class.HashTable* %20)
          to label %21 unwind label %43

; <label>:21:                                     ; preds = %19
  %22 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %9, i32 0, i32 21
  %23 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %6, align 8
  store %"struct.Lexer::ParseState"* %23, %"struct.Lexer::ParseState"** %22, align 8
  %24 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %9, i32 0, i32 22
  %25 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %6, align 8
  %26 = icmp ne %"struct.Lexer::ParseState"* %25, null
  br i1 %26, label %27, label %32

; <label>:27:                                     ; preds = %21
  %28 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %6, align 8
  %29 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %28, i32 0, i32 22
  %30 = load i32, i32* %29, align 8
  %31 = add nsw i32 %30, 1
  br label %33

; <label>:32:                                     ; preds = %21
  br label %33

; <label>:33:                                     ; preds = %32, %27
  %34 = phi i32 [ %31, %27 ], [ 0, %32 ]
  store i32 %34, i32* %24, align 8
  ret void

; <label>:35:                                     ; preds = %3
  %36 = landingpad { i8*, i32 }
          cleanup
  %37 = extractvalue { i8*, i32 } %36, 0
  store i8* %37, i8** %7, align 8
  %38 = extractvalue { i8*, i32 } %36, 1
  store i32 %38, i32* %8, align 4
  br label %48

; <label>:39:                                     ; preds = %17
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %7, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %8, align 4
  br label %47

; <label>:43:                                     ; preds = %19
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = extractvalue { i8*, i32 } %44, 0
  store i8* %45, i8** %7, align 8
  %46 = extractvalue { i8*, i32 } %44, 1
  store i32 %46, i32* %8, align 4
  call void @_ZN6StringD2Ev(%class.String* %18) #9
  br label %47

; <label>:47:                                     ; preds = %43, %39
  call void @_ZN6VectorIiED2Ev(%class.Vector.5* %16) #9
  br label %48

; <label>:48:                                     ; preds = %47, %35
  call void @_ZN6VectorIiED2Ev(%class.Vector.5* %13) #9
  br label %49

; <label>:49:                                     ; preds = %48
  %50 = load i8*, i8** %7, align 8
  %51 = load i32, i32* %8, align 4
  %52 = insertvalue { i8*, i32 } undef, i8* %50, 0
  %53 = insertvalue { i8*, i32 } %52, i32 %51, 1
  resume { i8*, i32 } %53
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @_ZNK5Lexer18lexical_scoping_inEv(%class.Lexer*) #0 align 2 {
  %2 = alloca %class.Lexer*, align 8
  store %class.Lexer* %0, %class.Lexer** %2, align 8
  %3 = load %class.Lexer*, %class.Lexer** %2, align 8
  %4 = getelementptr inbounds %class.Lexer, %class.Lexer* %3, i32 0, i32 9
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer19lexical_scoping_outEi(%class.Lexer*, i32) #2 align 2 {
  %3 = alloca %class.Lexer*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %class.Lexer* %0, %class.Lexer** %3, align 8
  store i32 %1, i32* %4, align 4
  %7 = load %class.Lexer*, %class.Lexer** %3, align 8
  %8 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 9
  store i32* %8, i32** %5, align 8
  br label %9

; <label>:9:                                      ; preds = %46, %2
  %10 = load i32*, i32** %5, align 8
  %11 = load i32, i32* %10, align 4
  %12 = load i32, i32* %4, align 4
  %13 = icmp ne i32 %11, %12
  br i1 %13, label %14, label %18

; <label>:14:                                     ; preds = %9
  %15 = load i32*, i32** %5, align 8
  %16 = load i32, i32* %15, align 4
  %17 = icmp ne i32 %16, 2147483647
  br label %18

; <label>:18:                                     ; preds = %14, %9
  %19 = phi i1 [ false, %9 ], [ %17, %14 ]
  br i1 %19, label %20, label %47

; <label>:20:                                     ; preds = %18
  %21 = load i32*, i32** %5, align 8
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, -2147483648
  %24 = icmp ne i32 %23, 0
  %25 = xor i1 %24, true
  br i1 %25, label %26, label %27

; <label>:26:                                     ; preds = %20
  br label %29

; <label>:27:                                     ; preds = %20
  call void @__assert_fail(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i32 993, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__PRETTY_FUNCTION__._ZN5Lexer19lexical_scoping_outEi, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %29

; <label>:29:                                     ; preds = %28, %26
  %30 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 8
  %31 = load i32*, i32** %5, align 8
  %32 = load i32, i32* %31, align 4
  %33 = call dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %30, i32 %32)
  %34 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %33, i32 0, i32 3
  store i32* %34, i32** %6, align 8
  %35 = load i32*, i32** %6, align 8
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, -2147483648
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %39, label %44

; <label>:39:                                     ; preds = %29
  %40 = load i32*, i32** %5, align 8
  %41 = load i32, i32* %40, align 4
  %42 = load i32*, i32** %5, align 8
  %43 = call i32 @_ZN5Lexer19remove_element_typeEiPi(%class.Lexer* %7, i32 %41, i32* %42)
  br label %46

; <label>:44:                                     ; preds = %29
  %45 = load i32*, i32** %6, align 8
  store i32* %45, i32** %5, align 8
  br label %46

; <label>:46:                                     ; preds = %44, %39
  br label %9

; <label>:47:                                     ; preds = %18
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr %"class.Lexer::TunnelEnd"** @_ZN6VectorIPN5Lexer9TunnelEndEE5beginEv(%class.Vector.16*) #0 comdat align 2 {
  %2 = alloca %class.Vector.16*, align 8
  store %class.Vector.16* %0, %class.Vector.16** %2, align 8
  %3 = load %class.Vector.16*, %class.Vector.16** %2, align 8
  %4 = getelementptr inbounds %class.Vector.16, %class.Vector.16* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %4, i32 0, i32 0
  %6 = load %struct.char_array*, %struct.char_array** %5, align 8
  %7 = bitcast %struct.char_array* %6 to %"class.Lexer::TunnelEnd"**
  ret %"class.Lexer::TunnelEnd"** %7
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr %"class.Lexer::TunnelEnd"** @_ZN6VectorIPN5Lexer9TunnelEndEE3endEv(%class.Vector.16*) #0 comdat align 2 {
  %2 = alloca %class.Vector.16*, align 8
  store %class.Vector.16* %0, %class.Vector.16** %2, align 8
  %3 = load %class.Vector.16*, %class.Vector.16** %2, align 8
  %4 = getelementptr inbounds %class.Vector.16, %class.Vector.16* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %4, i32 0, i32 0
  %6 = load %struct.char_array*, %struct.char_array** %5, align 8
  %7 = bitcast %struct.char_array* %6 to %"class.Lexer::TunnelEnd"**
  %8 = getelementptr inbounds %class.Vector.16, %class.Vector.16* %3, i32 0, i32 0
  %9 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %7, i64 %11
  ret %"class.Lexer::TunnelEnd"** %12
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr %"class.Lexer::TunnelEnd"* @_ZNK5Lexer9TunnelEnd4nextEv(%"class.Lexer::TunnelEnd"*) #0 comdat align 2 {
  %2 = alloca %"class.Lexer::TunnelEnd"*, align 8
  store %"class.Lexer::TunnelEnd"* %0, %"class.Lexer::TunnelEnd"** %2, align 8
  %3 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %2, align 8
  %4 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %3, i32 0, i32 5
  %5 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %4, align 8
  ret %"class.Lexer::TunnelEnd"* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN5Lexer9TunnelEndD2Ev(%"class.Lexer::TunnelEnd"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.Lexer::TunnelEnd"*, align 8
  store %"class.Lexer::TunnelEnd"* %0, %"class.Lexer::TunnelEnd"** %2, align 8
  %3 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %2, align 8
  %4 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %3, i32 0, i32 1
  call void @_ZN6VectorIN6Router4PortEED2Ev(%class.Vector.17* %4) #9
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6VectorIPN5Lexer9TunnelEndEE5clearEv(%class.Vector.16*) #2 comdat align 2 {
  %2 = alloca %class.Vector.16*, align 8
  store %class.Vector.16* %0, %class.Vector.16** %2, align 8
  %3 = load %class.Vector.16*, %class.Vector.16** %2, align 8
  %4 = getelementptr inbounds %class.Vector.16, %class.Vector.16* %3, i32 0, i32 0
  call void @_ZN13vector_memoryI18sized_array_memoryILm8EEE5clearEv(%class.vector_memory* %4)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN5Lexer10ParseStateD2Ev(%"struct.Lexer::ParseState"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.Lexer::ParseState"*, align 8
  store %"struct.Lexer::ParseState"* %0, %"struct.Lexer::ParseState"** %2, align 8
  %3 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %2, align 8
  %4 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %3, i32 0, i32 15
  call void @_ZN9HashTableI6StringiED2Ev(%class.HashTable* %4) #9
  %5 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %3, i32 0, i32 14
  call void @_ZN6StringD2Ev(%class.String* %5) #9
  %6 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %3, i32 0, i32 11
  call void @_ZN6VectorIiED2Ev(%class.Vector.5* %6) #9
  %7 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %3, i32 0, i32 2
  call void @_ZN6VectorIiED2Ev(%class.Vector.5* %7) #9
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6VectorI6StringE5clearEv(%class.Vector.0*) #2 comdat align 2 {
  %2 = alloca %class.Vector.0*, align 8
  store %class.Vector.0* %0, %class.Vector.0** %2, align 8
  %3 = load %class.Vector.0*, %class.Vector.0** %2, align 8
  %4 = getelementptr inbounds %class.Vector.0, %class.Vector.0* %3, i32 0, i32 0
  call void @_ZN13vector_memoryI18typed_array_memoryI6StringEE5clearEv(%class.vector_memory.1* %4)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dereferenceable(32) %class.Lexeme* @_ZN6LexemeaSEOS_(%class.Lexeme*, %class.Lexeme* dereferenceable(32)) #2 comdat align 2 {
  %3 = alloca %class.Lexeme*, align 8
  %4 = alloca %class.Lexeme*, align 8
  store %class.Lexeme* %0, %class.Lexeme** %3, align 8
  store %class.Lexeme* %1, %class.Lexeme** %4, align 8
  %5 = load %class.Lexeme*, %class.Lexeme** %3, align 8
  %6 = load %class.Lexeme*, %class.Lexeme** %4, align 8
  %7 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %6, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %5, i32 0, i32 0
  store i32 %8, i32* %9, align 8
  %10 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %5, i32 0, i32 1
  %11 = load %class.Lexeme*, %class.Lexeme** %4, align 8
  %12 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %11, i32 0, i32 1
  %13 = call dereferenceable(24) %class.String* @_ZN6StringaSEOS_(%class.String* %10, %class.String* dereferenceable(24) %12)
  ret %class.Lexeme* %5
}

; Function Attrs: noinline optnone uwtable
define void @_ZNK5Lexer14remaining_textEv(%class.String* noalias sret, %class.Lexer*) #2 align 2 {
  %3 = alloca %class.Lexer*, align 8
  store %class.Lexer* %1, %class.Lexer** %3, align 8
  %4 = load %class.Lexer*, %class.Lexer** %3, align 8
  %5 = getelementptr inbounds %class.Lexer, %class.Lexer* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %class.Lexer, %class.Lexer* %4, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %7, i32 0, i32 2
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %class.Lexer, %class.Lexer* %4, i32 0, i32 1
  %11 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %10, i32 0, i32 0
  %12 = call i8* @_ZNK6String3endEv(%class.String* %11)
  call void @_ZNK6String9substringEPKcS1_(%class.String* sret %0, %class.String* %6, i8* %9, i8* %12)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZNK6String9substringEPKcS1_(%class.String* noalias sret, %class.String*, i8*, i8*) #2 comdat align 2 {
  %5 = alloca %class.String*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  store %class.String* %1, %class.String** %5, align 8
  store i8* %2, i8** %6, align 8
  store i8* %3, i8** %7, align 8
  %8 = load %class.String*, %class.String** %5, align 8
  %9 = load i8*, i8** %6, align 8
  %10 = load i8*, i8** %7, align 8
  %11 = icmp ult i8* %9, %10
  br i1 %11, label %12, label %40

; <label>:12:                                     ; preds = %4
  %13 = load i8*, i8** %6, align 8
  %14 = getelementptr inbounds %class.String, %class.String* %8, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %14, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = icmp uge i8* %13, %16
  br i1 %17, label %18, label %40

; <label>:18:                                     ; preds = %12
  %19 = load i8*, i8** %7, align 8
  %20 = getelementptr inbounds %class.String, %class.String* %8, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %20, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %class.String, %class.String* %8, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %23, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %22, i64 %26
  %28 = icmp ule i8* %19, %27
  br i1 %28, label %29, label %40

; <label>:29:                                     ; preds = %18
  %30 = load i8*, i8** %6, align 8
  %31 = load i8*, i8** %7, align 8
  %32 = load i8*, i8** %6, align 8
  %33 = ptrtoint i8* %31 to i64
  %34 = ptrtoint i8* %32 to i64
  %35 = sub i64 %33, %34
  %36 = trunc i64 %35 to i32
  %37 = getelementptr inbounds %class.String, %class.String* %8, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %37, i32 0, i32 2
  %39 = load %"struct.String::memo_t"*, %"struct.String::memo_t"** %38, align 8
  call void @_ZN6StringC2EPKciPNS_6memo_tE(%class.String* %0, i8* %30, i32 %36, %"struct.String::memo_t"* %39)
  br label %41

; <label>:40:                                     ; preds = %18, %12, %4
  call void @_ZN6StringC2Ev(%class.String* %0)
  br label %41

; <label>:41:                                     ; preds = %40, %29
  ret void
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer18set_remaining_textERK6String(%class.Lexer*, %class.String* dereferenceable(24)) #2 align 2 {
  %3 = alloca %class.Lexer*, align 8
  %4 = alloca %class.String*, align 8
  store %class.Lexer* %0, %class.Lexer** %3, align 8
  store %class.String* %1, %class.String** %4, align 8
  %5 = load %class.Lexer*, %class.Lexer** %3, align 8
  %6 = load %class.String*, %class.String** %4, align 8
  %7 = getelementptr inbounds %class.Lexer, %class.Lexer* %5, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %7, i32 0, i32 0
  %9 = call dereferenceable(24) %class.String* @_ZN6StringaSERKS_(%class.String* %8, %class.String* dereferenceable(24) %6)
  %10 = load %class.String*, %class.String** %4, align 8
  %11 = call i8* @_ZNK6String5beginEv(%class.String* %10)
  %12 = getelementptr inbounds %class.Lexer, %class.Lexer* %5, i32 0, i32 1
  %13 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %12, i32 0, i32 2
  store i8* %11, i8** %13, align 8
  %14 = load %class.String*, %class.String** %4, align 8
  %15 = call i8* @_ZNK6String3endEv(%class.String* %14)
  %16 = getelementptr inbounds %class.Lexer, %class.Lexer* %5, i32 0, i32 1
  %17 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %16, i32 0, i32 1
  store i8* %15, i8** %17, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dereferenceable(24) %class.String* @_ZN6StringaSERKS_(%class.String*, %class.String* dereferenceable(24)) #2 comdat align 2 {
  %3 = alloca %class.String*, align 8
  %4 = alloca %class.String*, align 8
  store %class.String* %0, %class.String** %3, align 8
  store %class.String* %1, %class.String** %4, align 8
  %5 = load %class.String*, %class.String** %3, align 8
  %6 = load %class.String*, %class.String** %4, align 8
  %7 = icmp ne %class.String* %6, %5
  %8 = xor i1 %7, true
  %9 = xor i1 %8, true
  br i1 %9, label %10, label %12

; <label>:10:                                     ; preds = %2
  call void @_ZNK6String5derefEv(%class.String* %5)
  %11 = load %class.String*, %class.String** %4, align 8
  call void @_ZNK6String6assignERKS_(%class.String* %5, %class.String* dereferenceable(24) %11)
  br label %12

; <label>:12:                                     ; preds = %10, %2
  ret %class.String* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @_ZN5Lexer9FileState9skip_lineEPKc(%"struct.Lexer::FileState"*, i8*) #0 align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca %"struct.Lexer::FileState"*, align 8
  %5 = alloca i8*, align 8
  store %"struct.Lexer::FileState"* %0, %"struct.Lexer::FileState"** %4, align 8
  store i8* %1, i8** %5, align 8
  %6 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %4, align 8
  %7 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %6, i32 0, i32 5
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, 1
  store i32 %9, i32* %7, align 8
  br label %10

; <label>:10:                                     ; preds = %48, %2
  %11 = load i8*, i8** %5, align 8
  %12 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %6, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = icmp ult i8* %11, %13
  br i1 %14, label %15, label %51

; <label>:15:                                     ; preds = %10
  %16 = load i8*, i8** %5, align 8
  %17 = load i8, i8* %16, align 1
  %18 = sext i8 %17 to i32
  %19 = icmp eq i32 %18, 10
  br i1 %19, label %20, label %23

; <label>:20:                                     ; preds = %15
  %21 = load i8*, i8** %5, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 1
  store i8* %22, i8** %3, align 8
  br label %56

; <label>:23:                                     ; preds = %15
  %24 = load i8*, i8** %5, align 8
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %26, 13
  br i1 %27, label %28, label %46

; <label>:28:                                     ; preds = %23
  %29 = load i8*, i8** %5, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 1
  %31 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %6, i32 0, i32 1
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ult i8* %30, %32
  br i1 %33, label %34, label %43

; <label>:34:                                     ; preds = %28
  %35 = load i8*, i8** %5, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 1
  %37 = load i8, i8* %36, align 1
  %38 = sext i8 %37 to i32
  %39 = icmp eq i32 %38, 10
  br i1 %39, label %40, label %43

; <label>:40:                                     ; preds = %34
  %41 = load i8*, i8** %5, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 2
  store i8* %42, i8** %3, align 8
  br label %56

; <label>:43:                                     ; preds = %34, %28
  %44 = load i8*, i8** %5, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 1
  store i8* %45, i8** %3, align 8
  br label %56

; <label>:46:                                     ; preds = %23
  br label %47

; <label>:47:                                     ; preds = %46
  br label %48

; <label>:48:                                     ; preds = %47
  %49 = load i8*, i8** %5, align 8
  %50 = getelementptr inbounds i8, i8* %49, i32 1
  store i8* %50, i8** %5, align 8
  br label %10

; <label>:51:                                     ; preds = %10
  %52 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %6, i32 0, i32 5
  %53 = load i32, i32* %52, align 8
  %54 = add i32 %53, -1
  store i32 %54, i32* %52, align 8
  %55 = load i8*, i8** %5, align 8
  store i8* %55, i8** %3, align 8
  br label %56

; <label>:56:                                     ; preds = %51, %43, %40, %20
  %57 = load i8*, i8** %3, align 8
  ret i8* %57
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @_ZN5Lexer9FileState15skip_slash_starEPKc(%"struct.Lexer::FileState"*, i8*) #0 align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca %"struct.Lexer::FileState"*, align 8
  %5 = alloca i8*, align 8
  store %"struct.Lexer::FileState"* %0, %"struct.Lexer::FileState"** %4, align 8
  store i8* %1, i8** %5, align 8
  %6 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %4, align 8
  br label %7

; <label>:7:                                      ; preds = %68, %2
  %8 = load i8*, i8** %5, align 8
  %9 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %6, i32 0, i32 1
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %8, %10
  br i1 %11, label %12, label %71

; <label>:12:                                     ; preds = %7
  %13 = load i8*, i8** %5, align 8
  %14 = load i8, i8* %13, align 1
  %15 = sext i8 %14 to i32
  %16 = icmp eq i32 %15, 10
  br i1 %16, label %17, label %21

; <label>:17:                                     ; preds = %12
  %18 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %6, i32 0, i32 5
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %19, 1
  store i32 %20, i32* %18, align 8
  br label %67

; <label>:21:                                     ; preds = %12
  %22 = load i8*, i8** %5, align 8
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i32
  %25 = icmp eq i32 %24, 13
  br i1 %25, label %26, label %45

; <label>:26:                                     ; preds = %21
  %27 = load i8*, i8** %5, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 1
  %29 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %6, i32 0, i32 1
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ult i8* %28, %30
  br i1 %31, label %32, label %41

; <label>:32:                                     ; preds = %26
  %33 = load i8*, i8** %5, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 1
  %35 = load i8, i8* %34, align 1
  %36 = sext i8 %35 to i32
  %37 = icmp eq i32 %36, 10
  br i1 %37, label %38, label %41

; <label>:38:                                     ; preds = %32
  %39 = load i8*, i8** %5, align 8
  %40 = getelementptr inbounds i8, i8* %39, i32 1
  store i8* %40, i8** %5, align 8
  br label %41

; <label>:41:                                     ; preds = %38, %32, %26
  %42 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %6, i32 0, i32 5
  %43 = load i32, i32* %42, align 8
  %44 = add i32 %43, 1
  store i32 %44, i32* %42, align 8
  br label %66

; <label>:45:                                     ; preds = %21
  %46 = load i8*, i8** %5, align 8
  %47 = load i8, i8* %46, align 1
  %48 = sext i8 %47 to i32
  %49 = icmp eq i32 %48, 42
  br i1 %49, label %50, label %65

; <label>:50:                                     ; preds = %45
  %51 = load i8*, i8** %5, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 1
  %53 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %6, i32 0, i32 1
  %54 = load i8*, i8** %53, align 8
  %55 = icmp ult i8* %52, %54
  br i1 %55, label %56, label %65

; <label>:56:                                     ; preds = %50
  %57 = load i8*, i8** %5, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 1
  %59 = load i8, i8* %58, align 1
  %60 = sext i8 %59 to i32
  %61 = icmp eq i32 %60, 47
  br i1 %61, label %62, label %65

; <label>:62:                                     ; preds = %56
  %63 = load i8*, i8** %5, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 2
  store i8* %64, i8** %3, align 8
  br label %74

; <label>:65:                                     ; preds = %56, %50, %45
  br label %66

; <label>:66:                                     ; preds = %65, %41
  br label %67

; <label>:67:                                     ; preds = %66, %17
  br label %68

; <label>:68:                                     ; preds = %67
  %69 = load i8*, i8** %5, align 8
  %70 = getelementptr inbounds i8, i8* %69, i32 1
  store i8* %70, i8** %5, align 8
  br label %7

; <label>:71:                                     ; preds = %7
  %72 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %6, i32 0, i32 1
  %73 = load i8*, i8** %72, align 8
  store i8* %73, i8** %3, align 8
  br label %74

; <label>:74:                                     ; preds = %71, %62
  %75 = load i8*, i8** %3, align 8
  ret i8* %75
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @_ZN5Lexer9FileState20skip_backslash_angleEPKc(%"struct.Lexer::FileState"*, i8*) #0 align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca %"struct.Lexer::FileState"*, align 8
  %5 = alloca i8*, align 8
  store %"struct.Lexer::FileState"* %0, %"struct.Lexer::FileState"** %4, align 8
  store i8* %1, i8** %5, align 8
  %6 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %4, align 8
  br label %7

; <label>:7:                                      ; preds = %92, %2
  %8 = load i8*, i8** %5, align 8
  %9 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %6, i32 0, i32 1
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %8, %10
  br i1 %11, label %12, label %95

; <label>:12:                                     ; preds = %7
  %13 = load i8*, i8** %5, align 8
  %14 = load i8, i8* %13, align 1
  %15 = sext i8 %14 to i32
  %16 = icmp eq i32 %15, 10
  br i1 %16, label %17, label %21

; <label>:17:                                     ; preds = %12
  %18 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %6, i32 0, i32 5
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %19, 1
  store i32 %20, i32* %18, align 8
  br label %91

; <label>:21:                                     ; preds = %12
  %22 = load i8*, i8** %5, align 8
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i32
  %25 = icmp eq i32 %24, 13
  br i1 %25, label %26, label %45

; <label>:26:                                     ; preds = %21
  %27 = load i8*, i8** %5, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 1
  %29 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %6, i32 0, i32 1
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ult i8* %28, %30
  br i1 %31, label %32, label %41

; <label>:32:                                     ; preds = %26
  %33 = load i8*, i8** %5, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 1
  %35 = load i8, i8* %34, align 1
  %36 = sext i8 %35 to i32
  %37 = icmp eq i32 %36, 10
  br i1 %37, label %38, label %41

; <label>:38:                                     ; preds = %32
  %39 = load i8*, i8** %5, align 8
  %40 = getelementptr inbounds i8, i8* %39, i32 1
  store i8* %40, i8** %5, align 8
  br label %41

; <label>:41:                                     ; preds = %38, %32, %26
  %42 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %6, i32 0, i32 5
  %43 = load i32, i32* %42, align 8
  %44 = add i32 %43, 1
  store i32 %44, i32* %42, align 8
  br label %90

; <label>:45:                                     ; preds = %21
  %46 = load i8*, i8** %5, align 8
  %47 = load i8, i8* %46, align 1
  %48 = sext i8 %47 to i32
  %49 = icmp eq i32 %48, 47
  br i1 %49, label %50, label %80

; <label>:50:                                     ; preds = %45
  %51 = load i8*, i8** %5, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 1
  %53 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %6, i32 0, i32 1
  %54 = load i8*, i8** %53, align 8
  %55 = icmp ult i8* %52, %54
  br i1 %55, label %56, label %80

; <label>:56:                                     ; preds = %50
  %57 = load i8*, i8** %5, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 1
  %59 = load i8, i8* %58, align 1
  %60 = sext i8 %59 to i32
  %61 = icmp eq i32 %60, 47
  br i1 %61, label %62, label %67

; <label>:62:                                     ; preds = %56
  %63 = load i8*, i8** %5, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 2
  %65 = call i8* @_ZN5Lexer9FileState9skip_lineEPKc(%"struct.Lexer::FileState"* %6, i8* %64)
  %66 = getelementptr inbounds i8, i8* %65, i64 -1
  store i8* %66, i8** %5, align 8
  br label %79

; <label>:67:                                     ; preds = %56
  %68 = load i8*, i8** %5, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 1
  %70 = load i8, i8* %69, align 1
  %71 = sext i8 %70 to i32
  %72 = icmp eq i32 %71, 42
  br i1 %72, label %73, label %78

; <label>:73:                                     ; preds = %67
  %74 = load i8*, i8** %5, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 2
  %76 = call i8* @_ZN5Lexer9FileState15skip_slash_starEPKc(%"struct.Lexer::FileState"* %6, i8* %75)
  %77 = getelementptr inbounds i8, i8* %76, i64 -1
  store i8* %77, i8** %5, align 8
  br label %78

; <label>:78:                                     ; preds = %73, %67
  br label %79

; <label>:79:                                     ; preds = %78, %62
  br label %89

; <label>:80:                                     ; preds = %50, %45
  %81 = load i8*, i8** %5, align 8
  %82 = load i8, i8* %81, align 1
  %83 = sext i8 %82 to i32
  %84 = icmp eq i32 %83, 62
  br i1 %84, label %85, label %88

; <label>:85:                                     ; preds = %80
  %86 = load i8*, i8** %5, align 8
  %87 = getelementptr inbounds i8, i8* %86, i64 1
  store i8* %87, i8** %3, align 8
  br label %98

; <label>:88:                                     ; preds = %80
  br label %89

; <label>:89:                                     ; preds = %88, %79
  br label %90

; <label>:90:                                     ; preds = %89, %41
  br label %91

; <label>:91:                                     ; preds = %90, %17
  br label %92

; <label>:92:                                     ; preds = %91
  %93 = load i8*, i8** %5, align 8
  %94 = getelementptr inbounds i8, i8* %93, i32 1
  store i8* %94, i8** %5, align 8
  br label %7

; <label>:95:                                     ; preds = %7
  %96 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %6, i32 0, i32 1
  %97 = load i8*, i8** %96, align 8
  store i8* %97, i8** %3, align 8
  br label %98

; <label>:98:                                     ; preds = %95, %85
  %99 = load i8*, i8** %3, align 8
  ret i8* %99
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @_ZN5Lexer9FileState10skip_quoteEPKcc(%"struct.Lexer::FileState"*, i8*, i8 signext) #0 align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca %"struct.Lexer::FileState"*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8, align 1
  store %"struct.Lexer::FileState"* %0, %"struct.Lexer::FileState"** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8 %2, i8* %7, align 1
  %8 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %5, align 8
  br label %9

; <label>:9:                                      ; preds = %91, %3
  %10 = load i8*, i8** %6, align 8
  %11 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %8, i32 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp ult i8* %10, %12
  br i1 %13, label %14, label %94

; <label>:14:                                     ; preds = %9
  %15 = load i8*, i8** %6, align 8
  %16 = load i8, i8* %15, align 1
  %17 = sext i8 %16 to i32
  %18 = icmp eq i32 %17, 10
  br i1 %18, label %19, label %23

; <label>:19:                                     ; preds = %14
  %20 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %8, i32 0, i32 5
  %21 = load i32, i32* %20, align 8
  %22 = add i32 %21, 1
  store i32 %22, i32* %20, align 8
  br label %90

; <label>:23:                                     ; preds = %14
  %24 = load i8*, i8** %6, align 8
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %26, 13
  br i1 %27, label %28, label %47

; <label>:28:                                     ; preds = %23
  %29 = load i8*, i8** %6, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 1
  %31 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %8, i32 0, i32 1
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ult i8* %30, %32
  br i1 %33, label %34, label %43

; <label>:34:                                     ; preds = %28
  %35 = load i8*, i8** %6, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 1
  %37 = load i8, i8* %36, align 1
  %38 = sext i8 %37 to i32
  %39 = icmp eq i32 %38, 10
  br i1 %39, label %40, label %43

; <label>:40:                                     ; preds = %34
  %41 = load i8*, i8** %6, align 8
  %42 = getelementptr inbounds i8, i8* %41, i32 1
  store i8* %42, i8** %6, align 8
  br label %43

; <label>:43:                                     ; preds = %40, %34, %28
  %44 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %8, i32 0, i32 5
  %45 = load i32, i32* %44, align 8
  %46 = add i32 %45, 1
  store i32 %46, i32* %44, align 8
  br label %89

; <label>:47:                                     ; preds = %23
  %48 = load i8*, i8** %6, align 8
  %49 = load i8, i8* %48, align 1
  %50 = sext i8 %49 to i32
  %51 = icmp eq i32 %50, 92
  br i1 %51, label %52, label %77

; <label>:52:                                     ; preds = %47
  %53 = load i8, i8* %7, align 1
  %54 = sext i8 %53 to i32
  %55 = icmp eq i32 %54, 34
  br i1 %55, label %56, label %77

; <label>:56:                                     ; preds = %52
  %57 = load i8*, i8** %6, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 1
  %59 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %8, i32 0, i32 1
  %60 = load i8*, i8** %59, align 8
  %61 = icmp ult i8* %58, %60
  br i1 %61, label %62, label %77

; <label>:62:                                     ; preds = %56
  %63 = load i8*, i8** %6, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 1
  %65 = load i8, i8* %64, align 1
  %66 = sext i8 %65 to i32
  %67 = icmp eq i32 %66, 60
  br i1 %67, label %68, label %73

; <label>:68:                                     ; preds = %62
  %69 = load i8*, i8** %6, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 2
  %71 = call i8* @_ZN5Lexer9FileState20skip_backslash_angleEPKc(%"struct.Lexer::FileState"* %8, i8* %70)
  %72 = getelementptr inbounds i8, i8* %71, i64 -1
  store i8* %72, i8** %6, align 8
  br label %76

; <label>:73:                                     ; preds = %62
  %74 = load i8*, i8** %6, align 8
  %75 = getelementptr inbounds i8, i8* %74, i32 1
  store i8* %75, i8** %6, align 8
  br label %76

; <label>:76:                                     ; preds = %73, %68
  br label %88

; <label>:77:                                     ; preds = %56, %52, %47
  %78 = load i8*, i8** %6, align 8
  %79 = load i8, i8* %78, align 1
  %80 = sext i8 %79 to i32
  %81 = load i8, i8* %7, align 1
  %82 = sext i8 %81 to i32
  %83 = icmp eq i32 %80, %82
  br i1 %83, label %84, label %87

; <label>:84:                                     ; preds = %77
  %85 = load i8*, i8** %6, align 8
  %86 = getelementptr inbounds i8, i8* %85, i64 1
  store i8* %86, i8** %4, align 8
  br label %97

; <label>:87:                                     ; preds = %77
  br label %88

; <label>:88:                                     ; preds = %87, %76
  br label %89

; <label>:89:                                     ; preds = %88, %43
  br label %90

; <label>:90:                                     ; preds = %89, %19
  br label %91

; <label>:91:                                     ; preds = %90
  %92 = load i8*, i8** %6, align 8
  %93 = getelementptr inbounds i8, i8* %92, i32 1
  store i8* %93, i8** %6, align 8
  br label %9

; <label>:94:                                     ; preds = %9
  %95 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %8, i32 0, i32 1
  %96 = load i8*, i8** %95, align 8
  store i8* %96, i8** %4, align 8
  br label %97

; <label>:97:                                     ; preds = %94, %84
  %98 = load i8*, i8** %4, align 8
  ret i8* %98
}

; Function Attrs: noinline optnone uwtable
define i8* @_ZN5Lexer9FileState22process_line_directiveEPKcPS_(%"struct.Lexer::FileState"*, i8*, %class.Lexer*) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i8*, align 8
  %5 = alloca %"struct.Lexer::FileState"*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %class.Lexer*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %class.String, align 8
  %10 = alloca %class.String, align 8
  %11 = alloca %class.String, align 8
  %12 = alloca i8*
  %13 = alloca i32
  store %"struct.Lexer::FileState"* %0, %"struct.Lexer::FileState"** %5, align 8
  store i8* %1, i8** %6, align 8
  store %class.Lexer* %2, %class.Lexer** %7, align 8
  %14 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %5, align 8
  %15 = load i8*, i8** %6, align 8
  %16 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %16, i8** %6, align 8
  br label %17

; <label>:17:                                     ; preds = %37, %3
  %18 = load i8*, i8** %6, align 8
  %19 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %14, i32 0, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = icmp ult i8* %18, %20
  br i1 %21, label %22, label %34

; <label>:22:                                     ; preds = %17
  %23 = load i8*, i8** %6, align 8
  %24 = load i8, i8* %23, align 1
  %25 = sext i8 %24 to i32
  %26 = icmp eq i32 %25, 32
  br i1 %26, label %32, label %27

; <label>:27:                                     ; preds = %22
  %28 = load i8*, i8** %6, align 8
  %29 = load i8, i8* %28, align 1
  %30 = sext i8 %29 to i32
  %31 = icmp eq i32 %30, 9
  br label %32

; <label>:32:                                     ; preds = %27, %22
  %33 = phi i1 [ true, %22 ], [ %31, %27 ]
  br label %34

; <label>:34:                                     ; preds = %32, %17
  %35 = phi i1 [ false, %17 ], [ %33, %32 ]
  br i1 %35, label %36, label %40

; <label>:36:                                     ; preds = %34
  br label %37

; <label>:37:                                     ; preds = %36
  %38 = load i8*, i8** %6, align 8
  %39 = getelementptr inbounds i8, i8* %38, i32 1
  store i8* %39, i8** %6, align 8
  br label %17

; <label>:40:                                     ; preds = %34
  %41 = load i8*, i8** %6, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 4
  %43 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %14, i32 0, i32 1
  %44 = load i8*, i8** %43, align 8
  %45 = icmp ult i8* %42, %44
  br i1 %45, label %46, label %108

; <label>:46:                                     ; preds = %40
  %47 = load i8*, i8** %6, align 8
  %48 = load i8, i8* %47, align 1
  %49 = sext i8 %48 to i32
  %50 = icmp eq i32 %49, 108
  br i1 %50, label %51, label %108

; <label>:51:                                     ; preds = %46
  %52 = load i8*, i8** %6, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 1
  %54 = load i8, i8* %53, align 1
  %55 = sext i8 %54 to i32
  %56 = icmp eq i32 %55, 105
  br i1 %56, label %57, label %108

; <label>:57:                                     ; preds = %51
  %58 = load i8*, i8** %6, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 2
  %60 = load i8, i8* %59, align 1
  %61 = sext i8 %60 to i32
  %62 = icmp eq i32 %61, 110
  br i1 %62, label %63, label %108

; <label>:63:                                     ; preds = %57
  %64 = load i8*, i8** %6, align 8
  %65 = getelementptr inbounds i8, i8* %64, i64 3
  %66 = load i8, i8* %65, align 1
  %67 = sext i8 %66 to i32
  %68 = icmp eq i32 %67, 101
  br i1 %68, label %69, label %108

; <label>:69:                                     ; preds = %63
  %70 = load i8*, i8** %6, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 4
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %73, 32
  br i1 %74, label %81, label %75

; <label>:75:                                     ; preds = %69
  %76 = load i8*, i8** %6, align 8
  %77 = getelementptr inbounds i8, i8* %76, i64 4
  %78 = load i8, i8* %77, align 1
  %79 = sext i8 %78 to i32
  %80 = icmp eq i32 %79, 9
  br i1 %80, label %81, label %108

; <label>:81:                                     ; preds = %75, %69
  %82 = load i8*, i8** %6, align 8
  %83 = getelementptr inbounds i8, i8* %82, i64 5
  store i8* %83, i8** %6, align 8
  br label %84

; <label>:84:                                     ; preds = %104, %81
  %85 = load i8*, i8** %6, align 8
  %86 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %14, i32 0, i32 1
  %87 = load i8*, i8** %86, align 8
  %88 = icmp ult i8* %85, %87
  br i1 %88, label %89, label %101

; <label>:89:                                     ; preds = %84
  %90 = load i8*, i8** %6, align 8
  %91 = load i8, i8* %90, align 1
  %92 = sext i8 %91 to i32
  %93 = icmp eq i32 %92, 32
  br i1 %93, label %99, label %94

; <label>:94:                                     ; preds = %89
  %95 = load i8*, i8** %6, align 8
  %96 = load i8, i8* %95, align 1
  %97 = sext i8 %96 to i32
  %98 = icmp eq i32 %97, 9
  br label %99

; <label>:99:                                     ; preds = %94, %89
  %100 = phi i1 [ true, %89 ], [ %98, %94 ]
  br label %101

; <label>:101:                                    ; preds = %99, %84
  %102 = phi i1 [ false, %84 ], [ %100, %99 ]
  br i1 %102, label %103, label %107

; <label>:103:                                    ; preds = %101
  br label %104

; <label>:104:                                    ; preds = %103
  %105 = load i8*, i8** %6, align 8
  %106 = getelementptr inbounds i8, i8* %105, i32 1
  store i8* %106, i8** %6, align 8
  br label %84

; <label>:107:                                    ; preds = %101
  br label %108

; <label>:108:                                    ; preds = %107, %75, %63, %57, %51, %46, %40
  %109 = load i8*, i8** %6, align 8
  %110 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %14, i32 0, i32 1
  %111 = load i8*, i8** %110, align 8
  %112 = icmp uge i8* %109, %111
  br i1 %112, label %119, label %113

; <label>:113:                                    ; preds = %108
  %114 = load i8*, i8** %6, align 8
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  %117 = call i32 @isdigit(i32 %116) #13
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %124, label %119

; <label>:119:                                    ; preds = %113, %108
  %120 = load %class.Lexer*, %class.Lexer** %7, align 8
  %121 = call i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %120, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0))
  %122 = load i8*, i8** %6, align 8
  %123 = call i8* @_ZN5Lexer9FileState9skip_lineEPKc(%"struct.Lexer::FileState"* %14, i8* %122)
  store i8* %123, i8** %4, align 8
  br label %319

; <label>:124:                                    ; preds = %113
  %125 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %14, i32 0, i32 5
  store i32 0, i32* %125, align 8
  br label %126

; <label>:126:                                    ; preds = %149, %124
  %127 = load i8*, i8** %6, align 8
  %128 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %14, i32 0, i32 1
  %129 = load i8*, i8** %128, align 8
  %130 = icmp ult i8* %127, %129
  br i1 %130, label %131, label %137

; <label>:131:                                    ; preds = %126
  %132 = load i8*, i8** %6, align 8
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i32
  %135 = call i32 @isdigit(i32 %134) #13
  %136 = icmp ne i32 %135, 0
  br label %137

; <label>:137:                                    ; preds = %131, %126
  %138 = phi i1 [ false, %126 ], [ %136, %131 ]
  br i1 %138, label %139, label %152

; <label>:139:                                    ; preds = %137
  %140 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %14, i32 0, i32 5
  %141 = load i32, i32* %140, align 8
  %142 = mul i32 %141, 10
  %143 = load i8*, i8** %6, align 8
  %144 = load i8, i8* %143, align 1
  %145 = sext i8 %144 to i32
  %146 = add i32 %142, %145
  %147 = sub i32 %146, 48
  %148 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %14, i32 0, i32 5
  store i32 %147, i32* %148, align 8
  br label %149

; <label>:149:                                    ; preds = %139
  %150 = load i8*, i8** %6, align 8
  %151 = getelementptr inbounds i8, i8* %150, i32 1
  store i8* %151, i8** %6, align 8
  br label %126

; <label>:152:                                    ; preds = %137
  %153 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %14, i32 0, i32 5
  %154 = load i32, i32* %153, align 8
  %155 = add i32 %154, -1
  store i32 %155, i32* %153, align 8
  br label %156

; <label>:156:                                    ; preds = %176, %152
  %157 = load i8*, i8** %6, align 8
  %158 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %14, i32 0, i32 1
  %159 = load i8*, i8** %158, align 8
  %160 = icmp ult i8* %157, %159
  br i1 %160, label %161, label %173

; <label>:161:                                    ; preds = %156
  %162 = load i8*, i8** %6, align 8
  %163 = load i8, i8* %162, align 1
  %164 = sext i8 %163 to i32
  %165 = icmp eq i32 %164, 32
  br i1 %165, label %171, label %166

; <label>:166:                                    ; preds = %161
  %167 = load i8*, i8** %6, align 8
  %168 = load i8, i8* %167, align 1
  %169 = sext i8 %168 to i32
  %170 = icmp eq i32 %169, 9
  br label %171

; <label>:171:                                    ; preds = %166, %161
  %172 = phi i1 [ true, %161 ], [ %170, %166 ]
  br label %173

; <label>:173:                                    ; preds = %171, %156
  %174 = phi i1 [ false, %156 ], [ %172, %171 ]
  br i1 %174, label %175, label %179

; <label>:175:                                    ; preds = %173
  br label %176

; <label>:176:                                    ; preds = %175
  %177 = load i8*, i8** %6, align 8
  %178 = getelementptr inbounds i8, i8* %177, i32 1
  store i8* %178, i8** %6, align 8
  br label %156

; <label>:179:                                    ; preds = %173
  %180 = load i8*, i8** %6, align 8
  %181 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %14, i32 0, i32 1
  %182 = load i8*, i8** %181, align 8
  %183 = icmp ult i8* %180, %182
  br i1 %183, label %184, label %275

; <label>:184:                                    ; preds = %179
  %185 = load i8*, i8** %6, align 8
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = icmp eq i32 %187, 34
  br i1 %188, label %189, label %275

; <label>:189:                                    ; preds = %184
  %190 = load i8*, i8** %6, align 8
  store i8* %190, i8** %8, align 8
  %191 = load i8*, i8** %6, align 8
  %192 = getelementptr inbounds i8, i8* %191, i32 1
  store i8* %192, i8** %6, align 8
  br label %193

; <label>:193:                                    ; preds = %242, %189
  %194 = load i8*, i8** %6, align 8
  %195 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %14, i32 0, i32 1
  %196 = load i8*, i8** %195, align 8
  %197 = icmp ult i8* %194, %196
  br i1 %197, label %198, label %213

; <label>:198:                                    ; preds = %193
  %199 = load i8*, i8** %6, align 8
  %200 = load i8, i8* %199, align 1
  %201 = sext i8 %200 to i32
  %202 = icmp ne i32 %201, 34
  br i1 %202, label %203, label %213

; <label>:203:                                    ; preds = %198
  %204 = load i8*, i8** %6, align 8
  %205 = load i8, i8* %204, align 1
  %206 = sext i8 %205 to i32
  %207 = icmp ne i32 %206, 10
  br i1 %207, label %208, label %213

; <label>:208:                                    ; preds = %203
  %209 = load i8*, i8** %6, align 8
  %210 = load i8, i8* %209, align 1
  %211 = sext i8 %210 to i32
  %212 = icmp ne i32 %211, 13
  br label %213

; <label>:213:                                    ; preds = %208, %203, %198, %193
  %214 = phi i1 [ false, %203 ], [ false, %198 ], [ false, %193 ], [ %212, %208 ]
  br i1 %214, label %215, label %245

; <label>:215:                                    ; preds = %213
  %216 = load i8*, i8** %6, align 8
  %217 = load i8, i8* %216, align 1
  %218 = sext i8 %217 to i32
  %219 = icmp eq i32 %218, 92
  br i1 %219, label %220, label %241

; <label>:220:                                    ; preds = %215
  %221 = load i8*, i8** %6, align 8
  %222 = getelementptr inbounds i8, i8* %221, i64 1
  %223 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %14, i32 0, i32 1
  %224 = load i8*, i8** %223, align 8
  %225 = icmp ult i8* %222, %224
  br i1 %225, label %226, label %241

; <label>:226:                                    ; preds = %220
  %227 = load i8*, i8** %6, align 8
  %228 = getelementptr inbounds i8, i8* %227, i64 1
  %229 = load i8, i8* %228, align 1
  %230 = sext i8 %229 to i32
  %231 = icmp ne i32 %230, 10
  br i1 %231, label %232, label %241

; <label>:232:                                    ; preds = %226
  %233 = load i8*, i8** %6, align 8
  %234 = getelementptr inbounds i8, i8* %233, i64 1
  %235 = load i8, i8* %234, align 1
  %236 = sext i8 %235 to i32
  %237 = icmp ne i32 %236, 13
  br i1 %237, label %238, label %241

; <label>:238:                                    ; preds = %232
  %239 = load i8*, i8** %6, align 8
  %240 = getelementptr inbounds i8, i8* %239, i32 1
  store i8* %240, i8** %6, align 8
  br label %241

; <label>:241:                                    ; preds = %238, %232, %226, %220, %215
  br label %242

; <label>:242:                                    ; preds = %241
  %243 = load i8*, i8** %6, align 8
  %244 = getelementptr inbounds i8, i8* %243, i32 1
  store i8* %244, i8** %6, align 8
  br label %193

; <label>:245:                                    ; preds = %213
  %246 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %14, i32 0, i32 0
  %247 = load i8*, i8** %8, align 8
  %248 = load i8*, i8** %6, align 8
  call void @_ZNK6String9substringEPKcS1_(%class.String* sret %11, %class.String* %246, i8* %247, i8* %248)
  invoke void @_Zpl6StringPKc(%class.String* sret %10, %class.String* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i32 0, i32 0))
          to label %249 unwind label %260

; <label>:249:                                    ; preds = %245
  invoke void @_Z10cp_unquoteRK6String(%class.String* sret %9, %class.String* dereferenceable(24) %10)
          to label %250 unwind label %264

; <label>:250:                                    ; preds = %249
  %251 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %14, i32 0, i32 3
  %252 = invoke dereferenceable(24) %class.String* @_ZN6StringaSEOS_(%class.String* %251, %class.String* dereferenceable(24) %9)
          to label %253 unwind label %268

; <label>:253:                                    ; preds = %250
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  %254 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %14, i32 0, i32 3
  %255 = call zeroext i1 @_ZNK6StringntEv(%class.String* %254)
  br i1 %255, label %256, label %274

; <label>:256:                                    ; preds = %253
  %257 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %14, i32 0, i32 4
  %258 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %14, i32 0, i32 3
  %259 = call dereferenceable(24) %class.String* @_ZN6StringaSERKS_(%class.String* %258, %class.String* dereferenceable(24) %257)
  br label %274

; <label>:260:                                    ; preds = %245
  %261 = landingpad { i8*, i32 }
          cleanup
  %262 = extractvalue { i8*, i32 } %261, 0
  store i8* %262, i8** %12, align 8
  %263 = extractvalue { i8*, i32 } %261, 1
  store i32 %263, i32* %13, align 4
  br label %273

; <label>:264:                                    ; preds = %249
  %265 = landingpad { i8*, i32 }
          cleanup
  %266 = extractvalue { i8*, i32 } %265, 0
  store i8* %266, i8** %12, align 8
  %267 = extractvalue { i8*, i32 } %265, 1
  store i32 %267, i32* %13, align 4
  br label %272

; <label>:268:                                    ; preds = %250
  %269 = landingpad { i8*, i32 }
          cleanup
  %270 = extractvalue { i8*, i32 } %269, 0
  store i8* %270, i8** %12, align 8
  %271 = extractvalue { i8*, i32 } %269, 1
  store i32 %271, i32* %13, align 4
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  br label %272

; <label>:272:                                    ; preds = %268, %264
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  br label %273

; <label>:273:                                    ; preds = %272, %260
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  br label %321

; <label>:274:                                    ; preds = %256, %253
  br label %275

; <label>:275:                                    ; preds = %274, %184, %179
  br label %276

; <label>:276:                                    ; preds = %294, %275
  %277 = load i8*, i8** %6, align 8
  %278 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %14, i32 0, i32 1
  %279 = load i8*, i8** %278, align 8
  %280 = icmp ult i8* %277, %279
  br i1 %280, label %281, label %291

; <label>:281:                                    ; preds = %276
  %282 = load i8*, i8** %6, align 8
  %283 = load i8, i8* %282, align 1
  %284 = sext i8 %283 to i32
  %285 = icmp ne i32 %284, 10
  br i1 %285, label %286, label %291

; <label>:286:                                    ; preds = %281
  %287 = load i8*, i8** %6, align 8
  %288 = load i8, i8* %287, align 1
  %289 = sext i8 %288 to i32
  %290 = icmp ne i32 %289, 13
  br label %291

; <label>:291:                                    ; preds = %286, %281, %276
  %292 = phi i1 [ false, %281 ], [ false, %276 ], [ %290, %286 ]
  br i1 %292, label %293, label %297

; <label>:293:                                    ; preds = %291
  br label %294

; <label>:294:                                    ; preds = %293
  %295 = load i8*, i8** %6, align 8
  %296 = getelementptr inbounds i8, i8* %295, i32 1
  store i8* %296, i8** %6, align 8
  br label %276

; <label>:297:                                    ; preds = %291
  %298 = load i8*, i8** %6, align 8
  %299 = getelementptr inbounds i8, i8* %298, i64 1
  %300 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %14, i32 0, i32 1
  %301 = load i8*, i8** %300, align 8
  %302 = icmp ult i8* %299, %301
  br i1 %302, label %303, label %317

; <label>:303:                                    ; preds = %297
  %304 = load i8*, i8** %6, align 8
  %305 = load i8, i8* %304, align 1
  %306 = sext i8 %305 to i32
  %307 = icmp eq i32 %306, 13
  br i1 %307, label %308, label %317

; <label>:308:                                    ; preds = %303
  %309 = load i8*, i8** %6, align 8
  %310 = getelementptr inbounds i8, i8* %309, i64 1
  %311 = load i8, i8* %310, align 1
  %312 = sext i8 %311 to i32
  %313 = icmp eq i32 %312, 10
  br i1 %313, label %314, label %317

; <label>:314:                                    ; preds = %308
  %315 = load i8*, i8** %6, align 8
  %316 = getelementptr inbounds i8, i8* %315, i32 1
  store i8* %316, i8** %6, align 8
  br label %317

; <label>:317:                                    ; preds = %314, %308, %303, %297
  %318 = load i8*, i8** %6, align 8
  store i8* %318, i8** %4, align 8
  br label %319

; <label>:319:                                    ; preds = %317, %119
  %320 = load i8*, i8** %4, align 8
  ret i8* %320

; <label>:321:                                    ; preds = %273
  %322 = load i8*, i8** %12, align 8
  %323 = load i32, i32* %13, align 4
  %324 = insertvalue { i8*, i32 } undef, i8* %322, 0
  %325 = insertvalue { i8*, i32 } %324, i32 %323, 1
  resume { i8*, i32 } %325
}

; Function Attrs: nounwind readonly
declare i32 @isdigit(i32) #5

; Function Attrs: noinline optnone uwtable
define i32 @_ZN5Lexer6lerrorEPKcz(%class.Lexer*, i8*, ...) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.Lexer*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca [1 x %struct.__va_list_tag], align 16
  %6 = alloca %class.String, align 8
  %7 = alloca %class.String, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %class.Lexer* %0, %class.Lexer** %3, align 8
  store i8* %1, i8** %4, align 8
  %10 = load %class.Lexer*, %class.Lexer** %3, align 8
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i32 0, i32 0
  %12 = bitcast %struct.__va_list_tag* %11 to i8*
  call void @llvm.va_start(i8* %12)
  %13 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 19
  %14 = load %class.ErrorHandler*, %class.ErrorHandler** %13, align 8
  %15 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 1
  call void @_ZNK5Lexer9FileState8landmarkEv(%class.String* sret %6, %"struct.Lexer::FileState"* %15)
  invoke void @_ZN6StringC2EPKc(%class.String* %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN12ErrorHandler7e_errorE, i32 0, i32 0))
          to label %16 unwind label %23

; <label>:16:                                     ; preds = %2
  %17 = load i8*, i8** %4, align 8
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i32 0, i32 0
  %19 = invoke i32 @_ZN12ErrorHandler8xmessageERK6StringS2_PKcP13__va_list_tag(%class.ErrorHandler* %14, %class.String* dereferenceable(24) %6, %class.String* dereferenceable(24) %7, i8* %17, %struct.__va_list_tag* %18)
          to label %20 unwind label %27

; <label>:20:                                     ; preds = %16
  call void @_ZN6StringD2Ev(%class.String* %7) #9
  call void @_ZN6StringD2Ev(%class.String* %6) #9
  %21 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i32 0, i32 0
  %22 = bitcast %struct.__va_list_tag* %21 to i8*
  call void @llvm.va_end(i8* %22)
  ret i32 -1

; <label>:23:                                     ; preds = %2
  %24 = landingpad { i8*, i32 }
          cleanup
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %8, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %9, align 4
  br label %31

; <label>:27:                                     ; preds = %16
  %28 = landingpad { i8*, i32 }
          cleanup
  %29 = extractvalue { i8*, i32 } %28, 0
  store i8* %29, i8** %8, align 8
  %30 = extractvalue { i8*, i32 } %28, 1
  store i32 %30, i32* %9, align 4
  call void @_ZN6StringD2Ev(%class.String* %7) #9
  br label %31

; <label>:31:                                     ; preds = %27, %23
  call void @_ZN6StringD2Ev(%class.String* %6) #9
  br label %32

; <label>:32:                                     ; preds = %31
  %33 = load i8*, i8** %8, align 8
  %34 = load i32, i32* %9, align 4
  %35 = insertvalue { i8*, i32 } undef, i8* %33, 0
  %36 = insertvalue { i8*, i32 } %35, i32 %34, 1
  resume { i8*, i32 } %36
}

declare void @_Z10cp_unquoteRK6String(%class.String* sret, %class.String* dereferenceable(24)) #3

; Function Attrs: noinline optnone uwtable
define linkonce_odr dereferenceable(24) %class.String* @_ZN6StringaSEOS_(%class.String*, %class.String* dereferenceable(24)) #2 comdat align 2 {
  %3 = alloca %class.String*, align 8
  %4 = alloca %class.String*, align 8
  store %class.String* %0, %class.String** %3, align 8
  store %class.String* %1, %class.String** %4, align 8
  %5 = load %class.String*, %class.String** %3, align 8
  call void @_ZNK6String5derefEv(%class.String* %5)
  %6 = load %class.String*, %class.String** %4, align 8
  %7 = getelementptr inbounds %class.String, %class.String* %6, i32 0, i32 0
  %8 = getelementptr inbounds %class.String, %class.String* %5, i32 0, i32 0
  %9 = bitcast %"struct.String::rep_t"* %8 to i8*
  %10 = bitcast %"struct.String::rep_t"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 24, i32 8, i1 false)
  %11 = load %class.String*, %class.String** %4, align 8
  %12 = getelementptr inbounds %class.String, %class.String* %11, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %12, i32 0, i32 2
  store %"struct.String::memo_t"* null, %"struct.String::memo_t"** %13, align 8
  ret %class.String* %5
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr zeroext i1 @_ZNK6StringntEv(%class.String*) #2 comdat align 2 {
  %2 = alloca %class.String*, align 8
  store %class.String* %0, %class.String** %2, align 8
  %3 = load %class.String*, %class.String** %2, align 8
  %4 = call zeroext i1 @_ZNK6String5emptyEv(%class.String* %3)
  ret i1 %4
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer9FileState11next_lexemeEPS_(%class.Lexeme* noalias sret, %"struct.Lexer::FileState"*, %class.Lexer*) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.Lexer::FileState"*, align 8
  %5 = alloca %class.Lexer*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %class.String, align 8
  %9 = alloca i8*
  %10 = alloca i32
  %11 = alloca i32
  %12 = alloca %class.String, align 8
  %13 = alloca %class.String, align 8
  %14 = alloca %class.String, align 8
  %15 = alloca %class.String, align 8
  %16 = alloca %class.String, align 8
  %17 = alloca %class.String, align 8
  %18 = alloca %class.String, align 8
  store %"struct.Lexer::FileState"* %1, %"struct.Lexer::FileState"** %4, align 8
  store %class.Lexer* %2, %class.Lexer** %5, align 8
  %19 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %4, align 8
  %20 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 2
  %21 = load i8*, i8** %20, align 8
  store i8* %21, i8** %6, align 8
  br label %22

; <label>:22:                                     ; preds = %3, %145
  br label %23

; <label>:23:                                     ; preds = %70, %22
  %24 = load i8*, i8** %6, align 8
  %25 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 1
  %26 = load i8*, i8** %25, align 8
  %27 = icmp ult i8* %24, %26
  br i1 %27, label %28, label %34

; <label>:28:                                     ; preds = %23
  %29 = load i8*, i8** %6, align 8
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = call i32 @isspace(i32 %31) #13
  %33 = icmp ne i32 %32, 0
  br label %34

; <label>:34:                                     ; preds = %28, %23
  %35 = phi i1 [ false, %23 ], [ %33, %28 ]
  br i1 %35, label %36, label %73

; <label>:36:                                     ; preds = %34
  %37 = load i8*, i8** %6, align 8
  %38 = load i8, i8* %37, align 1
  %39 = sext i8 %38 to i32
  %40 = icmp eq i32 %39, 10
  br i1 %40, label %41, label %45

; <label>:41:                                     ; preds = %36
  %42 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 5
  %43 = load i32, i32* %42, align 8
  %44 = add i32 %43, 1
  store i32 %44, i32* %42, align 8
  br label %70

; <label>:45:                                     ; preds = %36
  %46 = load i8*, i8** %6, align 8
  %47 = load i8, i8* %46, align 1
  %48 = sext i8 %47 to i32
  %49 = icmp eq i32 %48, 13
  br i1 %49, label %50, label %69

; <label>:50:                                     ; preds = %45
  %51 = load i8*, i8** %6, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 1
  %53 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 1
  %54 = load i8*, i8** %53, align 8
  %55 = icmp ult i8* %52, %54
  br i1 %55, label %56, label %65

; <label>:56:                                     ; preds = %50
  %57 = load i8*, i8** %6, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 1
  %59 = load i8, i8* %58, align 1
  %60 = sext i8 %59 to i32
  %61 = icmp eq i32 %60, 10
  br i1 %61, label %62, label %65

; <label>:62:                                     ; preds = %56
  %63 = load i8*, i8** %6, align 8
  %64 = getelementptr inbounds i8, i8* %63, i32 1
  store i8* %64, i8** %6, align 8
  br label %65

; <label>:65:                                     ; preds = %62, %56, %50
  %66 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 5
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 1
  store i32 %68, i32* %66, align 8
  br label %69

; <label>:69:                                     ; preds = %65, %45
  br label %70

; <label>:70:                                     ; preds = %69, %41
  %71 = load i8*, i8** %6, align 8
  %72 = getelementptr inbounds i8, i8* %71, i32 1
  store i8* %72, i8** %6, align 8
  br label %23

; <label>:73:                                     ; preds = %34
  %74 = load i8*, i8** %6, align 8
  %75 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 1
  %76 = load i8*, i8** %75, align 8
  %77 = icmp uge i8* %74, %76
  br i1 %77, label %78, label %82

; <label>:78:                                     ; preds = %73
  %79 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 1
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 2
  store i8* %80, i8** %81, align 8
  call void @_ZN6LexemeC2Ev(%class.Lexeme* %0)
  br label %476

; <label>:82:                                     ; preds = %73
  %83 = load i8*, i8** %6, align 8
  %84 = load i8, i8* %83, align 1
  %85 = sext i8 %84 to i32
  %86 = icmp eq i32 %85, 47
  br i1 %86, label %87, label %116

; <label>:87:                                     ; preds = %82
  %88 = load i8*, i8** %6, align 8
  %89 = getelementptr inbounds i8, i8* %88, i64 1
  %90 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 1
  %91 = load i8*, i8** %90, align 8
  %92 = icmp ult i8* %89, %91
  br i1 %92, label %93, label %116

; <label>:93:                                     ; preds = %87
  %94 = load i8*, i8** %6, align 8
  %95 = getelementptr inbounds i8, i8* %94, i64 1
  %96 = load i8, i8* %95, align 1
  %97 = sext i8 %96 to i32
  %98 = icmp eq i32 %97, 47
  br i1 %98, label %99, label %103

; <label>:99:                                     ; preds = %93
  %100 = load i8*, i8** %6, align 8
  %101 = getelementptr inbounds i8, i8* %100, i64 2
  %102 = call i8* @_ZN5Lexer9FileState9skip_lineEPKc(%"struct.Lexer::FileState"* %19, i8* %101)
  store i8* %102, i8** %6, align 8
  br label %115

; <label>:103:                                    ; preds = %93
  %104 = load i8*, i8** %6, align 8
  %105 = getelementptr inbounds i8, i8* %104, i64 1
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %107, 42
  br i1 %108, label %109, label %113

; <label>:109:                                    ; preds = %103
  %110 = load i8*, i8** %6, align 8
  %111 = getelementptr inbounds i8, i8* %110, i64 2
  %112 = call i8* @_ZN5Lexer9FileState15skip_slash_starEPKc(%"struct.Lexer::FileState"* %19, i8* %111)
  store i8* %112, i8** %6, align 8
  br label %114

; <label>:113:                                    ; preds = %103
  br label %146

; <label>:114:                                    ; preds = %109
  br label %115

; <label>:115:                                    ; preds = %114, %99
  br label %144

; <label>:116:                                    ; preds = %87, %82
  %117 = load i8*, i8** %6, align 8
  %118 = load i8, i8* %117, align 1
  %119 = sext i8 %118 to i32
  %120 = icmp eq i32 %119, 35
  br i1 %120, label %121, label %142

; <label>:121:                                    ; preds = %116
  %122 = load i8*, i8** %6, align 8
  %123 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 0
  %124 = call i8* @_ZNK6String5beginEv(%class.String* %123)
  %125 = icmp eq i8* %122, %124
  br i1 %125, label %138, label %126

; <label>:126:                                    ; preds = %121
  %127 = load i8*, i8** %6, align 8
  %128 = getelementptr inbounds i8, i8* %127, i64 -1
  %129 = load i8, i8* %128, align 1
  %130 = sext i8 %129 to i32
  %131 = icmp eq i32 %130, 10
  br i1 %131, label %138, label %132

; <label>:132:                                    ; preds = %126
  %133 = load i8*, i8** %6, align 8
  %134 = getelementptr inbounds i8, i8* %133, i64 -1
  %135 = load i8, i8* %134, align 1
  %136 = sext i8 %135 to i32
  %137 = icmp eq i32 %136, 13
  br i1 %137, label %138, label %142

; <label>:138:                                    ; preds = %132, %126, %121
  %139 = load i8*, i8** %6, align 8
  %140 = load %class.Lexer*, %class.Lexer** %5, align 8
  %141 = call i8* @_ZN5Lexer9FileState22process_line_directiveEPKcPS_(%"struct.Lexer::FileState"* %19, i8* %139, %class.Lexer* %140)
  store i8* %141, i8** %6, align 8
  br label %143

; <label>:142:                                    ; preds = %132, %116
  br label %146

; <label>:143:                                    ; preds = %138
  br label %144

; <label>:144:                                    ; preds = %143, %115
  br label %145

; <label>:145:                                    ; preds = %144
  br label %22

; <label>:146:                                    ; preds = %142, %113
  %147 = load i8*, i8** %6, align 8
  store i8* %147, i8** %7, align 8
  %148 = load i8*, i8** %6, align 8
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i32
  %151 = call i32 @isalnum(i32 %150) #13
  %152 = icmp ne i32 %151, 0
  br i1 %152, label %163, label %153

; <label>:153:                                    ; preds = %146
  %154 = load i8*, i8** %6, align 8
  %155 = load i8, i8* %154, align 1
  %156 = sext i8 %155 to i32
  %157 = icmp eq i32 %156, 95
  br i1 %157, label %163, label %158

; <label>:158:                                    ; preds = %153
  %159 = load i8*, i8** %6, align 8
  %160 = load i8, i8* %159, align 1
  %161 = sext i8 %160 to i32
  %162 = icmp eq i32 %161, 64
  br i1 %162, label %163, label %262

; <label>:163:                                    ; preds = %158, %153, %146
  br label %164

; <label>:164:                                    ; preds = %225, %163
  %165 = load i8*, i8** %6, align 8
  %166 = getelementptr inbounds i8, i8* %165, i32 1
  store i8* %166, i8** %6, align 8
  br label %167

; <label>:167:                                    ; preds = %192, %164
  %168 = load i8*, i8** %6, align 8
  %169 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 1
  %170 = load i8*, i8** %169, align 8
  %171 = icmp ult i8* %168, %170
  br i1 %171, label %172, label %190

; <label>:172:                                    ; preds = %167
  %173 = load i8*, i8** %6, align 8
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  %176 = call i32 @isalnum(i32 %175) #13
  %177 = icmp ne i32 %176, 0
  br i1 %177, label %188, label %178

; <label>:178:                                    ; preds = %172
  %179 = load i8*, i8** %6, align 8
  %180 = load i8, i8* %179, align 1
  %181 = sext i8 %180 to i32
  %182 = icmp eq i32 %181, 95
  br i1 %182, label %188, label %183

; <label>:183:                                    ; preds = %178
  %184 = load i8*, i8** %6, align 8
  %185 = load i8, i8* %184, align 1
  %186 = sext i8 %185 to i32
  %187 = icmp eq i32 %186, 64
  br label %188

; <label>:188:                                    ; preds = %183, %178, %172
  %189 = phi i1 [ true, %178 ], [ true, %172 ], [ %187, %183 ]
  br label %190

; <label>:190:                                    ; preds = %188, %167
  %191 = phi i1 [ false, %167 ], [ %189, %188 ]
  br i1 %191, label %192, label %195

; <label>:192:                                    ; preds = %190
  %193 = load i8*, i8** %6, align 8
  %194 = getelementptr inbounds i8, i8* %193, i32 1
  store i8* %194, i8** %6, align 8
  br label %167

; <label>:195:                                    ; preds = %190
  %196 = load i8*, i8** %6, align 8
  %197 = getelementptr inbounds i8, i8* %196, i64 1
  %198 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 1
  %199 = load i8*, i8** %198, align 8
  %200 = icmp ult i8* %197, %199
  br i1 %200, label %201, label %226

; <label>:201:                                    ; preds = %195
  %202 = load i8*, i8** %6, align 8
  %203 = load i8, i8* %202, align 1
  %204 = sext i8 %203 to i32
  %205 = icmp eq i32 %204, 47
  br i1 %205, label %206, label %226

; <label>:206:                                    ; preds = %201
  %207 = load i8*, i8** %6, align 8
  %208 = getelementptr inbounds i8, i8* %207, i64 1
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i32
  %211 = call i32 @isalnum(i32 %210) #13
  %212 = icmp ne i32 %211, 0
  br i1 %212, label %225, label %213

; <label>:213:                                    ; preds = %206
  %214 = load i8*, i8** %6, align 8
  %215 = getelementptr inbounds i8, i8* %214, i64 1
  %216 = load i8, i8* %215, align 1
  %217 = sext i8 %216 to i32
  %218 = icmp eq i32 %217, 95
  br i1 %218, label %225, label %219

; <label>:219:                                    ; preds = %213
  %220 = load i8*, i8** %6, align 8
  %221 = getelementptr inbounds i8, i8* %220, i64 1
  %222 = load i8, i8* %221, align 1
  %223 = sext i8 %222 to i32
  %224 = icmp eq i32 %223, 64
  br i1 %224, label %225, label %226

; <label>:225:                                    ; preds = %219, %213, %206
  br label %164

; <label>:226:                                    ; preds = %219, %201, %195
  %227 = load i8*, i8** %6, align 8
  %228 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 2
  store i8* %227, i8** %228, align 8
  %229 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 0
  %230 = load i8*, i8** %7, align 8
  %231 = load i8*, i8** %6, align 8
  call void @_ZNK6String9substringEPKcS1_(%class.String* sret %8, %class.String* %229, i8* %230, i8* %231)
  %232 = invoke zeroext i1 @_ZNK6String6equalsEPKci(%class.String* %8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i32 0, i32 0), i32 12)
          to label %233 unwind label %236

; <label>:233:                                    ; preds = %226
  br i1 %232, label %234, label %240

; <label>:234:                                    ; preds = %233
  invoke void @_ZN6LexemeC2EiRK6Stringb(%class.Lexeme* %0, i32 263, %class.String* dereferenceable(24) %8, i1 zeroext false)
          to label %235 unwind label %236

; <label>:235:                                    ; preds = %234
  store i32 1, i32* %11, align 4
  br label %261

; <label>:236:                                    ; preds = %255, %253, %250, %248, %245, %243, %240, %234, %226
  %237 = landingpad { i8*, i32 }
          cleanup
  %238 = extractvalue { i8*, i32 } %237, 0
  store i8* %238, i8** %9, align 8
  %239 = extractvalue { i8*, i32 } %237, 1
  store i32 %239, i32* %10, align 4
  call void @_ZN6StringD2Ev(%class.String* %8) #9
  br label %477

; <label>:240:                                    ; preds = %233
  %241 = invoke zeroext i1 @_ZNK6String6equalsEPKci(%class.String* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i32 0, i32 0), i32 7)
          to label %242 unwind label %236

; <label>:242:                                    ; preds = %240
  br i1 %241, label %243, label %245

; <label>:243:                                    ; preds = %242
  invoke void @_ZN6LexemeC2EiRK6Stringb(%class.Lexeme* %0, i32 264, %class.String* dereferenceable(24) %8, i1 zeroext false)
          to label %244 unwind label %236

; <label>:244:                                    ; preds = %243
  store i32 1, i32* %11, align 4
  br label %261

; <label>:245:                                    ; preds = %242
  %246 = invoke zeroext i1 @_ZNK6String6equalsEPKci(%class.String* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34, i32 0, i32 0), i32 7)
          to label %247 unwind label %236

; <label>:247:                                    ; preds = %245
  br i1 %246, label %248, label %250

; <label>:248:                                    ; preds = %247
  invoke void @_ZN6LexemeC2EiRK6Stringb(%class.Lexeme* %0, i32 265, %class.String* dereferenceable(24) %8, i1 zeroext false)
          to label %249 unwind label %236

; <label>:249:                                    ; preds = %248
  store i32 1, i32* %11, align 4
  br label %261

; <label>:250:                                    ; preds = %247
  %251 = invoke zeroext i1 @_ZNK6String6equalsEPKci(%class.String* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i32 0, i32 0), i32 6)
          to label %252 unwind label %236

; <label>:252:                                    ; preds = %250
  br i1 %251, label %253, label %255

; <label>:253:                                    ; preds = %252
  invoke void @_ZN6LexemeC2EiRK6Stringb(%class.Lexeme* %0, i32 266, %class.String* dereferenceable(24) %8, i1 zeroext false)
          to label %254 unwind label %236

; <label>:254:                                    ; preds = %253
  store i32 1, i32* %11, align 4
  br label %261

; <label>:255:                                    ; preds = %252
  %256 = load %class.Lexer*, %class.Lexer** %5, align 8
  %257 = getelementptr inbounds %class.Lexer, %class.Lexer* %256, i32 0, i32 2
  %258 = load i8, i8* %257, align 8
  %259 = trunc i8 %258 to i1
  invoke void @_ZN6LexemeC2EiRK6Stringb(%class.Lexeme* %0, i32 256, %class.String* dereferenceable(24) %8, i1 zeroext %259)
          to label %260 unwind label %236

; <label>:260:                                    ; preds = %255
  store i32 1, i32* %11, align 4
  br label %261

; <label>:261:                                    ; preds = %260, %254, %249, %244, %235
  call void @_ZN6StringD2Ev(%class.String* %8) #9
  br label %476

; <label>:262:                                    ; preds = %158
  %263 = load i8*, i8** %6, align 8
  %264 = load i8, i8* %263, align 1
  %265 = sext i8 %264 to i32
  %266 = icmp eq i32 %265, 36
  br i1 %266, label %267, label %318

; <label>:267:                                    ; preds = %262
  %268 = load i8*, i8** %6, align 8
  %269 = getelementptr inbounds i8, i8* %268, i32 1
  store i8* %269, i8** %6, align 8
  br label %270

; <label>:270:                                    ; preds = %290, %267
  %271 = load i8*, i8** %6, align 8
  %272 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 1
  %273 = load i8*, i8** %272, align 8
  %274 = icmp ult i8* %271, %273
  br i1 %274, label %275, label %288

; <label>:275:                                    ; preds = %270
  %276 = load i8*, i8** %6, align 8
  %277 = load i8, i8* %276, align 1
  %278 = zext i8 %277 to i32
  %279 = call i32 @isalnum(i32 %278) #13
  %280 = icmp ne i32 %279, 0
  br i1 %280, label %286, label %281

; <label>:281:                                    ; preds = %275
  %282 = load i8*, i8** %6, align 8
  %283 = load i8, i8* %282, align 1
  %284 = sext i8 %283 to i32
  %285 = icmp eq i32 %284, 95
  br label %286

; <label>:286:                                    ; preds = %281, %275
  %287 = phi i1 [ true, %275 ], [ %285, %281 ]
  br label %288

; <label>:288:                                    ; preds = %286, %270
  %289 = phi i1 [ false, %270 ], [ %287, %286 ]
  br i1 %289, label %290, label %293

; <label>:290:                                    ; preds = %288
  %291 = load i8*, i8** %6, align 8
  %292 = getelementptr inbounds i8, i8* %291, i32 1
  store i8* %292, i8** %6, align 8
  br label %270

; <label>:293:                                    ; preds = %288
  %294 = load i8*, i8** %6, align 8
  %295 = getelementptr inbounds i8, i8* %294, i64 1
  %296 = load i8*, i8** %7, align 8
  %297 = icmp ugt i8* %295, %296
  br i1 %297, label %298, label %314

; <label>:298:                                    ; preds = %293
  %299 = load i8*, i8** %6, align 8
  %300 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 2
  store i8* %299, i8** %300, align 8
  %301 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 0
  %302 = load i8*, i8** %7, align 8
  %303 = getelementptr inbounds i8, i8* %302, i64 1
  %304 = load i8*, i8** %6, align 8
  call void @_ZNK6String9substringEPKcS1_(%class.String* sret %12, %class.String* %301, i8* %303, i8* %304)
  %305 = load %class.Lexer*, %class.Lexer** %5, align 8
  %306 = getelementptr inbounds %class.Lexer, %class.Lexer* %305, i32 0, i32 2
  %307 = load i8, i8* %306, align 8
  %308 = trunc i8 %307 to i1
  invoke void @_ZN6LexemeC2EiRK6Stringb(%class.Lexeme* %0, i32 257, %class.String* dereferenceable(24) %12, i1 zeroext %308)
          to label %309 unwind label %310

; <label>:309:                                    ; preds = %298
  call void @_ZN6StringD2Ev(%class.String* %12) #9
  br label %476

; <label>:310:                                    ; preds = %298
  %311 = landingpad { i8*, i32 }
          cleanup
  %312 = extractvalue { i8*, i32 } %311, 0
  store i8* %312, i8** %9, align 8
  %313 = extractvalue { i8*, i32 } %311, 1
  store i32 %313, i32* %10, align 4
  call void @_ZN6StringD2Ev(%class.String* %12) #9
  br label %477

; <label>:314:                                    ; preds = %293
  %315 = load i8*, i8** %6, align 8
  %316 = getelementptr inbounds i8, i8* %315, i32 -1
  store i8* %316, i8** %6, align 8
  br label %317

; <label>:317:                                    ; preds = %314
  br label %318

; <label>:318:                                    ; preds = %317, %262
  %319 = load i8*, i8** %6, align 8
  %320 = getelementptr inbounds i8, i8* %319, i64 1
  %321 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 1
  %322 = load i8*, i8** %321, align 8
  %323 = icmp ult i8* %320, %322
  br i1 %323, label %324, label %424

; <label>:324:                                    ; preds = %318
  %325 = load i8*, i8** %6, align 8
  %326 = load i8, i8* %325, align 1
  %327 = sext i8 %326 to i32
  %328 = icmp eq i32 %327, 45
  br i1 %328, label %329, label %348

; <label>:329:                                    ; preds = %324
  %330 = load i8*, i8** %6, align 8
  %331 = getelementptr inbounds i8, i8* %330, i64 1
  %332 = load i8, i8* %331, align 1
  %333 = sext i8 %332 to i32
  %334 = icmp eq i32 %333, 62
  br i1 %334, label %335, label %348

; <label>:335:                                    ; preds = %329
  %336 = load i8*, i8** %6, align 8
  %337 = getelementptr inbounds i8, i8* %336, i64 2
  %338 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 2
  store i8* %337, i8** %338, align 8
  %339 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 0
  %340 = load i8*, i8** %6, align 8
  %341 = load i8*, i8** %6, align 8
  %342 = getelementptr inbounds i8, i8* %341, i64 2
  call void @_ZNK6String9substringEPKcS1_(%class.String* sret %13, %class.String* %339, i8* %340, i8* %342)
  invoke void @_ZN6LexemeC2EiRK6Stringb(%class.Lexeme* %0, i32 258, %class.String* dereferenceable(24) %13, i1 zeroext false)
          to label %343 unwind label %344

; <label>:343:                                    ; preds = %335
  call void @_ZN6StringD2Ev(%class.String* %13) #9
  br label %476

; <label>:344:                                    ; preds = %335
  %345 = landingpad { i8*, i32 }
          cleanup
  %346 = extractvalue { i8*, i32 } %345, 0
  store i8* %346, i8** %9, align 8
  %347 = extractvalue { i8*, i32 } %345, 1
  store i32 %347, i32* %10, align 4
  call void @_ZN6StringD2Ev(%class.String* %13) #9
  br label %477

; <label>:348:                                    ; preds = %329, %324
  %349 = load i8*, i8** %6, align 8
  %350 = load i8, i8* %349, align 1
  %351 = sext i8 %350 to i32
  %352 = icmp eq i32 %351, 61
  br i1 %352, label %353, label %372

; <label>:353:                                    ; preds = %348
  %354 = load i8*, i8** %6, align 8
  %355 = getelementptr inbounds i8, i8* %354, i64 1
  %356 = load i8, i8* %355, align 1
  %357 = sext i8 %356 to i32
  %358 = icmp eq i32 %357, 62
  br i1 %358, label %359, label %372

; <label>:359:                                    ; preds = %353
  %360 = load i8*, i8** %6, align 8
  %361 = getelementptr inbounds i8, i8* %360, i64 2
  %362 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 2
  store i8* %361, i8** %362, align 8
  %363 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 0
  %364 = load i8*, i8** %6, align 8
  %365 = load i8*, i8** %6, align 8
  %366 = getelementptr inbounds i8, i8* %365, i64 2
  call void @_ZNK6String9substringEPKcS1_(%class.String* sret %14, %class.String* %363, i8* %364, i8* %366)
  invoke void @_ZN6LexemeC2EiRK6Stringb(%class.Lexeme* %0, i32 259, %class.String* dereferenceable(24) %14, i1 zeroext false)
          to label %367 unwind label %368

; <label>:367:                                    ; preds = %359
  call void @_ZN6StringD2Ev(%class.String* %14) #9
  br label %476

; <label>:368:                                    ; preds = %359
  %369 = landingpad { i8*, i32 }
          cleanup
  %370 = extractvalue { i8*, i32 } %369, 0
  store i8* %370, i8** %9, align 8
  %371 = extractvalue { i8*, i32 } %369, 1
  store i32 %371, i32* %10, align 4
  call void @_ZN6StringD2Ev(%class.String* %14) #9
  br label %477

; <label>:372:                                    ; preds = %353, %348
  %373 = load i8*, i8** %6, align 8
  %374 = load i8, i8* %373, align 1
  %375 = sext i8 %374 to i32
  %376 = icmp eq i32 %375, 58
  br i1 %376, label %377, label %396

; <label>:377:                                    ; preds = %372
  %378 = load i8*, i8** %6, align 8
  %379 = getelementptr inbounds i8, i8* %378, i64 1
  %380 = load i8, i8* %379, align 1
  %381 = sext i8 %380 to i32
  %382 = icmp eq i32 %381, 58
  br i1 %382, label %383, label %396

; <label>:383:                                    ; preds = %377
  %384 = load i8*, i8** %6, align 8
  %385 = getelementptr inbounds i8, i8* %384, i64 2
  %386 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 2
  store i8* %385, i8** %386, align 8
  %387 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 0
  %388 = load i8*, i8** %6, align 8
  %389 = load i8*, i8** %6, align 8
  %390 = getelementptr inbounds i8, i8* %389, i64 2
  call void @_ZNK6String9substringEPKcS1_(%class.String* sret %15, %class.String* %387, i8* %388, i8* %390)
  invoke void @_ZN6LexemeC2EiRK6Stringb(%class.Lexeme* %0, i32 260, %class.String* dereferenceable(24) %15, i1 zeroext false)
          to label %391 unwind label %392

; <label>:391:                                    ; preds = %383
  call void @_ZN6StringD2Ev(%class.String* %15) #9
  br label %476

; <label>:392:                                    ; preds = %383
  %393 = landingpad { i8*, i32 }
          cleanup
  %394 = extractvalue { i8*, i32 } %393, 0
  store i8* %394, i8** %9, align 8
  %395 = extractvalue { i8*, i32 } %393, 1
  store i32 %395, i32* %10, align 4
  call void @_ZN6StringD2Ev(%class.String* %15) #9
  br label %477

; <label>:396:                                    ; preds = %377, %372
  %397 = load i8*, i8** %6, align 8
  %398 = load i8, i8* %397, align 1
  %399 = sext i8 %398 to i32
  %400 = icmp eq i32 %399, 124
  br i1 %400, label %401, label %420

; <label>:401:                                    ; preds = %396
  %402 = load i8*, i8** %6, align 8
  %403 = getelementptr inbounds i8, i8* %402, i64 1
  %404 = load i8, i8* %403, align 1
  %405 = sext i8 %404 to i32
  %406 = icmp eq i32 %405, 124
  br i1 %406, label %407, label %420

; <label>:407:                                    ; preds = %401
  %408 = load i8*, i8** %6, align 8
  %409 = getelementptr inbounds i8, i8* %408, i64 2
  %410 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 2
  store i8* %409, i8** %410, align 8
  %411 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 0
  %412 = load i8*, i8** %6, align 8
  %413 = load i8*, i8** %6, align 8
  %414 = getelementptr inbounds i8, i8* %413, i64 2
  call void @_ZNK6String9substringEPKcS1_(%class.String* sret %16, %class.String* %411, i8* %412, i8* %414)
  invoke void @_ZN6LexemeC2EiRK6Stringb(%class.Lexeme* %0, i32 261, %class.String* dereferenceable(24) %16, i1 zeroext false)
          to label %415 unwind label %416

; <label>:415:                                    ; preds = %407
  call void @_ZN6StringD2Ev(%class.String* %16) #9
  br label %476

; <label>:416:                                    ; preds = %407
  %417 = landingpad { i8*, i32 }
          cleanup
  %418 = extractvalue { i8*, i32 } %417, 0
  store i8* %418, i8** %9, align 8
  %419 = extractvalue { i8*, i32 } %417, 1
  store i32 %419, i32* %10, align 4
  call void @_ZN6StringD2Ev(%class.String* %16) #9
  br label %477

; <label>:420:                                    ; preds = %401, %396
  br label %421

; <label>:421:                                    ; preds = %420
  br label %422

; <label>:422:                                    ; preds = %421
  br label %423

; <label>:423:                                    ; preds = %422
  br label %424

; <label>:424:                                    ; preds = %423, %318
  %425 = load i8*, i8** %6, align 8
  %426 = getelementptr inbounds i8, i8* %425, i64 2
  %427 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 1
  %428 = load i8*, i8** %427, align 8
  %429 = icmp ult i8* %426, %428
  br i1 %429, label %430, label %460

; <label>:430:                                    ; preds = %424
  %431 = load i8*, i8** %6, align 8
  %432 = load i8, i8* %431, align 1
  %433 = sext i8 %432 to i32
  %434 = icmp eq i32 %433, 46
  br i1 %434, label %435, label %460

; <label>:435:                                    ; preds = %430
  %436 = load i8*, i8** %6, align 8
  %437 = getelementptr inbounds i8, i8* %436, i64 1
  %438 = load i8, i8* %437, align 1
  %439 = sext i8 %438 to i32
  %440 = icmp eq i32 %439, 46
  br i1 %440, label %441, label %460

; <label>:441:                                    ; preds = %435
  %442 = load i8*, i8** %6, align 8
  %443 = getelementptr inbounds i8, i8* %442, i64 2
  %444 = load i8, i8* %443, align 1
  %445 = sext i8 %444 to i32
  %446 = icmp eq i32 %445, 46
  br i1 %446, label %447, label %460

; <label>:447:                                    ; preds = %441
  %448 = load i8*, i8** %6, align 8
  %449 = getelementptr inbounds i8, i8* %448, i64 3
  %450 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 2
  store i8* %449, i8** %450, align 8
  %451 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 0
  %452 = load i8*, i8** %6, align 8
  %453 = load i8*, i8** %6, align 8
  %454 = getelementptr inbounds i8, i8* %453, i64 3
  call void @_ZNK6String9substringEPKcS1_(%class.String* sret %17, %class.String* %451, i8* %452, i8* %454)
  invoke void @_ZN6LexemeC2EiRK6Stringb(%class.Lexeme* %0, i32 262, %class.String* dereferenceable(24) %17, i1 zeroext false)
          to label %455 unwind label %456

; <label>:455:                                    ; preds = %447
  call void @_ZN6StringD2Ev(%class.String* %17) #9
  br label %476

; <label>:456:                                    ; preds = %447
  %457 = landingpad { i8*, i32 }
          cleanup
  %458 = extractvalue { i8*, i32 } %457, 0
  store i8* %458, i8** %9, align 8
  %459 = extractvalue { i8*, i32 } %457, 1
  store i32 %459, i32* %10, align 4
  call void @_ZN6StringD2Ev(%class.String* %17) #9
  br label %477

; <label>:460:                                    ; preds = %441, %435, %430, %424
  %461 = load i8*, i8** %6, align 8
  %462 = getelementptr inbounds i8, i8* %461, i64 1
  %463 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 2
  store i8* %462, i8** %463, align 8
  %464 = load i8*, i8** %6, align 8
  %465 = load i8, i8* %464, align 1
  %466 = sext i8 %465 to i32
  %467 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %19, i32 0, i32 0
  %468 = load i8*, i8** %6, align 8
  %469 = load i8*, i8** %6, align 8
  %470 = getelementptr inbounds i8, i8* %469, i64 1
  call void @_ZNK6String9substringEPKcS1_(%class.String* sret %18, %class.String* %467, i8* %468, i8* %470)
  invoke void @_ZN6LexemeC2EiRK6Stringb(%class.Lexeme* %0, i32 %466, %class.String* dereferenceable(24) %18, i1 zeroext false)
          to label %471 unwind label %472

; <label>:471:                                    ; preds = %460
  call void @_ZN6StringD2Ev(%class.String* %18) #9
  br label %476

; <label>:472:                                    ; preds = %460
  %473 = landingpad { i8*, i32 }
          cleanup
  %474 = extractvalue { i8*, i32 } %473, 0
  store i8* %474, i8** %9, align 8
  %475 = extractvalue { i8*, i32 } %473, 1
  store i32 %475, i32* %10, align 4
  call void @_ZN6StringD2Ev(%class.String* %18) #9
  br label %477

; <label>:476:                                    ; preds = %471, %455, %415, %391, %367, %343, %309, %261, %78
  ret void

; <label>:477:                                    ; preds = %472, %456, %416, %392, %368, %344, %310, %236
  %478 = load i8*, i8** %9, align 8
  %479 = load i32, i32* %10, align 4
  %480 = insertvalue { i8*, i32 } undef, i8* %478, 0
  %481 = insertvalue { i8*, i32 } %480, i32 %479, 1
  resume { i8*, i32 } %481
}

; Function Attrs: nounwind readonly
declare i32 @isspace(i32) #5

; Function Attrs: nounwind readonly
declare i32 @isalnum(i32) #5

; Function Attrs: noinline optnone uwtable
define linkonce_odr zeroext i1 @_ZNK6String6equalsEPKci(%class.String*, i8*, i32) #2 comdat align 2 {
  %4 = alloca %class.String*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store %class.String* %0, %class.String** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %class.String*, %class.String** %4, align 8
  %8 = load i8*, i8** %5, align 8
  %9 = load i32, i32* %6, align 4
  %10 = call zeroext i1 @_ZNK6String11hard_equalsEPKci(%class.String* %7, i8* %8, i32 %9)
  ret i1 %10
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6LexemeC2EiRK6Stringb(%class.Lexeme*, i32, %class.String* dereferenceable(24), i1 zeroext) unnamed_addr #2 comdat align 2 {
  %5 = alloca %class.Lexeme*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %class.String*, align 8
  %8 = alloca i8, align 1
  store %class.Lexeme* %0, %class.Lexeme** %5, align 8
  store i32 %1, i32* %6, align 4
  store %class.String* %2, %class.String** %7, align 8
  %9 = zext i1 %3 to i8
  store i8 %9, i8* %8, align 1
  %10 = load %class.Lexeme*, %class.Lexeme** %5, align 8
  %11 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %10, i32 0, i32 0
  %12 = load i32, i32* %6, align 4
  store i32 %12, i32* %11, align 8
  %13 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %10, i32 0, i32 1
  %14 = load i8, i8* %8, align 1
  %15 = trunc i8 %14 to i1
  br i1 %15, label %16, label %18

; <label>:16:                                     ; preds = %4
  %17 = load %class.String*, %class.String** %7, align 8
  call void @_ZNK6String7compactEv(%class.String* sret %13, %class.String* %17)
  br label %20

; <label>:18:                                     ; preds = %4
  %19 = load %class.String*, %class.String** %7, align 8
  call void @_ZN6StringC2ERKS_(%class.String* %13, %class.String* dereferenceable(24) %19)
  br label %20

; <label>:20:                                     ; preds = %18, %16
  ret void
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer9FileState10lex_configEPS_(%class.String* noalias sret, %"struct.Lexer::FileState"*, %class.Lexer*) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.Lexer::FileState"*, align 8
  %5 = alloca %class.Lexer*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %class.String, align 8
  %10 = alloca i8*
  %11 = alloca i32
  %12 = alloca %class.String, align 8
  store %"struct.Lexer::FileState"* %1, %"struct.Lexer::FileState"** %4, align 8
  store %class.Lexer* %2, %class.Lexer** %5, align 8
  %13 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %4, align 8
  %14 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %13, i32 0, i32 2
  %15 = load i8*, i8** %14, align 8
  store i8* %15, i8** %6, align 8
  %16 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %13, i32 0, i32 2
  %17 = load i8*, i8** %16, align 8
  store i8* %17, i8** %7, align 8
  store i32 1, i32* %8, align 4
  call void @_ZN6StringC2Ev(%class.String* %9)
  br label %18

; <label>:18:                                     ; preds = %199, %3
  %19 = load i8*, i8** %7, align 8
  %20 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %13, i32 0, i32 1
  %21 = load i8*, i8** %20, align 8
  %22 = icmp ult i8* %19, %21
  br i1 %22, label %23, label %202

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %7, align 8
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %26, 40
  br i1 %27, label %28, label %31

; <label>:28:                                     ; preds = %23
  %29 = load i32, i32* %8, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %8, align 4
  br label %198

; <label>:31:                                     ; preds = %23
  %32 = load i8*, i8** %7, align 8
  %33 = load i8, i8* %32, align 1
  %34 = sext i8 %33 to i32
  %35 = icmp eq i32 %34, 41
  br i1 %35, label %36, label %43

; <label>:36:                                     ; preds = %31
  %37 = load i32, i32* %8, align 4
  %38 = add i32 %37, -1
  store i32 %38, i32* %8, align 4
  %39 = load i32, i32* %8, align 4
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %42, label %41

; <label>:41:                                     ; preds = %36
  br label %202

; <label>:42:                                     ; preds = %36
  br label %197

; <label>:43:                                     ; preds = %31
  %44 = load i8*, i8** %7, align 8
  %45 = load i8, i8* %44, align 1
  %46 = sext i8 %45 to i32
  %47 = icmp eq i32 %46, 10
  br i1 %47, label %48, label %52

; <label>:48:                                     ; preds = %43
  %49 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %13, i32 0, i32 5
  %50 = load i32, i32* %49, align 8
  %51 = add i32 %50, 1
  store i32 %51, i32* %49, align 8
  br label %196

; <label>:52:                                     ; preds = %43
  %53 = load i8*, i8** %7, align 8
  %54 = load i8, i8* %53, align 1
  %55 = sext i8 %54 to i32
  %56 = icmp eq i32 %55, 13
  br i1 %56, label %57, label %76

; <label>:57:                                     ; preds = %52
  %58 = load i8*, i8** %7, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 1
  %60 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %13, i32 0, i32 1
  %61 = load i8*, i8** %60, align 8
  %62 = icmp ult i8* %59, %61
  br i1 %62, label %63, label %72

; <label>:63:                                     ; preds = %57
  %64 = load i8*, i8** %7, align 8
  %65 = getelementptr inbounds i8, i8* %64, i64 1
  %66 = load i8, i8* %65, align 1
  %67 = sext i8 %66 to i32
  %68 = icmp eq i32 %67, 10
  br i1 %68, label %69, label %72

; <label>:69:                                     ; preds = %63
  %70 = load i8*, i8** %7, align 8
  %71 = getelementptr inbounds i8, i8* %70, i32 1
  store i8* %71, i8** %7, align 8
  br label %72

; <label>:72:                                     ; preds = %69, %63, %57
  %73 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %13, i32 0, i32 5
  %74 = load i32, i32* %73, align 8
  %75 = add i32 %74, 1
  store i32 %75, i32* %73, align 8
  br label %195

; <label>:76:                                     ; preds = %52
  %77 = load i8*, i8** %7, align 8
  %78 = load i8, i8* %77, align 1
  %79 = sext i8 %78 to i32
  %80 = icmp eq i32 %79, 35
  br i1 %80, label %81, label %113

; <label>:81:                                     ; preds = %76
  %82 = load i8*, i8** %7, align 8
  %83 = getelementptr inbounds i8, i8* %82, i64 -1
  %84 = load i8, i8* %83, align 1
  %85 = sext i8 %84 to i32
  %86 = icmp eq i32 %85, 10
  br i1 %86, label %93, label %87

; <label>:87:                                     ; preds = %81
  %88 = load i8*, i8** %7, align 8
  %89 = getelementptr inbounds i8, i8* %88, i64 -1
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %91, 13
  br i1 %92, label %93, label %113

; <label>:93:                                     ; preds = %87, %81
  %94 = load i8*, i8** %6, align 8
  %95 = load i8*, i8** %7, align 8
  %96 = load i8*, i8** %6, align 8
  %97 = ptrtoint i8* %95 to i64
  %98 = ptrtoint i8* %96 to i64
  %99 = sub i64 %97, %98
  %100 = trunc i64 %99 to i32
  invoke void @_ZN6String6appendEPKci(%class.String* %9, i8* %94, i32 %100)
          to label %101 unwind label %109

; <label>:101:                                    ; preds = %93
  %102 = load i8*, i8** %7, align 8
  %103 = load %class.Lexer*, %class.Lexer** %5, align 8
  %104 = invoke i8* @_ZN5Lexer9FileState22process_line_directiveEPKcPS_(%"struct.Lexer::FileState"* %13, i8* %102, %class.Lexer* %103)
          to label %105 unwind label %109

; <label>:105:                                    ; preds = %101
  %106 = getelementptr inbounds i8, i8* %104, i64 -1
  store i8* %106, i8** %7, align 8
  %107 = load i8*, i8** %7, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 1
  store i8* %108, i8** %6, align 8
  br label %194

; <label>:109:                                    ; preds = %217, %215, %202, %185, %160, %142, %130, %101, %93
  %110 = landingpad { i8*, i32 }
          cleanup
  %111 = extractvalue { i8*, i32 } %110, 0
  store i8* %111, i8** %10, align 8
  %112 = extractvalue { i8*, i32 } %110, 1
  store i32 %112, i32* %11, align 4
  br label %224

; <label>:113:                                    ; preds = %87, %76
  %114 = load i8*, i8** %7, align 8
  %115 = load i8, i8* %114, align 1
  %116 = sext i8 %115 to i32
  %117 = icmp eq i32 %116, 47
  br i1 %117, label %118, label %150

; <label>:118:                                    ; preds = %113
  %119 = load i8*, i8** %7, align 8
  %120 = getelementptr inbounds i8, i8* %119, i64 1
  %121 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %13, i32 0, i32 1
  %122 = load i8*, i8** %121, align 8
  %123 = icmp ult i8* %120, %122
  br i1 %123, label %124, label %150

; <label>:124:                                    ; preds = %118
  %125 = load i8*, i8** %7, align 8
  %126 = getelementptr inbounds i8, i8* %125, i64 1
  %127 = load i8, i8* %126, align 1
  %128 = sext i8 %127 to i32
  %129 = icmp eq i32 %128, 47
  br i1 %129, label %130, label %136

; <label>:130:                                    ; preds = %124
  %131 = load i8*, i8** %7, align 8
  %132 = getelementptr inbounds i8, i8* %131, i64 2
  %133 = invoke i8* @_ZN5Lexer9FileState9skip_lineEPKc(%"struct.Lexer::FileState"* %13, i8* %132)
          to label %134 unwind label %109

; <label>:134:                                    ; preds = %130
  %135 = getelementptr inbounds i8, i8* %133, i64 -1
  store i8* %135, i8** %7, align 8
  br label %149

; <label>:136:                                    ; preds = %124
  %137 = load i8*, i8** %7, align 8
  %138 = getelementptr inbounds i8, i8* %137, i64 1
  %139 = load i8, i8* %138, align 1
  %140 = sext i8 %139 to i32
  %141 = icmp eq i32 %140, 42
  br i1 %141, label %142, label %148

; <label>:142:                                    ; preds = %136
  %143 = load i8*, i8** %7, align 8
  %144 = getelementptr inbounds i8, i8* %143, i64 2
  %145 = invoke i8* @_ZN5Lexer9FileState15skip_slash_starEPKc(%"struct.Lexer::FileState"* %13, i8* %144)
          to label %146 unwind label %109

; <label>:146:                                    ; preds = %142
  %147 = getelementptr inbounds i8, i8* %145, i64 -1
  store i8* %147, i8** %7, align 8
  br label %148

; <label>:148:                                    ; preds = %146, %136
  br label %149

; <label>:149:                                    ; preds = %148, %134
  br label %193

; <label>:150:                                    ; preds = %118, %113
  %151 = load i8*, i8** %7, align 8
  %152 = load i8, i8* %151, align 1
  %153 = sext i8 %152 to i32
  %154 = icmp eq i32 %153, 39
  br i1 %154, label %160, label %155

; <label>:155:                                    ; preds = %150
  %156 = load i8*, i8** %7, align 8
  %157 = load i8, i8* %156, align 1
  %158 = sext i8 %157 to i32
  %159 = icmp eq i32 %158, 34
  br i1 %159, label %160, label %168

; <label>:160:                                    ; preds = %155, %150
  %161 = load i8*, i8** %7, align 8
  %162 = getelementptr inbounds i8, i8* %161, i64 1
  %163 = load i8*, i8** %7, align 8
  %164 = load i8, i8* %163, align 1
  %165 = invoke i8* @_ZN5Lexer9FileState10skip_quoteEPKcc(%"struct.Lexer::FileState"* %13, i8* %162, i8 signext %164)
          to label %166 unwind label %109

; <label>:166:                                    ; preds = %160
  %167 = getelementptr inbounds i8, i8* %165, i64 -1
  store i8* %167, i8** %7, align 8
  br label %192

; <label>:168:                                    ; preds = %155
  %169 = load i8*, i8** %7, align 8
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %171, 92
  br i1 %172, label %173, label %191

; <label>:173:                                    ; preds = %168
  %174 = load i8*, i8** %7, align 8
  %175 = getelementptr inbounds i8, i8* %174, i64 1
  %176 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %13, i32 0, i32 1
  %177 = load i8*, i8** %176, align 8
  %178 = icmp ult i8* %175, %177
  br i1 %178, label %179, label %191

; <label>:179:                                    ; preds = %173
  %180 = load i8*, i8** %7, align 8
  %181 = getelementptr inbounds i8, i8* %180, i64 1
  %182 = load i8, i8* %181, align 1
  %183 = sext i8 %182 to i32
  %184 = icmp eq i32 %183, 60
  br i1 %184, label %185, label %191

; <label>:185:                                    ; preds = %179
  %186 = load i8*, i8** %7, align 8
  %187 = getelementptr inbounds i8, i8* %186, i64 2
  %188 = invoke i8* @_ZN5Lexer9FileState20skip_backslash_angleEPKc(%"struct.Lexer::FileState"* %13, i8* %187)
          to label %189 unwind label %109

; <label>:189:                                    ; preds = %185
  %190 = getelementptr inbounds i8, i8* %188, i64 -1
  store i8* %190, i8** %7, align 8
  br label %191

; <label>:191:                                    ; preds = %189, %179, %173, %168
  br label %192

; <label>:192:                                    ; preds = %191, %166
  br label %193

; <label>:193:                                    ; preds = %192, %149
  br label %194

; <label>:194:                                    ; preds = %193, %105
  br label %195

; <label>:195:                                    ; preds = %194, %72
  br label %196

; <label>:196:                                    ; preds = %195, %48
  br label %197

; <label>:197:                                    ; preds = %196, %42
  br label %198

; <label>:198:                                    ; preds = %197, %28
  br label %199

; <label>:199:                                    ; preds = %198
  %200 = load i8*, i8** %7, align 8
  %201 = getelementptr inbounds i8, i8* %200, i32 1
  store i8* %201, i8** %7, align 8
  br label %18

; <label>:202:                                    ; preds = %41, %18
  %203 = load i8*, i8** %7, align 8
  %204 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %13, i32 0, i32 2
  store i8* %203, i8** %204, align 8
  %205 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %13, i32 0, i32 0
  %206 = load i8*, i8** %6, align 8
  %207 = load i8*, i8** %7, align 8
  invoke void @_ZNK6String9substringEPKcS1_(%class.String* sret %12, %class.String* %205, i8* %206, i8* %207)
          to label %208 unwind label %109

; <label>:208:                                    ; preds = %202
  %209 = invoke dereferenceable(24) %class.String* @_ZN6StringpLERKS_(%class.String* %9, %class.String* dereferenceable(24) %12)
          to label %210 unwind label %220

; <label>:210:                                    ; preds = %208
  call void @_ZN6StringD2Ev(%class.String* %12) #9
  %211 = load %class.Lexer*, %class.Lexer** %5, align 8
  %212 = getelementptr inbounds %class.Lexer, %class.Lexer* %211, i32 0, i32 2
  %213 = load i8, i8* %212, align 8
  %214 = trunc i8 %213 to i1
  br i1 %214, label %215, label %217

; <label>:215:                                    ; preds = %210
  invoke void @_ZNK6String7compactEv(%class.String* sret %0, %class.String* %9)
          to label %216 unwind label %109

; <label>:216:                                    ; preds = %215
  br label %219

; <label>:217:                                    ; preds = %210
  invoke void @_ZN6StringC2ERKS_(%class.String* %0, %class.String* dereferenceable(24) %9)
          to label %218 unwind label %109

; <label>:218:                                    ; preds = %217
  br label %219

; <label>:219:                                    ; preds = %218, %216
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  ret void

; <label>:220:                                    ; preds = %208
  %221 = landingpad { i8*, i32 }
          cleanup
  %222 = extractvalue { i8*, i32 } %221, 0
  store i8* %222, i8** %10, align 8
  %223 = extractvalue { i8*, i32 } %221, 1
  store i32 %223, i32* %11, align 4
  call void @_ZN6StringD2Ev(%class.String* %12) #9
  br label %224

; <label>:224:                                    ; preds = %220, %109
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  br label %225

; <label>:225:                                    ; preds = %224
  %226 = load i8*, i8** %10, align 8
  %227 = load i32, i32* %11, align 4
  %228 = insertvalue { i8*, i32 } undef, i8* %226, 0
  %229 = insertvalue { i8*, i32 } %228, i32 %227, 1
  resume { i8*, i32 } %229
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6String6appendEPKci(%class.String*, i8*, i32) #2 comdat align 2 {
  %4 = alloca %class.String*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store %class.String* %0, %class.String** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %class.String*, %class.String** %4, align 8
  %8 = load i8*, i8** %5, align 8
  %9 = load i32, i32* %6, align 4
  %10 = call %"struct.String::memo_t"* @_ZN6String11absent_memoEv()
  call void @_ZN6String6appendEPKciPNS_6memo_tE(%class.String* %7, i8* %8, i32 %9, %"struct.String::memo_t"* %10)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dereferenceable(24) %class.String* @_ZN6StringpLERKS_(%class.String*, %class.String* dereferenceable(24)) #2 comdat align 2 {
  %3 = alloca %class.String*, align 8
  %4 = alloca %class.String*, align 8
  store %class.String* %0, %class.String** %3, align 8
  store %class.String* %1, %class.String** %4, align 8
  %5 = load %class.String*, %class.String** %3, align 8
  %6 = load %class.String*, %class.String** %4, align 8
  %7 = call i8* @_ZNK6String4dataEv(%class.String* %6)
  %8 = load %class.String*, %class.String** %4, align 8
  %9 = call i32 @_ZNK6String6lengthEv(%class.String* %8)
  %10 = load %class.String*, %class.String** %4, align 8
  %11 = getelementptr inbounds %class.String, %class.String* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %11, i32 0, i32 2
  %13 = load %"struct.String::memo_t"*, %"struct.String::memo_t"** %12, align 8
  call void @_ZN6String6appendEPKciPNS_6memo_tE(%class.String* %5, i8* %7, i32 %9, %"struct.String::memo_t"* %13)
  ret %class.String* %5
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZNK6String7compactEv(%class.String* noalias sret, %class.String*) #2 comdat align 2 {
  %3 = alloca %class.String*, align 8
  store %class.String* %1, %class.String** %3, align 8
  %4 = load %class.String*, %class.String** %3, align 8
  %5 = getelementptr inbounds %class.String, %class.String* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %5, i32 0, i32 2
  %7 = load %"struct.String::memo_t"*, %"struct.String::memo_t"** %6, align 8
  %8 = icmp ne %"struct.String::memo_t"* %7, null
  br i1 %8, label %9, label %27

; <label>:9:                                      ; preds = %2
  %10 = getelementptr inbounds %class.String, %class.String* %4, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %10, i32 0, i32 2
  %12 = load %"struct.String::memo_t"*, %"struct.String::memo_t"** %11, align 8
  %13 = getelementptr inbounds %"struct.String::memo_t", %"struct.String::memo_t"* %12, i32 0, i32 0
  %14 = load volatile i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %27, label %16

; <label>:16:                                     ; preds = %9
  %17 = getelementptr inbounds %class.String, %class.String* %4, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %17, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %19, 256
  %21 = getelementptr inbounds %class.String, %class.String* %4, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %21, i32 0, i32 2
  %23 = load %"struct.String::memo_t"*, %"struct.String::memo_t"** %22, align 8
  %24 = getelementptr inbounds %"struct.String::memo_t", %"struct.String::memo_t"* %23, i32 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp uge i32 %20, %25
  br i1 %26, label %27, label %28

; <label>:27:                                     ; preds = %16, %9, %2
  call void @_ZN6StringC2ERKS_(%class.String* %0, %class.String* dereferenceable(24) %4)
  br label %40

; <label>:28:                                     ; preds = %16
  %29 = getelementptr inbounds %class.String, %class.String* %4, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %29, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %class.String, %class.String* %4, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %32, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %class.String, %class.String* %4, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %35, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %34, i64 %38
  call void @_ZN6StringC2EPKcS1_(%class.String* %0, i8* %31, i8* %39)
  br label %40

; <label>:40:                                     ; preds = %28, %27
  ret void
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer13lexeme_stringEi(%class.String* noalias sret, i32) #2 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca [14 x i8], align 1
  %5 = alloca i8*, align 8
  store i32 %1, i32* %3, align 4
  %6 = load i32, i32* %3, align 4
  %7 = icmp sge i32 %6, 256
  br i1 %7, label %8, label %32

; <label>:8:                                      ; preds = %2
  %9 = load i32, i32* %3, align 4
  %10 = icmp slt i32 %9, 267
  br i1 %10, label %11, label %32

; <label>:11:                                     ; preds = %8
  %12 = load i32, i32* %3, align 4
  %13 = sub nsw i32 %12, 256
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZZN5Lexer13lexeme_stringEiE7offsets, i32 0, i32 0), i64 %14
  store i8* %15, i8** %5, align 8
  %16 = load i8*, i8** %5, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 0
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @_ZZN5Lexer13lexeme_stringEiE5names, i32 0, i32 0), i64 %20
  %22 = load i8*, i8** %5, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 1
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = load i8*, i8** %5, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 0
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = sub nsw i32 %25, %29
  %31 = sub nsw i32 %30, 1
  call void @_ZN6String11make_stableEPKci(%class.String* sret %0, i8* %21, i32 %31)
  br label %48

; <label>:32:                                     ; preds = %8, %2
  %33 = load i32, i32* %3, align 4
  %34 = icmp sge i32 %33, 32
  br i1 %34, label %35, label %43

; <label>:35:                                     ; preds = %32
  %36 = load i32, i32* %3, align 4
  %37 = icmp slt i32 %36, 127
  br i1 %37, label %38, label %43

; <label>:38:                                     ; preds = %35
  %39 = getelementptr inbounds [14 x i8], [14 x i8]* %4, i32 0, i32 0
  %40 = load i32, i32* %3, align 4
  %41 = call i32 (i8*, i8*, ...) @sprintf(i8* %39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i32 0, i32 0), i32 %40) #9
  %42 = getelementptr inbounds [14 x i8], [14 x i8]* %4, i32 0, i32 0
  call void @_ZN6StringC2EPKc(%class.String* %0, i8* %42)
  br label %48

; <label>:43:                                     ; preds = %35, %32
  %44 = getelementptr inbounds [14 x i8], [14 x i8]* %4, i32 0, i32 0
  %45 = load i32, i32* %3, align 4
  %46 = call i32 (i8*, i8*, ...) @sprintf(i8* %44, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i32 0, i32 0), i32 %45) #9
  %47 = getelementptr inbounds [14 x i8], [14 x i8]* %4, i32 0, i32 0
  call void @_ZN6StringC2EPKc(%class.String* %0, i8* %47)
  br label %48

; <label>:48:                                     ; preds = %43, %38, %11
  ret void
}

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #4

; Function Attrs: noinline optnone uwtable
define zeroext i1 @_ZN5Lexer6expectEib(%class.Lexer*, i32, i1 zeroext) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i1, align 1
  %5 = alloca %class.Lexer*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca %class.String, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca %class.Lexeme, align 8
  %12 = alloca i8*
  %13 = alloca i32
  %14 = alloca i32
  %15 = alloca %class.String, align 8
  store %class.Lexer* %0, %class.Lexer** %5, align 8
  store i32 %1, i32* %6, align 4
  %16 = zext i1 %2 to i8
  store i8 %16, i8* %7, align 1
  %17 = load %class.Lexer*, %class.Lexer** %5, align 8
  %18 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 5
  %19 = load i32, i32* %18, align 8
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %35

; <label>:21:                                     ; preds = %3
  %22 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 4
  %23 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 5
  %24 = load i32, i32* %23, align 8
  %25 = sub nsw i32 %24, 1
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [2 x %class.Lexeme], [2 x %class.Lexeme]* %22, i64 0, i64 %26
  %28 = load i32, i32* %6, align 4
  %29 = call zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %27, i32 %28)
  br i1 %29, label %30, label %34

; <label>:30:                                     ; preds = %21
  %31 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 5
  %32 = load i32, i32* %31, align 8
  %33 = add nsw i32 %32, -1
  store i32 %33, i32* %31, align 8
  store i1 true, i1* %4, align 1
  br label %86

; <label>:34:                                     ; preds = %21
  br label %72

; <label>:35:                                     ; preds = %3
  %36 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 1
  %37 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %36, i32 0, i32 3
  call void @_ZN6StringC2ERKS_(%class.String* %8, %class.String* dereferenceable(24) %37)
  %38 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 1
  %39 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %38, i32 0, i32 5
  %40 = load i32, i32* %39, align 8
  store i32 %40, i32* %9, align 4
  %41 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 1
  %42 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %41, i32 0, i32 2
  %43 = load i8*, i8** %42, align 8
  store i8* %43, i8** %10, align 8
  invoke void @_ZN5Lexer3lexEv(%class.Lexeme* sret %11, %class.Lexer* %17)
          to label %44 unwind label %49

; <label>:44:                                     ; preds = %35
  %45 = load i32, i32* %6, align 4
  %46 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %11, i32 %45)
          to label %47 unwind label %53

; <label>:47:                                     ; preds = %44
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %11) #9
  br i1 %46, label %48, label %57

; <label>:48:                                     ; preds = %47
  store i1 true, i1* %4, align 1
  store i32 1, i32* %14, align 4
  br label %68

; <label>:49:                                     ; preds = %57, %35
  %50 = landingpad { i8*, i32 }
          cleanup
  %51 = extractvalue { i8*, i32 } %50, 0
  store i8* %51, i8** %12, align 8
  %52 = extractvalue { i8*, i32 } %50, 1
  store i32 %52, i32* %13, align 4
  br label %71

; <label>:53:                                     ; preds = %44
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %12, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %13, align 4
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %11) #9
  br label %71

; <label>:57:                                     ; preds = %47
  %58 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 1
  %59 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %58, i32 0, i32 3
  %60 = invoke dereferenceable(24) %class.String* @_ZN6StringaSERKS_(%class.String* %59, %class.String* dereferenceable(24) %8)
          to label %61 unwind label %49

; <label>:61:                                     ; preds = %57
  %62 = load i32, i32* %9, align 4
  %63 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 1
  %64 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %63, i32 0, i32 5
  store i32 %62, i32* %64, align 8
  %65 = load i8*, i8** %10, align 8
  %66 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 1
  %67 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %66, i32 0, i32 2
  store i8* %65, i8** %67, align 8
  store i32 0, i32* %14, align 4
  br label %68

; <label>:68:                                     ; preds = %61, %48
  call void @_ZN6StringD2Ev(%class.String* %8) #9
  %69 = load i32, i32* %14, align 4
  switch i32 %69, label %93 [
    i32 0, label %70
    i32 1, label %86
  ]

; <label>:70:                                     ; preds = %68
  br label %72

; <label>:71:                                     ; preds = %53, %49
  call void @_ZN6StringD2Ev(%class.String* %8) #9
  br label %88

; <label>:72:                                     ; preds = %70, %34
  %73 = load i8, i8* %7, align 1
  %74 = trunc i8 %73 to i1
  br i1 %74, label %85, label %75

; <label>:75:                                     ; preds = %72
  %76 = load i32, i32* %6, align 4
  call void @_ZN5Lexer13lexeme_stringEi(%class.String* sret %15, i32 %76)
  %77 = invoke i8* @_ZNK6String5c_strEv(%class.String* %15)
          to label %78 unwind label %81

; <label>:78:                                     ; preds = %75
  %79 = invoke i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38, i32 0, i32 0), i8* %77)
          to label %80 unwind label %81

; <label>:80:                                     ; preds = %78
  call void @_ZN6StringD2Ev(%class.String* %15) #9
  br label %85

; <label>:81:                                     ; preds = %78, %75
  %82 = landingpad { i8*, i32 }
          cleanup
  %83 = extractvalue { i8*, i32 } %82, 0
  store i8* %83, i8** %12, align 8
  %84 = extractvalue { i8*, i32 } %82, 1
  store i32 %84, i32* %13, align 4
  call void @_ZN6StringD2Ev(%class.String* %15) #9
  br label %88

; <label>:85:                                     ; preds = %80, %72
  store i1 false, i1* %4, align 1
  br label %86

; <label>:86:                                     ; preds = %85, %68, %30
  %87 = load i1, i1* %4, align 1
  ret i1 %87

; <label>:88:                                     ; preds = %81, %71
  %89 = load i8*, i8** %12, align 8
  %90 = load i32, i32* %13, align 4
  %91 = insertvalue { i8*, i32 } undef, i8* %89, 0
  %92 = insertvalue { i8*, i32 } %91, i32 %90, 1
  resume { i8*, i32 } %92

; <label>:93:                                     ; preds = %68
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme*, i32) #0 comdat align 2 {
  %3 = alloca %class.Lexeme*, align 8
  %4 = alloca i32, align 4
  store %class.Lexeme* %0, %class.Lexeme** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Lexeme*, %class.Lexeme** %3, align 8
  %6 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %5, i32 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = icmp eq i32 %7, %8
  ret i1 %9
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN5Lexer3lexEv(%class.Lexeme* noalias sret, %class.Lexer*) #2 comdat align 2 {
  %3 = alloca %class.Lexer*, align 8
  store %class.Lexer* %1, %class.Lexer** %3, align 8
  %4 = load %class.Lexer*, %class.Lexer** %3, align 8
  %5 = getelementptr inbounds %class.Lexer, %class.Lexer* %4, i32 0, i32 5
  %6 = load i32, i32* %5, align 8
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %8, label %15

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %class.Lexer, %class.Lexer* %4, i32 0, i32 4
  %10 = getelementptr inbounds %class.Lexer, %class.Lexer* %4, i32 0, i32 5
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, -1
  store i32 %12, i32* %10, align 8
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [2 x %class.Lexeme], [2 x %class.Lexeme]* %9, i64 0, i64 %13
  call void @_ZN6LexemeC2ERKS_(%class.Lexeme* %0, %class.Lexeme* dereferenceable(32) %14)
  br label %16

; <label>:15:                                     ; preds = %2
  call void @_ZN5Lexer11next_lexemeEv(%class.Lexeme* sret %0, %class.Lexer* %4)
  br label %16

; <label>:16:                                     ; preds = %15, %8
  ret void
}

; Function Attrs: noinline optnone uwtable
define void @_ZNK5Lexer9FileState8landmarkEv(%class.String* noalias sret, %"struct.Lexer::FileState"*) #2 align 2 {
  %3 = alloca %"struct.Lexer::FileState"*, align 8
  store %"struct.Lexer::FileState"* %1, %"struct.Lexer::FileState"** %3, align 8
  %4 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %3, align 8
  %5 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %4, i32 0, i32 3
  %6 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %4, i32 0, i32 5
  %7 = load i32, i32* %6, align 8
  call void @_ZN5Lexer8Compound15landmark_stringERK6Stringj(%class.String* sret %0, %class.String* dereferenceable(24) %5, i32 %7)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN5Lexer8Compound15landmark_stringERK6Stringj(%class.String* noalias sret, %class.String* dereferenceable(24), i32) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.String*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.String, align 8
  %7 = alloca %class.String, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = alloca %class.String, align 8
  %11 = alloca %class.String, align 8
  %12 = alloca %class.String, align 8
  store %class.String* %1, %class.String** %4, align 8
  store i32 %2, i32* %5, align 4
  %13 = load i32, i32* %5, align 4
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %17, label %15

; <label>:15:                                     ; preds = %3
  %16 = load %class.String*, %class.String** %4, align 8
  call void @_ZN6StringC2ERKS_(%class.String* %0, %class.String* dereferenceable(24) %16)
  br label %67

; <label>:17:                                     ; preds = %3
  %18 = load %class.String*, %class.String** %4, align 8
  %19 = call { i64, i64 } @_ZNK6StringcvMS_KFivEEv(%class.String* %18)
  %20 = extractvalue { i64, i64 } %19, 0
  %21 = icmp ne i64 %20, 0
  br i1 %21, label %22, label %47

; <label>:22:                                     ; preds = %17
  %23 = load %class.String*, %class.String** %4, align 8
  %24 = call signext i8 @_ZNK6String4backEv(%class.String* %23)
  %25 = sext i8 %24 to i32
  %26 = icmp eq i32 %25, 58
  br i1 %26, label %33, label %27

; <label>:27:                                     ; preds = %22
  %28 = load %class.String*, %class.String** %4, align 8
  %29 = call signext i8 @_ZNK6String4backEv(%class.String* %28)
  %30 = zext i8 %29 to i32
  %31 = call i32 @isspace(i32 %30) #13
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %47

; <label>:33:                                     ; preds = %27, %22
  %34 = load %class.String*, %class.String** %4, align 8
  call void @_ZN6StringC2ERKS_(%class.String* %6, %class.String* dereferenceable(24) %34)
  %35 = load i32, i32* %5, align 4
  invoke void @_ZN6StringC1Ej(%class.String* %7, i32 %35)
          to label %36 unwind label %38

; <label>:36:                                     ; preds = %33
  invoke void @_Zpl6StringRKS_(%class.String* sret %0, %class.String* %6, %class.String* dereferenceable(24) %7)
          to label %37 unwind label %42

; <label>:37:                                     ; preds = %36
  call void @_ZN6StringD2Ev(%class.String* %7) #9
  call void @_ZN6StringD2Ev(%class.String* %6) #9
  br label %67

; <label>:38:                                     ; preds = %33
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = extractvalue { i8*, i32 } %39, 0
  store i8* %40, i8** %8, align 8
  %41 = extractvalue { i8*, i32 } %39, 1
  store i32 %41, i32* %9, align 4
  br label %46

; <label>:42:                                     ; preds = %36
  %43 = landingpad { i8*, i32 }
          cleanup
  %44 = extractvalue { i8*, i32 } %43, 0
  store i8* %44, i8** %8, align 8
  %45 = extractvalue { i8*, i32 } %43, 1
  store i32 %45, i32* %9, align 4
  call void @_ZN6StringD2Ev(%class.String* %7) #9
  br label %46

; <label>:46:                                     ; preds = %42, %38
  call void @_ZN6StringD2Ev(%class.String* %6) #9
  br label %68

; <label>:47:                                     ; preds = %27, %17
  %48 = load %class.String*, %class.String** %4, align 8
  call void @_ZN6StringC2ERKS_(%class.String* %11, %class.String* dereferenceable(24) %48)
  invoke void @_Zpl6StringPKc(%class.String* sret %10, %class.String* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125, i32 0, i32 0))
          to label %49 unwind label %53

; <label>:49:                                     ; preds = %47
  %50 = load i32, i32* %5, align 4
  invoke void @_ZN6StringC1Ej(%class.String* %12, i32 %50)
          to label %51 unwind label %57

; <label>:51:                                     ; preds = %49
  invoke void @_Zpl6StringRKS_(%class.String* sret %0, %class.String* %10, %class.String* dereferenceable(24) %12)
          to label %52 unwind label %61

; <label>:52:                                     ; preds = %51
  call void @_ZN6StringD2Ev(%class.String* %12) #9
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  br label %67

; <label>:53:                                     ; preds = %47
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %8, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %9, align 4
  br label %66

; <label>:57:                                     ; preds = %49
  %58 = landingpad { i8*, i32 }
          cleanup
  %59 = extractvalue { i8*, i32 } %58, 0
  store i8* %59, i8** %8, align 8
  %60 = extractvalue { i8*, i32 } %58, 1
  store i32 %60, i32* %9, align 4
  br label %65

; <label>:61:                                     ; preds = %51
  %62 = landingpad { i8*, i32 }
          cleanup
  %63 = extractvalue { i8*, i32 } %62, 0
  store i8* %63, i8** %8, align 8
  %64 = extractvalue { i8*, i32 } %62, 1
  store i32 %64, i32* %9, align 4
  call void @_ZN6StringD2Ev(%class.String* %12) #9
  br label %65

; <label>:65:                                     ; preds = %61, %57
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  br label %66

; <label>:66:                                     ; preds = %65, %53
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  br label %68

; <label>:67:                                     ; preds = %52, %37, %15
  ret void

; <label>:68:                                     ; preds = %66, %46
  %69 = load i8*, i8** %8, align 8
  %70 = load i32, i32* %9, align 4
  %71 = insertvalue { i8*, i32 } undef, i8* %69, 0
  %72 = insertvalue { i8*, i32 } %71, i32 %70, 1
  resume { i8*, i32 } %72
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #9

; Function Attrs: noinline optnone uwtable
define linkonce_odr i32 @_ZN12ErrorHandler8xmessageERK6StringS2_PKcP13__va_list_tag(%class.ErrorHandler*, %class.String* dereferenceable(24), %class.String* dereferenceable(24), i8*, %struct.__va_list_tag*) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %class.ErrorHandler*, align 8
  %7 = alloca %class.String*, align 8
  %8 = alloca %class.String*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.__va_list_tag*, align 8
  %11 = alloca %class.String, align 8
  %12 = alloca i8*
  %13 = alloca i32
  store %class.ErrorHandler* %0, %class.ErrorHandler** %6, align 8
  store %class.String* %1, %class.String** %7, align 8
  store %class.String* %2, %class.String** %8, align 8
  store i8* %3, i8** %9, align 8
  store %struct.__va_list_tag* %4, %struct.__va_list_tag** %10, align 8
  %14 = load %class.ErrorHandler*, %class.ErrorHandler** %6, align 8
  %15 = load %class.String*, %class.String** %7, align 8
  %16 = load %class.String*, %class.String** %8, align 8
  %17 = bitcast %class.ErrorHandler* %14 to void (%class.String*, %class.ErrorHandler*, i8*, %struct.__va_list_tag*)***
  %18 = load void (%class.String*, %class.ErrorHandler*, i8*, %struct.__va_list_tag*)**, void (%class.String*, %class.ErrorHandler*, i8*, %struct.__va_list_tag*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.String*, %class.ErrorHandler*, i8*, %struct.__va_list_tag*)*, void (%class.String*, %class.ErrorHandler*, i8*, %struct.__va_list_tag*)** %18, i64 2
  %20 = load void (%class.String*, %class.ErrorHandler*, i8*, %struct.__va_list_tag*)*, void (%class.String*, %class.ErrorHandler*, i8*, %struct.__va_list_tag*)** %19, align 8
  %21 = load i8*, i8** %9, align 8
  %22 = load %struct.__va_list_tag*, %struct.__va_list_tag** %10, align 8
  call void %20(%class.String* sret %11, %class.ErrorHandler* %14, i8* %21, %struct.__va_list_tag* %22)
  %23 = invoke i32 @_ZN12ErrorHandler8xmessageERK6StringS2_S2_(%class.ErrorHandler* %14, %class.String* dereferenceable(24) %15, %class.String* dereferenceable(24) %16, %class.String* dereferenceable(24) %11)
          to label %24 unwind label %25

; <label>:24:                                     ; preds = %5
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  ret i32 %23

; <label>:25:                                     ; preds = %5
  %26 = landingpad { i8*, i32 }
          cleanup
  %27 = extractvalue { i8*, i32 } %26, 0
  store i8* %27, i8** %12, align 8
  %28 = extractvalue { i8*, i32 } %26, 1
  store i32 %28, i32* %13, align 4
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  br label %29

; <label>:29:                                     ; preds = %25
  %30 = load i8*, i8** %12, align 8
  %31 = load i32, i32* %13, align 4
  %32 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33
}

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #9

; Function Attrs: noinline optnone uwtable
define i32 @_ZN5Lexer13lerror_syntaxERK6Lexeme(%class.Lexer*, %class.Lexeme* dereferenceable(32)) #2 align 2 {
  %3 = alloca %class.Lexer*, align 8
  %4 = alloca %class.Lexeme*, align 8
  store %class.Lexer* %0, %class.Lexer** %3, align 8
  store %class.Lexeme* %1, %class.Lexeme** %4, align 8
  %5 = load %class.Lexer*, %class.Lexer** %3, align 8
  %6 = load %class.Lexeme*, %class.Lexeme** %4, align 8
  %7 = call dereferenceable(24) %class.String* @_ZNK6Lexeme6stringEv(%class.Lexeme* %6)
  %8 = call i8* @_ZNK6String5c_strEv(%class.String* %7)
  %9 = call i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %5, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.39, i32 0, i32 0), i8* %8)
  ret i32 %9
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(24) %class.String* @_ZNK6Lexeme6stringEv(%class.Lexeme*) #0 comdat align 2 {
  %2 = alloca %class.Lexeme*, align 8
  store %class.Lexeme* %0, %class.Lexeme** %2, align 8
  %3 = load %class.Lexeme*, %class.Lexeme** %2, align 8
  %4 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %3, i32 0, i32 1
  ret %class.String* %4
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6VectorIN5Lexer11ElementTypeEE9push_backI13fast_argumentIS1_Lb1EEEENT_23enable_rvalue_referenceEOS1_(%class.Vector.14*, %"struct.Lexer::ElementType"* dereferenceable(48)) #2 comdat align 2 {
  %3 = alloca %class.Vector.14*, align 8
  %4 = alloca %"struct.Lexer::ElementType"*, align 8
  store %class.Vector.14* %0, %class.Vector.14** %3, align 8
  store %"struct.Lexer::ElementType"* %1, %"struct.Lexer::ElementType"** %4, align 8
  %5 = load %class.Vector.14*, %class.Vector.14** %3, align 8
  %6 = getelementptr inbounds %class.Vector.14, %class.Vector.14* %5, i32 0, i32 0
  %7 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %4, align 8
  %8 = call %"struct.Lexer::ElementType"* @_ZN18typed_array_memoryIN5Lexer11ElementTypeEE4castEPS1_(%"struct.Lexer::ElementType"* %7)
  call void @_ZN13vector_memoryI18typed_array_memoryIN5Lexer11ElementTypeEEE19move_construct_backEPS2_(%class.vector_memory.15* %6, %"struct.Lexer::ElementType"* %8)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #10

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN5Lexer11ElementTypeC2Ev(%"struct.Lexer::ElementType"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"struct.Lexer::ElementType"*, align 8
  store %"struct.Lexer::ElementType"* %0, %"struct.Lexer::ElementType"** %2, align 8
  %3 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %2, align 8
  %4 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %3, i32 0, i32 2
  call void @_ZN6StringC2Ev(%class.String* %4)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN5Lexer11ElementTypeD2Ev(%"struct.Lexer::ElementType"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.Lexer::ElementType"*, align 8
  store %"struct.Lexer::ElementType"* %0, %"struct.Lexer::ElementType"** %2, align 8
  %3 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %2, align 8
  %4 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %3, i32 0, i32 2
  call void @_ZN6StringD2Ev(%class.String* %4) #9
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr zeroext i1 @_ZN9HashTableI6StringiE3setERKS0_RKi(%class.HashTable*, %class.String* dereferenceable(24), i32* dereferenceable(4)) #2 comdat align 2 {
  %4 = alloca i1, align 1
  %5 = alloca %class.HashTable*, align 8
  %6 = alloca %class.String*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %class.HashContainer_iterator, align 8
  %9 = alloca %"struct.HashTable<Pair<const String, int>, void>::elt"*, align 8
  store %class.HashTable* %0, %class.HashTable** %5, align 8
  store %class.String* %1, %class.String** %6, align 8
  store i32* %2, i32** %7, align 8
  %10 = load %class.HashTable*, %class.HashTable** %5, align 8
  %11 = getelementptr inbounds %class.HashTable, %class.HashTable* %10, i32 0, i32 0
  %12 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %11, i32 0, i32 0
  %13 = load %class.String*, %class.String** %6, align 8
  call void @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE4findERS3_(%class.HashContainer_iterator* sret %8, %class.HashContainer* %12, %class.String* dereferenceable(24) %13)
  %14 = bitcast %class.HashContainer_iterator* %8 to %class.HashContainer_const_iterator*
  %15 = call { i64, i64 } @_ZNK28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEcvMS9_KFPS6_vEEv(%class.HashContainer_const_iterator* %14)
  %16 = extractvalue { i64, i64 } %15, 0
  %17 = icmp ne i64 %16, 0
  br i1 %17, label %18, label %25

; <label>:18:                                     ; preds = %3
  %19 = load i32*, i32** %7, align 8
  %20 = load i32, i32* %19, align 4
  %21 = bitcast %class.HashContainer_iterator* %8 to %class.HashContainer_const_iterator*
  %22 = call %"struct.HashTable<Pair<const String, int>, void>::elt"* @_ZNK28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEptEv(%class.HashContainer_const_iterator* %21)
  %23 = getelementptr inbounds %"struct.HashTable<Pair<const String, int>, void>::elt", %"struct.HashTable<Pair<const String, int>, void>::elt"* %22, i32 0, i32 0
  %24 = getelementptr inbounds %struct.Pair, %struct.Pair* %23, i32 0, i32 1
  store i32 %20, i32* %24, align 8
  br label %46

; <label>:25:                                     ; preds = %3
  %26 = getelementptr inbounds %class.HashTable, %class.HashTable* %10, i32 0, i32 0
  %27 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %26, i32 0, i32 1
  %28 = bitcast %class.SizedHashAllocator* %27 to %class.HashAllocator*
  %29 = call i8* @_ZN13HashAllocator8allocateEv(%class.HashAllocator* %28)
  %30 = bitcast i8* %29 to %"struct.HashTable<Pair<const String, int>, void>::elt"*
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %30, %"struct.HashTable<Pair<const String, int>, void>::elt"** %9, align 8
  %31 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %9, align 8
  %32 = icmp ne %"struct.HashTable<Pair<const String, int>, void>::elt"* %31, null
  br i1 %32, label %33, label %45

; <label>:33:                                     ; preds = %25
  %34 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %9, align 8
  %35 = getelementptr inbounds %"struct.HashTable<Pair<const String, int>, void>::elt", %"struct.HashTable<Pair<const String, int>, void>::elt"* %34, i32 0, i32 0
  %36 = bitcast %struct.Pair* %35 to i8*
  %37 = bitcast i8* %36 to %struct.Pair*
  %38 = load %class.String*, %class.String** %6, align 8
  %39 = load i32*, i32** %7, align 8
  %40 = load i32, i32* %39, align 4
  call void @_ZN4PairIK6StringiEC2ERS1_i(%struct.Pair* %37, %class.String* dereferenceable(24) %38, i32 %40)
  %41 = getelementptr inbounds %class.HashTable, %class.HashTable* %10, i32 0, i32 0
  %42 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %41, i32 0, i32 0
  %43 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %9, align 8
  %44 = call %"struct.HashTable<Pair<const String, int>, void>::elt"* @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE3setER22HashContainer_iteratorIS6_S8_EPS6_b(%class.HashContainer* %42, %class.HashContainer_iterator* dereferenceable(32) %8, %"struct.HashTable<Pair<const String, int>, void>::elt"* %43, i1 zeroext true)
  store i1 true, i1* %4, align 1
  br label %47

; <label>:45:                                     ; preds = %25
  br label %46

; <label>:46:                                     ; preds = %45, %18
  store i1 false, i1* %4, align 1
  br label %47

; <label>:47:                                     ; preds = %46, %33
  %48 = load i1, i1* %4, align 1
  ret i1 %48
}

; Function Attrs: noinline optnone uwtable
define i32 @_ZN5Lexer18force_element_typeE6Stringb(%class.Lexer*, %class.String*, i1 zeroext) #2 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %class.Lexer*, align 8
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  store %class.Lexer* %0, %class.Lexer** %5, align 8
  %8 = zext i1 %2 to i8
  store i8 %8, i8* %6, align 1
  %9 = load %class.Lexer*, %class.Lexer** %5, align 8
  %10 = call i32 @_ZNK5Lexer12element_typeERK6String(%class.Lexer* %9, %class.String* dereferenceable(24) %1)
  store i32 %10, i32* %7, align 4
  %11 = load i32, i32* %7, align 4
  %12 = icmp sge i32 %11, 0
  br i1 %12, label %13, label %15

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* %7, align 4
  store i32 %14, i32* %4, align 4
  br label %23

; <label>:15:                                     ; preds = %3
  %16 = load i8, i8* %6, align 1
  %17 = trunc i8 %16 to i1
  br i1 %17, label %18, label %21

; <label>:18:                                     ; preds = %15
  %19 = call i8* @_ZNK6String5c_strEv(%class.String* %1)
  %20 = call i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %9, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.41, i32 0, i32 0), i8* %19)
  br label %21

; <label>:21:                                     ; preds = %18, %15
  %22 = call i32 @_ZN5Lexer16add_element_typeERK6StringPFP7ElementmEmb(%class.Lexer* %9, %class.String* dereferenceable(24) %1, %class.Element* (i64)* @_ZL21error_element_factorym, i64 0, i1 zeroext true)
  store i32 %22, i32* %4, align 4
  br label %23

; <label>:23:                                     ; preds = %21, %13
  %24 = load i32, i32* %4, align 4
  ret i32 %24
}

; Function Attrs: noinline optnone uwtable
define i32 @_ZN5Lexer19remove_element_typeEiPi(%class.Lexer*, i32, i32*) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i32, align 4
  %5 = alloca %class.Lexer*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca %class.String*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.Lexer::Compound"*, align 8
  %11 = alloca %class.String, align 8
  %12 = alloca i8*
  %13 = alloca i32
  store %class.Lexer* %0, %class.Lexer** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32* %2, i32** %7, align 8
  %14 = load %class.Lexer*, %class.Lexer** %5, align 8
  %15 = load i32, i32* %6, align 4
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %29, label %17

; <label>:17:                                     ; preds = %3
  %18 = load i32, i32* %6, align 4
  %19 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 8
  %20 = call i32 @_ZNK6VectorIN5Lexer11ElementTypeEE4sizeEv(%class.Vector.14* %19)
  %21 = icmp sge i32 %18, %20
  br i1 %21, label %29, label %22

; <label>:22:                                     ; preds = %17
  %23 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 8
  %24 = load i32, i32* %6, align 4
  %25 = call dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %23, i32 %24)
  %26 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %25, i32 0, i32 0
  %27 = load %class.Element* (i64)*, %class.Element* (i64)** %26, align 8
  %28 = icmp eq %class.Element* (i64)* %27, null
  br i1 %28, label %29, label %30

; <label>:29:                                     ; preds = %22, %17, %3
  store i32 -1, i32* %4, align 4
  br label %173

; <label>:30:                                     ; preds = %22
  %31 = load i32*, i32** %7, align 8
  %32 = icmp ne i32* %31, null
  br i1 %32, label %33, label %39

; <label>:33:                                     ; preds = %30
  %34 = load i32*, i32** %7, align 8
  %35 = load i32, i32* %34, align 4
  %36 = and i32 %35, 2147483647
  %37 = load i32, i32* %6, align 4
  %38 = icmp ne i32 %36, %37
  br i1 %38, label %39, label %63

; <label>:39:                                     ; preds = %33, %30
  %40 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 9
  store i32* %40, i32** %7, align 8
  br label %41

; <label>:41:                                     ; preds = %55, %39
  %42 = load i32*, i32** %7, align 8
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, 2147483647
  %45 = icmp ne i32 %44, 2147483647
  br i1 %45, label %46, label %52

; <label>:46:                                     ; preds = %41
  %47 = load i32*, i32** %7, align 8
  %48 = load i32, i32* %47, align 4
  %49 = and i32 %48, 2147483647
  %50 = load i32, i32* %6, align 4
  %51 = icmp ne i32 %49, %50
  br label %52

; <label>:52:                                     ; preds = %46, %41
  %53 = phi i1 [ false, %41 ], [ %51, %46 ]
  br i1 %53, label %54, label %62

; <label>:54:                                     ; preds = %52
  br label %55

; <label>:55:                                     ; preds = %54
  %56 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 8
  %57 = load i32*, i32** %7, align 8
  %58 = load i32, i32* %57, align 4
  %59 = and i32 %58, 2147483647
  %60 = call dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %56, i32 %59)
  %61 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %60, i32 0, i32 3
  store i32* %61, i32** %7, align 8
  br label %41

; <label>:62:                                     ; preds = %52
  br label %63

; <label>:63:                                     ; preds = %62, %33
  %64 = load i32*, i32** %7, align 8
  %65 = icmp ne i32* %64, null
  br i1 %65, label %66, label %67

; <label>:66:                                     ; preds = %63
  br label %69

; <label>:67:                                     ; preds = %63
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i32 1015, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__PRETTY_FUNCTION__._ZN5Lexer19remove_element_typeEiPi, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %69

; <label>:69:                                     ; preds = %68, %66
  %70 = load i32*, i32** %7, align 8
  %71 = load i32, i32* %70, align 4
  %72 = and i32 %71, 2147483647
  %73 = load i32, i32* %6, align 4
  %74 = icmp eq i32 %72, %73
  br i1 %74, label %75, label %87

; <label>:75:                                     ; preds = %69
  %76 = load i32*, i32** %7, align 8
  %77 = load i32, i32* %76, align 4
  %78 = and i32 %77, -2147483648
  %79 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 8
  %80 = load i32, i32* %6, align 4
  %81 = call dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %79, i32 %80)
  %82 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %81, i32 0, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = and i32 %83, 2147483647
  %85 = or i32 %78, %84
  %86 = load i32*, i32** %7, align 8
  store i32 %85, i32* %86, align 4
  br label %87

; <label>:87:                                     ; preds = %75, %69
  %88 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 8
  %89 = load i32, i32* %6, align 4
  %90 = call dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %88, i32 %89)
  %91 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %90, i32 0, i32 2
  store %class.String* %91, %class.String** %8, align 8
  %92 = load %class.String*, %class.String** %8, align 8
  %93 = call { i64, i64 } @_ZNK6StringcvMS_KFivEEv(%class.String* %92)
  %94 = extractvalue { i64, i64 } %93, 0
  %95 = icmp ne i64 %94, 0
  br i1 %95, label %96, label %140

; <label>:96:                                     ; preds = %87
  %97 = load %class.String*, %class.String** %8, align 8
  %98 = call i32 @_ZNK5Lexer12element_typeERK6String(%class.Lexer* %14, %class.String* dereferenceable(24) %97)
  %99 = load i32, i32* %6, align 4
  %100 = icmp eq i32 %98, %99
  br i1 %100, label %101, label %140

; <label>:101:                                    ; preds = %96
  %102 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 8
  %103 = load i32, i32* %6, align 4
  %104 = call dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %102, i32 %103)
  %105 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %104, i32 0, i32 3
  %106 = load i32, i32* %105, align 8
  %107 = and i32 %106, 2147483647
  store i32 %107, i32* %9, align 4
  br label %108

; <label>:108:                                    ; preds = %121, %101
  %109 = load i32, i32* %9, align 4
  %110 = icmp ne i32 %109, 2147483647
  br i1 %110, label %111, label %118

; <label>:111:                                    ; preds = %108
  %112 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 8
  %113 = load i32, i32* %9, align 4
  %114 = call dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %112, i32 %113)
  %115 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %114, i32 0, i32 2
  %116 = load %class.String*, %class.String** %8, align 8
  %117 = call zeroext i1 @_ZneRK6StringS1_(%class.String* dereferenceable(24) %115, %class.String* dereferenceable(24) %116)
  br label %118

; <label>:118:                                    ; preds = %111, %108
  %119 = phi i1 [ false, %108 ], [ %117, %111 ]
  br i1 %119, label %120, label %128

; <label>:120:                                    ; preds = %118
  br label %121

; <label>:121:                                    ; preds = %120
  %122 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 8
  %123 = load i32, i32* %9, align 4
  %124 = call dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %122, i32 %123)
  %125 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %124, i32 0, i32 3
  %126 = load i32, i32* %125, align 8
  %127 = and i32 %126, 2147483647
  store i32 %127, i32* %9, align 4
  br label %108

; <label>:128:                                    ; preds = %118
  %129 = load i32, i32* %9, align 4
  %130 = icmp eq i32 %129, 2147483647
  br i1 %130, label %131, label %135

; <label>:131:                                    ; preds = %128
  %132 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 7
  %133 = load %class.String*, %class.String** %8, align 8
  %134 = call i64 @_ZN9HashTableI6StringiE5eraseERKS0_(%class.HashTable* %132, %class.String* dereferenceable(24) %133)
  br label %139

; <label>:135:                                    ; preds = %128
  %136 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 7
  %137 = load %class.String*, %class.String** %8, align 8
  %138 = call zeroext i1 @_ZN9HashTableI6StringiE3setERKS0_RKi(%class.HashTable* %136, %class.String* dereferenceable(24) %137, i32* dereferenceable(4) %9)
  br label %139

; <label>:139:                                    ; preds = %135, %131
  br label %140

; <label>:140:                                    ; preds = %139, %96, %87
  %141 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 8
  %142 = load i32, i32* %6, align 4
  %143 = call dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %141, i32 %142)
  %144 = call %"class.Lexer::Compound"* @_ZNK5Lexer11ElementType8compoundEv(%"struct.Lexer::ElementType"* %143)
  store %"class.Lexer::Compound"* %144, %"class.Lexer::Compound"** %10, align 8
  %145 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %10, align 8
  %146 = icmp ne %"class.Lexer::Compound"* %145, null
  br i1 %146, label %147, label %149

; <label>:147:                                    ; preds = %140
  %148 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %10, align 8
  call void @_ZN5Lexer8Compound5unuseEv(%"class.Lexer::Compound"* %148)
  br label %149

; <label>:149:                                    ; preds = %147, %140
  %150 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 8
  %151 = load i32, i32* %6, align 4
  %152 = call dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %150, i32 %151)
  %153 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %152, i32 0, i32 0
  store %class.Element* (i64)* null, %class.Element* (i64)** %153, align 8
  call void @_ZN6StringC2Ev(%class.String* %11)
  %154 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 8
  %155 = load i32, i32* %6, align 4
  %156 = invoke dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %154, i32 %155)
          to label %157 unwind label %169

; <label>:157:                                    ; preds = %149
  %158 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %156, i32 0, i32 2
  %159 = invoke dereferenceable(24) %class.String* @_ZN6StringaSEOS_(%class.String* %158, %class.String* dereferenceable(24) %11)
          to label %160 unwind label %169

; <label>:160:                                    ; preds = %157
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  %161 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 10
  %162 = load i32, i32* %161, align 4
  %163 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 8
  %164 = load i32, i32* %6, align 4
  %165 = call dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %163, i32 %164)
  %166 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %165, i32 0, i32 3
  store i32 %162, i32* %166, align 8
  %167 = load i32, i32* %6, align 4
  %168 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 10
  store i32 %167, i32* %168, align 4
  store i32 0, i32* %4, align 4
  br label %173

; <label>:169:                                    ; preds = %157, %149
  %170 = landingpad { i8*, i32 }
          cleanup
  %171 = extractvalue { i8*, i32 } %170, 0
  store i8* %171, i8** %12, align 8
  %172 = extractvalue { i8*, i32 } %170, 1
  store i32 %172, i32* %13, align 4
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  br label %175

; <label>:173:                                    ; preds = %160, %29
  %174 = load i32, i32* %4, align 4
  ret i32 %174

; <label>:175:                                    ; preds = %169
  %176 = load i8*, i8** %12, align 8
  %177 = load i32, i32* %13, align 4
  %178 = insertvalue { i8*, i32 } undef, i8* %176, 0
  %179 = insertvalue { i8*, i32 } %178, i32 %177, 1
  resume { i8*, i32 } %179
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr zeroext i1 @_ZneRK6StringS1_(%class.String* dereferenceable(24), %class.String* dereferenceable(24)) #2 comdat {
  %3 = alloca %class.String*, align 8
  %4 = alloca %class.String*, align 8
  store %class.String* %0, %class.String** %3, align 8
  store %class.String* %1, %class.String** %4, align 8
  %5 = load %class.String*, %class.String** %3, align 8
  %6 = load %class.String*, %class.String** %4, align 8
  %7 = call zeroext i1 @_ZeqRK6StringS1_(%class.String* dereferenceable(24) %5, %class.String* dereferenceable(24) %6)
  %8 = xor i1 %7, true
  ret i1 %8
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr i64 @_ZN9HashTableI6StringiE5eraseERKS0_(%class.HashTable*, %class.String* dereferenceable(24)) #2 comdat align 2 {
  %3 = alloca %class.HashTable*, align 8
  %4 = alloca %class.String*, align 8
  store %class.HashTable* %0, %class.HashTable** %3, align 8
  store %class.String* %1, %class.String** %4, align 8
  %5 = load %class.HashTable*, %class.HashTable** %3, align 8
  %6 = getelementptr inbounds %class.HashTable, %class.HashTable* %5, i32 0, i32 0
  %7 = load %class.String*, %class.String** %4, align 8
  %8 = call i64 @_ZN9HashTableI4PairIK6StringiEvE5eraseERS2_(%class.HashTable.13* %6, %class.String* dereferenceable(24) %7)
  ret i64 %8
}

; Function Attrs: noinline optnone uwtable
define void @_ZNK5Lexer18element_type_namesER6VectorI6StringE(%class.Lexer*, %class.Vector.0* dereferenceable(16)) #2 align 2 {
  %3 = alloca %class.Lexer*, align 8
  %4 = alloca %class.Vector.0*, align 8
  %5 = alloca %class.HashTable_const_iterator, align 8
  store %class.Lexer* %0, %class.Lexer** %3, align 8
  store %class.Vector.0* %1, %class.Vector.0** %4, align 8
  %6 = load %class.Lexer*, %class.Lexer** %3, align 8
  %7 = getelementptr inbounds %class.Lexer, %class.Lexer* %6, i32 0, i32 7
  call void @_ZNK9HashTableI6StringiE5beginEv(%class.HashTable_const_iterator* sret %5, %class.HashTable* %7)
  br label %8

; <label>:8:                                      ; preds = %21, %2
  %9 = call zeroext i1 @_ZNK24HashTable_const_iteratorI4PairIK6StringiEE4liveEv(%class.HashTable_const_iterator* %5)
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %8
  %11 = call dereferenceable(4) i32* @_ZNK24HashTable_const_iteratorI4PairIK6StringiEE5valueEv(%class.HashTable_const_iterator* %5)
  %12 = load i32, i32* %11, align 4
  %13 = icmp sge i32 %12, 0
  br i1 %13, label %14, label %20

; <label>:14:                                     ; preds = %10
  %15 = call dereferenceable(24) %class.String* @_ZNK24HashTable_const_iteratorI4PairIK6StringiEE3keyEv(%class.HashTable_const_iterator* %5)
  %16 = call zeroext i1 @_ZneRK6StringPKc(%class.String* dereferenceable(24) %15, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i32 0, i32 0))
  br i1 %16, label %17, label %20

; <label>:17:                                     ; preds = %14
  %18 = load %class.Vector.0*, %class.Vector.0** %4, align 8
  %19 = call dereferenceable(24) %class.String* @_ZNK24HashTable_const_iteratorI4PairIK6StringiEE3keyEv(%class.HashTable_const_iterator* %5)
  call void @_ZN6VectorI6StringE9push_backERKS0_(%class.Vector.0* %18, %class.String* dereferenceable(24) %19)
  br label %20

; <label>:20:                                     ; preds = %17, %14, %10
  br label %21

; <label>:21:                                     ; preds = %20
  call void @_ZN24HashTable_const_iteratorI4PairIK6StringiEEppEi(%class.HashTable_const_iterator* %5, i32 0)
  br label %8

; <label>:22:                                     ; preds = %8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZNK9HashTableI6StringiE5beginEv(%class.HashTable_const_iterator* noalias sret, %class.HashTable*) #2 comdat align 2 {
  %3 = alloca %class.HashTable*, align 8
  store %class.HashTable* %1, %class.HashTable** %3, align 8
  %4 = load %class.HashTable*, %class.HashTable** %3, align 8
  %5 = getelementptr inbounds %class.HashTable, %class.HashTable* %4, i32 0, i32 0
  call void @_ZNK9HashTableI4PairIK6StringiEvE5beginEv(%class.HashTable_const_iterator* sret %0, %class.HashTable.13* %5)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr zeroext i1 @_ZNK24HashTable_const_iteratorI4PairIK6StringiEE4liveEv(%class.HashTable_const_iterator*) #0 comdat align 2 {
  %2 = alloca %class.HashTable_const_iterator*, align 8
  store %class.HashTable_const_iterator* %0, %class.HashTable_const_iterator** %2, align 8
  %3 = load %class.HashTable_const_iterator*, %class.HashTable_const_iterator** %2, align 8
  %4 = getelementptr inbounds %class.HashTable_const_iterator, %class.HashTable_const_iterator* %3, i32 0, i32 0
  %5 = call { i64, i64 } @_ZNK28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEcvMS9_KFPS6_vEEv(%class.HashContainer_const_iterator* %4)
  %6 = extractvalue { i64, i64 } %5, 0
  %7 = icmp ne i64 %6, 0
  ret i1 %7
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNK24HashTable_const_iteratorI4PairIK6StringiEE5valueEv(%class.HashTable_const_iterator*) #0 comdat align 2 {
  %2 = alloca %class.HashTable_const_iterator*, align 8
  store %class.HashTable_const_iterator* %0, %class.HashTable_const_iterator** %2, align 8
  %3 = load %class.HashTable_const_iterator*, %class.HashTable_const_iterator** %2, align 8
  %4 = call dereferenceable(32) %struct.Pair* @_ZNK24HashTable_const_iteratorI4PairIK6StringiEEdeEv(%class.HashTable_const_iterator* %3)
  %5 = getelementptr inbounds %struct.Pair, %struct.Pair* %4, i32 0, i32 1
  ret i32* %5
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr zeroext i1 @_ZneRK6StringPKc(%class.String* dereferenceable(24), i8*) #2 comdat {
  %3 = alloca %class.String*, align 8
  %4 = alloca i8*, align 8
  store %class.String* %0, %class.String** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %class.String*, %class.String** %3, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = call zeroext i1 @_ZeqRK6StringPKc(%class.String* dereferenceable(24) %5, i8* %6)
  %8 = xor i1 %7, true
  ret i1 %8
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(24) %class.String* @_ZNK24HashTable_const_iteratorI4PairIK6StringiEE3keyEv(%class.HashTable_const_iterator*) #0 comdat align 2 {
  %2 = alloca %class.HashTable_const_iterator*, align 8
  store %class.HashTable_const_iterator* %0, %class.HashTable_const_iterator** %2, align 8
  %3 = load %class.HashTable_const_iterator*, %class.HashTable_const_iterator** %2, align 8
  %4 = call dereferenceable(32) %struct.Pair* @_ZNK24HashTable_const_iteratorI4PairIK6StringiEEdeEv(%class.HashTable_const_iterator* %3)
  %5 = getelementptr inbounds %struct.Pair, %struct.Pair* %4, i32 0, i32 0
  ret %class.String* %5
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6VectorI6StringE9push_backERKS0_(%class.Vector.0*, %class.String* dereferenceable(24)) #2 comdat align 2 {
  %3 = alloca %class.Vector.0*, align 8
  %4 = alloca %class.String*, align 8
  store %class.Vector.0* %0, %class.Vector.0** %3, align 8
  store %class.String* %1, %class.String** %4, align 8
  %5 = load %class.Vector.0*, %class.Vector.0** %3, align 8
  %6 = getelementptr inbounds %class.Vector.0, %class.Vector.0* %5, i32 0, i32 0
  %7 = load %class.String*, %class.String** %4, align 8
  %8 = call %class.String* @_ZN18typed_array_memoryI6StringE4castEPKS0_(%class.String* %7)
  call void @_ZN13vector_memoryI18typed_array_memoryI6StringEE9push_backEPKS1_(%class.vector_memory.1* %6, %class.String* %8)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN24HashTable_const_iteratorI4PairIK6StringiEEppEi(%class.HashTable_const_iterator*, i32) #2 comdat align 2 {
  %3 = alloca %class.HashTable_const_iterator*, align 8
  %4 = alloca i32, align 4
  store %class.HashTable_const_iterator* %0, %class.HashTable_const_iterator** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.HashTable_const_iterator*, %class.HashTable_const_iterator** %3, align 8
  %6 = getelementptr inbounds %class.HashTable_const_iterator, %class.HashTable_const_iterator* %5, i32 0, i32 0
  call void @_ZN28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEppEi(%class.HashContainer_const_iterator* %6, i32 0)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN6Router4PortC2Ev(%"struct.Router::Port"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.Router::Port"*, align 8
  store %"struct.Router::Port"* %0, %"struct.Router::Port"** %2, align 8
  %3 = load %"struct.Router::Port"*, %"struct.Router::Port"** %2, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZNK5Lexer8Compound16element_landmarkEi(%class.String* noalias sret, %"class.Lexer::Compound"*, i32) #2 comdat align 2 {
  %4 = alloca %"class.Lexer::Compound"*, align 8
  %5 = alloca i32, align 4
  store %"class.Lexer::Compound"* %1, %"class.Lexer::Compound"** %4, align 8
  store i32 %2, i32* %5, align 4
  %6 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %4, align 8
  %7 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %6, i32 0, i32 14
  %8 = load i32, i32* %5, align 4
  %9 = call dereferenceable(24) %class.String* @_ZNK6VectorI6StringEixEi(%class.Vector.0* %7, i32 %8)
  %10 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %6, i32 0, i32 15
  %11 = load i32, i32* %5, align 4
  %12 = call dereferenceable(4) i32* @_ZNK6VectorIjEixEi(%class.Vector.2* %10, i32 %11)
  %13 = load i32, i32* %12, align 4
  call void @_ZN5Lexer8Compound15landmark_stringERK6Stringj(%class.String* sret %0, %class.String* dereferenceable(24) %9, i32 %13)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #10

; Function Attrs: noinline optnone uwtable
define linkonce_odr i32 @_ZNK5Lexer8Compound5depthEv(%"class.Lexer::Compound"*) #2 comdat align 2 {
  %2 = alloca %"class.Lexer::Compound"*, align 8
  store %"class.Lexer::Compound"* %0, %"class.Lexer::Compound"** %2, align 8
  %3 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %2, align 8
  %4 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %3, i32 0, i32 4
  %5 = call i32 @_ZNK19VariableEnvironment5depthEv(%class.VariableEnvironment* %4)
  ret i32 %5
}

; Function Attrs: noinline optnone uwtable
define %"class.Lexer::TunnelEnd"* @_ZN5Lexer11find_tunnelERKN6Router4PortEbb(%class.Lexer*, %"struct.Router::Port"* dereferenceable(8), i1 zeroext, i1 zeroext) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.Lexer::TunnelEnd"*, align 8
  %6 = alloca %class.Lexer*, align 8
  %7 = alloca %"struct.Router::Port"*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %"class.Lexer::TunnelEnd"*, align 8
  %14 = alloca %"class.Lexer::TunnelEnd"*, align 8
  %15 = alloca %"class.Lexer::TunnelEnd"*, align 8
  %16 = alloca i8*
  %17 = alloca i32
  %18 = alloca %"class.Lexer::TunnelEnd"*, align 8
  %19 = alloca %"struct.Router::Port", align 4
  %20 = alloca %"class.Lexer::TunnelEnd"*, align 8
  store %class.Lexer* %0, %class.Lexer** %6, align 8
  store %"struct.Router::Port"* %1, %"struct.Router::Port"** %7, align 8
  %21 = zext i1 %2 to i8
  store i8 %21, i8* %8, align 1
  %22 = zext i1 %3 to i8
  store i8 %22, i8* %9, align 1
  %23 = load %class.Lexer*, %class.Lexer** %6, align 8
  store i32 0, i32* %10, align 4
  %24 = getelementptr inbounds %class.Lexer, %class.Lexer* %23, i32 0, i32 15
  %25 = call i32 @_ZNK6VectorIPN5Lexer9TunnelEndEE4sizeEv(%class.Vector.16* %24)
  store i32 %25, i32* %11, align 4
  br label %26

; <label>:26:                                     ; preds = %70, %4
  %27 = load i32, i32* %10, align 4
  %28 = load i32, i32* %11, align 4
  %29 = icmp ult i32 %27, %28
  br i1 %29, label %30, label %71

; <label>:30:                                     ; preds = %26
  %31 = load i32, i32* %10, align 4
  %32 = load i32, i32* %11, align 4
  %33 = load i32, i32* %10, align 4
  %34 = sub i32 %32, %33
  %35 = udiv i32 %34, 2
  %36 = add i32 %31, %35
  store i32 %36, i32* %12, align 4
  %37 = load %"struct.Router::Port"*, %"struct.Router::Port"** %7, align 8
  %38 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %class.Lexer, %class.Lexer* %23, i32 0, i32 15
  %41 = load i32, i32* %12, align 4
  %42 = call dereferenceable(8) %"class.Lexer::TunnelEnd"** @_ZN6VectorIPN5Lexer9TunnelEndEEixEi(%class.Vector.16* %40, i32 %41)
  %43 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %42, align 8
  %44 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %44, i32 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = icmp slt i32 %39, %46
  br i1 %47, label %48, label %50

; <label>:48:                                     ; preds = %30
  %49 = load i32, i32* %12, align 4
  store i32 %49, i32* %11, align 4
  br label %70

; <label>:50:                                     ; preds = %30
  %51 = load %"struct.Router::Port"*, %"struct.Router::Port"** %7, align 8
  %52 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %51, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %class.Lexer, %class.Lexer* %23, i32 0, i32 15
  %55 = load i32, i32* %12, align 4
  %56 = call dereferenceable(8) %"class.Lexer::TunnelEnd"** @_ZN6VectorIPN5Lexer9TunnelEndEEixEi(%class.Vector.16* %54, i32 %55)
  %57 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %56, align 8
  %58 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %57, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = icmp sgt i32 %53, %60
  br i1 %61, label %62, label %65

; <label>:62:                                     ; preds = %50
  %63 = load i32, i32* %12, align 4
  %64 = add i32 %63, 1
  store i32 %64, i32* %10, align 4
  br label %69

; <label>:65:                                     ; preds = %50
  %66 = load i32, i32* %12, align 4
  store i32 %66, i32* %10, align 4
  %67 = load i32, i32* %12, align 4
  %68 = add i32 %67, 1
  store i32 %68, i32* %11, align 4
  br label %71

; <label>:69:                                     ; preds = %62
  br label %70

; <label>:70:                                     ; preds = %69, %48
  br label %26

; <label>:71:                                     ; preds = %65, %26
  %72 = load i32, i32* %10, align 4
  %73 = load i32, i32* %11, align 4
  %74 = icmp uge i32 %72, %73
  br i1 %74, label %75, label %88

; <label>:75:                                     ; preds = %71
  %76 = load i8, i8* %9, align 1
  %77 = trunc i8 %76 to i1
  br i1 %77, label %78, label %88

; <label>:78:                                     ; preds = %75
  %79 = getelementptr inbounds %class.Lexer, %class.Lexer* %23, i32 0, i32 15
  %80 = getelementptr inbounds %class.Lexer, %class.Lexer* %23, i32 0, i32 15
  %81 = call %"class.Lexer::TunnelEnd"** @_ZN6VectorIPN5Lexer9TunnelEndEE5beginEv(%class.Vector.16* %80)
  %82 = load i32, i32* %10, align 4
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %81, i64 %83
  %85 = call %"class.Lexer::TunnelEnd"** @_ZN6VectorIPN5Lexer9TunnelEndEE6insertEPS2_S2_(%class.Vector.16* %79, %"class.Lexer::TunnelEnd"** %84, %"class.Lexer::TunnelEnd"* null)
  %86 = load i32, i32* %11, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %11, align 4
  br label %94

; <label>:88:                                     ; preds = %75, %71
  %89 = load i32, i32* %10, align 4
  %90 = load i32, i32* %11, align 4
  %91 = icmp uge i32 %89, %90
  br i1 %91, label %92, label %93

; <label>:92:                                     ; preds = %88
  store %"class.Lexer::TunnelEnd"* null, %"class.Lexer::TunnelEnd"** %5, align 8
  br label %208

; <label>:93:                                     ; preds = %88
  br label %94

; <label>:94:                                     ; preds = %93, %78
  store %"class.Lexer::TunnelEnd"* null, %"class.Lexer::TunnelEnd"** %13, align 8
  %95 = getelementptr inbounds %class.Lexer, %class.Lexer* %23, i32 0, i32 15
  %96 = load i32, i32* %10, align 4
  %97 = call dereferenceable(8) %"class.Lexer::TunnelEnd"** @_ZN6VectorIPN5Lexer9TunnelEndEEixEi(%class.Vector.16* %95, i32 %96)
  %98 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %97, align 8
  store %"class.Lexer::TunnelEnd"* %98, %"class.Lexer::TunnelEnd"** %14, align 8
  br label %99

; <label>:99:                                     ; preds = %139, %94
  %100 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %14, align 8
  %101 = icmp ne %"class.Lexer::TunnelEnd"* %100, null
  br i1 %101, label %102, label %142

; <label>:102:                                    ; preds = %99
  %103 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %14, align 8
  %104 = call zeroext i1 @_ZNK5Lexer9TunnelEnd8isoutputEv(%"class.Lexer::TunnelEnd"* %103)
  %105 = zext i1 %104 to i32
  %106 = load i8, i8* %8, align 1
  %107 = trunc i8 %106 to i1
  %108 = zext i1 %107 to i32
  %109 = icmp eq i32 %105, %108
  br i1 %109, label %110, label %121

; <label>:110:                                    ; preds = %102
  %111 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %14, align 8
  %112 = call dereferenceable(8) %"struct.Router::Port"* @_ZNK5Lexer9TunnelEnd4portEv(%"class.Lexer::TunnelEnd"* %111)
  %113 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %112, i32 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = load %"struct.Router::Port"*, %"struct.Router::Port"** %7, align 8
  %116 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %115, i32 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %114, %117
  br i1 %118, label %119, label %121

; <label>:119:                                    ; preds = %110
  %120 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %14, align 8
  store %"class.Lexer::TunnelEnd"* %120, %"class.Lexer::TunnelEnd"** %5, align 8
  br label %208

; <label>:121:                                    ; preds = %110, %102
  %122 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %14, align 8
  %123 = call zeroext i1 @_ZNK5Lexer9TunnelEnd8isoutputEv(%"class.Lexer::TunnelEnd"* %122)
  %124 = zext i1 %123 to i32
  %125 = load i8, i8* %8, align 1
  %126 = trunc i8 %125 to i1
  %127 = zext i1 %126 to i32
  %128 = icmp eq i32 %124, %127
  br i1 %128, label %129, label %137

; <label>:129:                                    ; preds = %121
  %130 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %14, align 8
  %131 = call dereferenceable(8) %"struct.Router::Port"* @_ZNK5Lexer9TunnelEnd4portEv(%"class.Lexer::TunnelEnd"* %130)
  %132 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %131, i32 0, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %137

; <label>:135:                                    ; preds = %129
  %136 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %14, align 8
  store %"class.Lexer::TunnelEnd"* %136, %"class.Lexer::TunnelEnd"** %13, align 8
  br label %137

; <label>:137:                                    ; preds = %135, %129, %121
  br label %138

; <label>:138:                                    ; preds = %137
  br label %139

; <label>:139:                                    ; preds = %138
  %140 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %14, align 8
  %141 = call %"class.Lexer::TunnelEnd"* @_ZNK5Lexer9TunnelEnd4nextEv(%"class.Lexer::TunnelEnd"* %140)
  store %"class.Lexer::TunnelEnd"* %141, %"class.Lexer::TunnelEnd"** %14, align 8
  br label %99

; <label>:142:                                    ; preds = %99
  %143 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %13, align 8
  %144 = icmp ne %"class.Lexer::TunnelEnd"* %143, null
  br i1 %144, label %145, label %183

; <label>:145:                                    ; preds = %142
  %146 = load i8, i8* %9, align 1
  %147 = trunc i8 %146 to i1
  br i1 %147, label %183, label %148

; <label>:148:                                    ; preds = %145
  %149 = call i8* @_Znwm(i64 48) #15
  %150 = bitcast i8* %149 to %"class.Lexer::TunnelEnd"*
  %151 = load %"struct.Router::Port"*, %"struct.Router::Port"** %7, align 8
  %152 = load i8, i8* %8, align 1
  %153 = trunc i8 %152 to i1
  %154 = getelementptr inbounds %class.Lexer, %class.Lexer* %23, i32 0, i32 15
  %155 = load i32, i32* %10, align 4
  %156 = invoke dereferenceable(8) %"class.Lexer::TunnelEnd"** @_ZN6VectorIPN5Lexer9TunnelEndEEixEi(%class.Vector.16* %154, i32 %155)
          to label %157 unwind label %179

; <label>:157:                                    ; preds = %148
  %158 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %156, align 8
  invoke void @_ZN5Lexer9TunnelEndC2ERKN6Router4PortEbPS0_(%"class.Lexer::TunnelEnd"* %150, %"struct.Router::Port"* dereferenceable(8) %151, i1 zeroext %153, %"class.Lexer::TunnelEnd"* %158)
          to label %159 unwind label %179

; <label>:159:                                    ; preds = %157
  store %"class.Lexer::TunnelEnd"* %150, %"class.Lexer::TunnelEnd"** %15, align 8
  %160 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %15, align 8
  %161 = getelementptr inbounds %class.Lexer, %class.Lexer* %23, i32 0, i32 15
  %162 = load i32, i32* %10, align 4
  %163 = call dereferenceable(8) %"class.Lexer::TunnelEnd"** @_ZN6VectorIPN5Lexer9TunnelEndEEixEi(%class.Vector.16* %161, i32 %162)
  store %"class.Lexer::TunnelEnd"* %160, %"class.Lexer::TunnelEnd"** %163, align 8
  %164 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %13, align 8
  %165 = call %"class.Lexer::TunnelEnd"* @_ZNK5Lexer9TunnelEnd5otherEv(%"class.Lexer::TunnelEnd"* %164)
  %166 = call dereferenceable(8) %"struct.Router::Port"* @_ZNK5Lexer9TunnelEnd4portEv(%"class.Lexer::TunnelEnd"* %165)
  %167 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %166, i32 0, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = load %"struct.Router::Port"*, %"struct.Router::Port"** %7, align 8
  %170 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %169, i32 0, i32 1
  %171 = load i32, i32* %170, align 4
  call void @_ZN6Router4PortC2Eii(%"struct.Router::Port"* %19, i32 %168, i32 %171)
  %172 = load i8, i8* %8, align 1
  %173 = trunc i8 %172 to i1
  %174 = xor i1 %173, true
  %175 = call %"class.Lexer::TunnelEnd"* @_ZN5Lexer11find_tunnelERKN6Router4PortEbb(%class.Lexer* %23, %"struct.Router::Port"* dereferenceable(8) %19, i1 zeroext %174, i1 zeroext true)
  store %"class.Lexer::TunnelEnd"* %175, %"class.Lexer::TunnelEnd"** %18, align 8
  %176 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %15, align 8
  %177 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %18, align 8
  call void @_ZN5Lexer9TunnelEnd9pair_withEPS0_(%"class.Lexer::TunnelEnd"* %176, %"class.Lexer::TunnelEnd"* %177)
  %178 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %15, align 8
  store %"class.Lexer::TunnelEnd"* %178, %"class.Lexer::TunnelEnd"** %5, align 8
  br label %208

; <label>:179:                                    ; preds = %157, %148
  %180 = landingpad { i8*, i32 }
          cleanup
  %181 = extractvalue { i8*, i32 } %180, 0
  store i8* %181, i8** %16, align 8
  %182 = extractvalue { i8*, i32 } %180, 1
  store i32 %182, i32* %17, align 4
  call void @_ZdlPv(i8* %149) #14
  br label %210

; <label>:183:                                    ; preds = %145, %142
  %184 = load i8, i8* %9, align 1
  %185 = trunc i8 %184 to i1
  br i1 %185, label %186, label %207

; <label>:186:                                    ; preds = %183
  %187 = call i8* @_Znwm(i64 48) #15
  %188 = bitcast i8* %187 to %"class.Lexer::TunnelEnd"*
  %189 = load %"struct.Router::Port"*, %"struct.Router::Port"** %7, align 8
  %190 = load i8, i8* %8, align 1
  %191 = trunc i8 %190 to i1
  %192 = getelementptr inbounds %class.Lexer, %class.Lexer* %23, i32 0, i32 15
  %193 = load i32, i32* %10, align 4
  %194 = invoke dereferenceable(8) %"class.Lexer::TunnelEnd"** @_ZN6VectorIPN5Lexer9TunnelEndEEixEi(%class.Vector.16* %192, i32 %193)
          to label %195 unwind label %203

; <label>:195:                                    ; preds = %186
  %196 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %194, align 8
  invoke void @_ZN5Lexer9TunnelEndC2ERKN6Router4PortEbPS0_(%"class.Lexer::TunnelEnd"* %188, %"struct.Router::Port"* dereferenceable(8) %189, i1 zeroext %191, %"class.Lexer::TunnelEnd"* %196)
          to label %197 unwind label %203

; <label>:197:                                    ; preds = %195
  store %"class.Lexer::TunnelEnd"* %188, %"class.Lexer::TunnelEnd"** %20, align 8
  %198 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %20, align 8
  %199 = getelementptr inbounds %class.Lexer, %class.Lexer* %23, i32 0, i32 15
  %200 = load i32, i32* %10, align 4
  %201 = call dereferenceable(8) %"class.Lexer::TunnelEnd"** @_ZN6VectorIPN5Lexer9TunnelEndEEixEi(%class.Vector.16* %199, i32 %200)
  store %"class.Lexer::TunnelEnd"* %198, %"class.Lexer::TunnelEnd"** %201, align 8
  %202 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %20, align 8
  store %"class.Lexer::TunnelEnd"* %202, %"class.Lexer::TunnelEnd"** %5, align 8
  br label %208

; <label>:203:                                    ; preds = %195, %186
  %204 = landingpad { i8*, i32 }
          cleanup
  %205 = extractvalue { i8*, i32 } %204, 0
  store i8* %205, i8** %16, align 8
  %206 = extractvalue { i8*, i32 } %204, 1
  store i32 %206, i32* %17, align 4
  call void @_ZdlPv(i8* %187) #14
  br label %210

; <label>:207:                                    ; preds = %183
  store %"class.Lexer::TunnelEnd"* null, %"class.Lexer::TunnelEnd"** %5, align 8
  br label %208

; <label>:208:                                    ; preds = %207, %197, %159, %119, %92
  %209 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %5, align 8
  ret %"class.Lexer::TunnelEnd"* %209

; <label>:210:                                    ; preds = %203, %179
  %211 = load i8*, i8** %16, align 8
  %212 = load i32, i32* %17, align 4
  %213 = insertvalue { i8*, i32 } undef, i8* %211, 0
  %214 = insertvalue { i8*, i32 } %213, i32 %212, 1
  resume { i8*, i32 } %214
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr %"class.Lexer::TunnelEnd"* @_ZNK5Lexer9TunnelEnd5otherEv(%"class.Lexer::TunnelEnd"*) #0 comdat align 2 {
  %2 = alloca %"class.Lexer::TunnelEnd"*, align 8
  store %"class.Lexer::TunnelEnd"* %0, %"class.Lexer::TunnelEnd"** %2, align 8
  %3 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %2, align 8
  %4 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %3, i32 0, i32 4
  %5 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %4, align 8
  ret %"class.Lexer::TunnelEnd"* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN5Lexer9TunnelEnd9pair_withEPS0_(%"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"*) #0 comdat align 2 {
  %3 = alloca %"class.Lexer::TunnelEnd"*, align 8
  %4 = alloca %"class.Lexer::TunnelEnd"*, align 8
  store %"class.Lexer::TunnelEnd"* %0, %"class.Lexer::TunnelEnd"** %3, align 8
  store %"class.Lexer::TunnelEnd"* %1, %"class.Lexer::TunnelEnd"** %4, align 8
  %5 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %3, align 8
  %6 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %5, i32 0, i32 4
  %7 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %6, align 8
  %8 = icmp ne %"class.Lexer::TunnelEnd"* %7, null
  br i1 %8, label %35, label %9

; <label>:9:                                      ; preds = %2
  %10 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %4, align 8
  %11 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %10, i32 0, i32 4
  %12 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %11, align 8
  %13 = icmp ne %"class.Lexer::TunnelEnd"* %12, null
  br i1 %13, label %35, label %14

; <label>:14:                                     ; preds = %9
  %15 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %5, i32 0, i32 3
  %16 = load i8, i8* %15, align 1
  %17 = trunc i8 %16 to i1
  %18 = zext i1 %17 to i32
  %19 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %4, align 8
  %20 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %19, i32 0, i32 3
  %21 = load i8, i8* %20, align 1
  %22 = trunc i8 %21 to i1
  %23 = xor i1 %22, true
  %24 = zext i1 %23 to i32
  %25 = icmp eq i32 %18, %24
  br i1 %25, label %26, label %35

; <label>:26:                                     ; preds = %14
  %27 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %5, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %27, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %4, align 8
  %31 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %31, i32 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %29, %33
  br label %35

; <label>:35:                                     ; preds = %26, %14, %9, %2
  %36 = phi i1 [ false, %14 ], [ false, %9 ], [ false, %2 ], [ %34, %26 ]
  br i1 %36, label %37, label %38

; <label>:37:                                     ; preds = %35
  br label %40

; <label>:38:                                     ; preds = %35
  call void @__assert_fail(i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i32 107, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN5Lexer9TunnelEnd9pair_withEPS0_, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %40

; <label>:40:                                     ; preds = %39, %37
  %41 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %4, align 8
  %42 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %5, i32 0, i32 4
  store %"class.Lexer::TunnelEnd"* %41, %"class.Lexer::TunnelEnd"** %42, align 8
  %43 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %4, align 8
  %44 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %43, i32 0, i32 4
  store %"class.Lexer::TunnelEnd"* %5, %"class.Lexer::TunnelEnd"** %44, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr i32 @_ZNK6String6lengthEv(%class.String*) #0 comdat align 2 {
  %2 = alloca %class.String*, align 8
  store %class.String* %0, %class.String** %2, align 8
  %3 = load %class.String*, %class.String** %2, align 8
  %4 = getelementptr inbounds %class.String, %class.String* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %4, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  ret i32 %6
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6VectorIjE9push_backEj(%class.Vector.2*, i32) #2 comdat align 2 {
  %3 = alloca %class.Vector.2*, align 8
  %4 = alloca i32, align 4
  store %class.Vector.2* %0, %class.Vector.2** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Vector.2*, %class.Vector.2** %3, align 8
  %6 = getelementptr inbounds %class.Vector.2, %class.Vector.2* %5, i32 0, i32 0
  %7 = call %struct.char_array.4* @_ZN18sized_array_memoryILm4EE4castIjEEP10char_arrayILm4EEPT_(i32* %4)
  call void @_ZN13vector_memoryI18sized_array_memoryILm4EEE9push_backEPK10char_arrayILm4EE(%class.vector_memory.3* %6, %struct.char_array.4* %7)
  ret void
}

; Function Attrs: noinline optnone uwtable
define void @_ZNK5Lexer17anon_element_nameERK6String(%class.String* noalias sret, %class.Lexer*, %class.String* dereferenceable(24)) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.Lexer*, align 8
  %5 = alloca %class.String*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %class.String, align 8
  %8 = alloca %class.String, align 8
  %9 = alloca i8*
  %10 = alloca i32
  %11 = alloca %class.String, align 8
  store %class.Lexer* %1, %class.Lexer** %4, align 8
  store %class.String* %2, %class.String** %5, align 8
  %12 = load %class.Lexer*, %class.Lexer** %4, align 8
  %13 = getelementptr inbounds %class.Lexer, %class.Lexer* %12, i32 0, i32 12
  %14 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %13, align 8
  %15 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %14, i32 0, i32 11
  %16 = call i32 @_ZNK6VectorIiE4sizeEv(%class.Vector.5* %15)
  %17 = getelementptr inbounds %class.Lexer, %class.Lexer* %12, i32 0, i32 12
  %18 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %17, align 8
  %19 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %18, i32 0, i32 17
  %20 = load i32, i32* %19, align 8
  %21 = sub nsw i32 %16, %20
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %6, align 4
  %23 = load %class.String*, %class.String** %5, align 8
  call void @_ZplPKcRK6String(%class.String* sret %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.47, i32 0, i32 0), %class.String* dereferenceable(24) %23)
  invoke void @_Zpl6StringPKc(%class.String* sret %7, %class.String* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0))
          to label %24 unwind label %28

; <label>:24:                                     ; preds = %3
  %25 = load i32, i32* %6, align 4
  invoke void @_ZN6StringC1Ei(%class.String* %11, i32 %25)
          to label %26 unwind label %32

; <label>:26:                                     ; preds = %24
  invoke void @_Zpl6StringRKS_(%class.String* sret %0, %class.String* %7, %class.String* dereferenceable(24) %11)
          to label %27 unwind label %36

; <label>:27:                                     ; preds = %26
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  call void @_ZN6StringD2Ev(%class.String* %7) #9
  call void @_ZN6StringD2Ev(%class.String* %8) #9
  ret void

; <label>:28:                                     ; preds = %3
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %9, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %10, align 4
  br label %41

; <label>:32:                                     ; preds = %24
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  store i8* %34, i8** %9, align 8
  %35 = extractvalue { i8*, i32 } %33, 1
  store i32 %35, i32* %10, align 4
  br label %40

; <label>:36:                                     ; preds = %26
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %9, align 8
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %10, align 4
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  br label %40

; <label>:40:                                     ; preds = %36, %32
  call void @_ZN6StringD2Ev(%class.String* %7) #9
  br label %41

; <label>:41:                                     ; preds = %40, %28
  call void @_ZN6StringD2Ev(%class.String* %8) #9
  br label %42

; <label>:42:                                     ; preds = %41
  %43 = load i8*, i8** %9, align 8
  %44 = load i32, i32* %10, align 4
  %45 = insertvalue { i8*, i32 } undef, i8* %43, 0
  %46 = insertvalue { i8*, i32 } %45, i32 %44, 1
  resume { i8*, i32 } %46
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZplPKcRK6String(%class.String* noalias sret, i8*, %class.String* dereferenceable(24)) #2 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i8*, align 8
  %5 = alloca %class.String*, align 8
  %6 = alloca i1, align 1
  %7 = alloca i8*
  %8 = alloca i32
  store i8* %1, i8** %4, align 8
  store %class.String* %2, %class.String** %5, align 8
  store i1 false, i1* %6, align 1
  %9 = load i8*, i8** %4, align 8
  call void @_ZN6StringC2EPKc(%class.String* %0, i8* %9)
  %10 = load %class.String*, %class.String** %5, align 8
  %11 = invoke dereferenceable(24) %class.String* @_ZN6StringpLERKS_(%class.String* %0, %class.String* dereferenceable(24) %10)
          to label %12 unwind label %14

; <label>:12:                                     ; preds = %3
  store i1 true, i1* %6, align 1
  %13 = load i1, i1* %6, align 1
  br i1 %13, label %19, label %18

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZN6StringD2Ev(%class.String* %0) #9
  br label %20

; <label>:18:                                     ; preds = %12
  call void @_ZN6StringD2Ev(%class.String* %0) #9
  br label %19

; <label>:19:                                     ; preds = %18, %12
  ret void

; <label>:20:                                     ; preds = %14
  %21 = load i8*, i8** %7, align 8
  %22 = load i32, i32* %8, align 4
  %23 = insertvalue { i8*, i32 } undef, i8* %21, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

declare void @_ZN6StringC1Ei(%class.String*, i32) unnamed_addr #3

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZNK6String9substringEi(%class.String* noalias sret, %class.String*, i32) #2 comdat align 2 {
  %4 = alloca %class.String*, align 8
  %5 = alloca i32, align 4
  store %class.String* %1, %class.String** %4, align 8
  store i32 %2, i32* %5, align 4
  %6 = load %class.String*, %class.String** %4, align 8
  %7 = load i32, i32* %5, align 4
  %8 = getelementptr inbounds %class.String, %class.String* %6, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = sub nsw i32 0, %10
  %12 = icmp sle i32 %7, %11
  br i1 %12, label %13, label %14

; <label>:13:                                     ; preds = %3
  br label %16

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* %5, align 4
  br label %16

; <label>:16:                                     ; preds = %14, %13
  %17 = phi i32 [ 0, %13 ], [ %15, %14 ]
  %18 = getelementptr inbounds %class.String, %class.String* %6, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %18, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  call void @_ZNK6String9substringEii(%class.String* sret %0, %class.String* %6, i32 %17, i32 %20)
  ret void
}

declare i32 @_ZNK6String10find_rightEci(%class.String*, i8 signext, i32) #3

declare void @_ZNK6String9substringEii(%class.String* sret, %class.String*, i32, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN6IntArgC2Ei(%class.IntArg*, i32) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.IntArg*, align 8
  %4 = alloca i32, align 4
  store %class.IntArg* %0, %class.IntArg** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.IntArg*, %class.IntArg** %3, align 8
  %6 = bitcast %class.IntArg* %5 to %class.NumArg*
  %7 = getelementptr inbounds %class.IntArg, %class.IntArg* %5, i32 0, i32 0
  %8 = load i32, i32* %4, align 4
  store i32 %8, i32* %7, align 4
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr zeroext i1 @_ZN6IntArg5parseIiEEbRK6StringRT_RK10ArgContext(%class.IntArg*, %class.String* dereferenceable(24), i32* dereferenceable(4), %class.ArgContext* dereferenceable(32)) #2 comdat align 2 {
  %5 = alloca i1, align 1
  %6 = alloca %class.IntArg*, align 8
  %7 = alloca %class.String*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca %class.ArgContext*, align 8
  %10 = alloca i32, align 4
  store %class.IntArg* %0, %class.IntArg** %6, align 8
  store %class.String* %1, %class.String** %7, align 8
  store i32* %2, i32** %8, align 8
  store %class.ArgContext* %3, %class.ArgContext** %9, align 8
  %11 = load %class.IntArg*, %class.IntArg** %6, align 8
  %12 = load %class.String*, %class.String** %7, align 8
  %13 = load %class.ArgContext*, %class.ArgContext** %9, align 8
  %14 = call zeroext i1 @_ZN6IntArg16parse_saturatingIiEEbRK6StringRT_RK10ArgContext(%class.IntArg* %11, %class.String* dereferenceable(24) %12, i32* dereferenceable(4) %10, %class.ArgContext* dereferenceable(32) %13)
  br i1 %14, label %15, label %23

; <label>:15:                                     ; preds = %4
  %16 = getelementptr inbounds %class.IntArg, %class.IntArg* %11, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %24

; <label>:19:                                     ; preds = %15
  %20 = getelementptr inbounds %class.IntArg, %class.IntArg* %11, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %21, 34
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %19, %4
  store i1 false, i1* %5, align 1
  br label %35

; <label>:24:                                     ; preds = %19, %15
  %25 = getelementptr inbounds %class.IntArg, %class.IntArg* %11, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 34
  br i1 %27, label %28, label %32

; <label>:28:                                     ; preds = %24
  %29 = load %class.ArgContext*, %class.ArgContext** %9, align 8
  %30 = load i32, i32* %10, align 4
  %31 = sext i32 %30 to i64
  call void @_ZN6IntArg11range_errorERK10ArgContextbx(%class.IntArg* %11, %class.ArgContext* dereferenceable(32) %29, i1 zeroext true, i64 %31)
  store i1 false, i1* %5, align 1
  br label %35

; <label>:32:                                     ; preds = %24
  %33 = load i32, i32* %10, align 4
  %34 = load i32*, i32** %8, align 8
  store i32 %33, i32* %34, align 4
  store i1 true, i1* %5, align 1
  br label %35

; <label>:35:                                     ; preds = %32, %28, %23
  %36 = load i1, i1* %5, align 1
  ret i1 %36
}

; Function Attrs: noinline optnone uwtable
define void @_ZNK5Lexer12element_nameEi(%class.String* noalias sret, %class.Lexer*, i32) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.Lexer*, align 8
  %5 = alloca i32, align 4
  %6 = alloca [100 x i8], align 16
  %7 = alloca i32, align 4
  %8 = alloca %class.String, align 8
  %9 = alloca %class.String, align 8
  %10 = alloca i8*
  %11 = alloca i32
  %12 = alloca %class.String, align 8
  %13 = alloca %class.String, align 8
  %14 = alloca %class.String, align 8
  %15 = alloca %class.String, align 8
  store %class.Lexer* %1, %class.Lexer** %4, align 8
  store i32 %2, i32* %5, align 4
  %16 = load %class.Lexer*, %class.Lexer** %4, align 8
  %17 = load i32, i32* %5, align 4
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %26, label %19

; <label>:19:                                     ; preds = %3
  %20 = load i32, i32* %5, align 4
  %21 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 12
  %22 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %21, align 8
  %23 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %22, i32 0, i32 11
  %24 = call i32 @_ZNK6VectorIiE4sizeEv(%class.Vector.5* %23)
  %25 = icmp sge i32 %20, %24
  br i1 %25, label %26, label %27

; <label>:26:                                     ; preds = %19, %3
  call void @_ZN6StringC2EPKc(%class.String* %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.50, i32 0, i32 0))
  br label %104

; <label>:27:                                     ; preds = %19
  %28 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 12
  %29 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %28, align 8
  %30 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %29, i32 0, i32 12
  %31 = load i32, i32* %5, align 4
  %32 = call dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %30, i32 %31)
  %33 = call { i64, i64 } @_ZNK6StringcvMS_KFivEEv(%class.String* %32)
  %34 = extractvalue { i64, i64 } %33, 0
  %35 = icmp ne i64 %34, 0
  br i1 %35, label %36, label %42

; <label>:36:                                     ; preds = %27
  %37 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 12
  %38 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %37, align 8
  %39 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %38, i32 0, i32 12
  %40 = load i32, i32* %5, align 4
  %41 = call dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %39, i32 %40)
  call void @_ZN6StringC2ERKS_(%class.String* %0, %class.String* dereferenceable(24) %41)
  br label %104

; <label>:42:                                     ; preds = %27
  %43 = getelementptr inbounds [100 x i8], [100 x i8]* %6, i32 0, i32 0
  %44 = load i32, i32* %5, align 4
  %45 = call i32 (i8*, i8*, ...) @sprintf(i8* %43, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51, i32 0, i32 0), i32 %44) #9
  %46 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 12
  %47 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %46, align 8
  %48 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %47, i32 0, i32 11
  %49 = load i32, i32* %5, align 4
  %50 = call dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %48, i32 %49)
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %7, align 4
  %52 = load i32, i32* %7, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %67

; <label>:54:                                     ; preds = %42
  %55 = getelementptr inbounds [100 x i8], [100 x i8]* %6, i32 0, i32 0
  call void @_ZN6StringC2EPKc(%class.String* %9, i8* %55)
  invoke void @_ZplPKcRK6String(%class.String* sret %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.52, i32 0, i32 0), %class.String* dereferenceable(24) %9)
          to label %56 unwind label %58

; <label>:56:                                     ; preds = %54
  invoke void @_Zpl6StringPKc(%class.String* sret %0, %class.String* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.53, i32 0, i32 0))
          to label %57 unwind label %62

; <label>:57:                                     ; preds = %56
  call void @_ZN6StringD2Ev(%class.String* %8) #9
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  br label %104

; <label>:58:                                     ; preds = %54
  %59 = landingpad { i8*, i32 }
          cleanup
  %60 = extractvalue { i8*, i32 } %59, 0
  store i8* %60, i8** %10, align 8
  %61 = extractvalue { i8*, i32 } %59, 1
  store i32 %61, i32* %11, align 4
  br label %66

; <label>:62:                                     ; preds = %56
  %63 = landingpad { i8*, i32 }
          cleanup
  %64 = extractvalue { i8*, i32 } %63, 0
  store i8* %64, i8** %10, align 8
  %65 = extractvalue { i8*, i32 } %63, 1
  store i32 %65, i32* %11, align 4
  call void @_ZN6StringD2Ev(%class.String* %8) #9
  br label %66

; <label>:66:                                     ; preds = %62, %58
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  br label %105

; <label>:67:                                     ; preds = %42
  %68 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 8
  %69 = load i32, i32* %7, align 4
  %70 = call dereferenceable(48) %"struct.Lexer::ElementType"* @_ZNK6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %68, i32 %69)
  %71 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %70, i32 0, i32 0
  %72 = load %class.Element* (i64)*, %class.Element* (i64)** %71, align 8
  %73 = icmp ne %class.Element* (i64)* %72, null
  br i1 %73, label %87, label %74

; <label>:74:                                     ; preds = %67
  %75 = getelementptr inbounds [100 x i8], [100 x i8]* %6, i32 0, i32 0
  call void @_ZN6StringC2EPKc(%class.String* %13, i8* %75)
  invoke void @_ZplPKcRK6String(%class.String* sret %12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i32 0, i32 0), %class.String* dereferenceable(24) %13)
          to label %76 unwind label %78

; <label>:76:                                     ; preds = %74
  invoke void @_Zpl6StringPKc(%class.String* sret %0, %class.String* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.53, i32 0, i32 0))
          to label %77 unwind label %82

; <label>:77:                                     ; preds = %76
  call void @_ZN6StringD2Ev(%class.String* %12) #9
  call void @_ZN6StringD2Ev(%class.String* %13) #9
  br label %104

; <label>:78:                                     ; preds = %74
  %79 = landingpad { i8*, i32 }
          cleanup
  %80 = extractvalue { i8*, i32 } %79, 0
  store i8* %80, i8** %10, align 8
  %81 = extractvalue { i8*, i32 } %79, 1
  store i32 %81, i32* %11, align 4
  br label %86

; <label>:82:                                     ; preds = %76
  %83 = landingpad { i8*, i32 }
          cleanup
  %84 = extractvalue { i8*, i32 } %83, 0
  store i8* %84, i8** %10, align 8
  %85 = extractvalue { i8*, i32 } %83, 1
  store i32 %85, i32* %11, align 4
  call void @_ZN6StringD2Ev(%class.String* %12) #9
  br label %86

; <label>:86:                                     ; preds = %82, %78
  call void @_ZN6StringD2Ev(%class.String* %13) #9
  br label %105

; <label>:87:                                     ; preds = %67
  %88 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 8
  %89 = load i32, i32* %7, align 4
  %90 = call dereferenceable(48) %"struct.Lexer::ElementType"* @_ZNK6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %88, i32 %89)
  %91 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %90, i32 0, i32 2
  call void @_ZN6StringC2ERKS_(%class.String* %14, %class.String* dereferenceable(24) %91)
  %92 = getelementptr inbounds [100 x i8], [100 x i8]* %6, i32 0, i32 0
  invoke void @_ZN6StringC2EPKc(%class.String* %15, i8* %92)
          to label %93 unwind label %95

; <label>:93:                                     ; preds = %87
  invoke void @_Zpl6StringRKS_(%class.String* sret %0, %class.String* %14, %class.String* dereferenceable(24) %15)
          to label %94 unwind label %99

; <label>:94:                                     ; preds = %93
  call void @_ZN6StringD2Ev(%class.String* %15) #9
  call void @_ZN6StringD2Ev(%class.String* %14) #9
  br label %104

; <label>:95:                                     ; preds = %87
  %96 = landingpad { i8*, i32 }
          cleanup
  %97 = extractvalue { i8*, i32 } %96, 0
  store i8* %97, i8** %10, align 8
  %98 = extractvalue { i8*, i32 } %96, 1
  store i32 %98, i32* %11, align 4
  br label %103

; <label>:99:                                     ; preds = %93
  %100 = landingpad { i8*, i32 }
          cleanup
  %101 = extractvalue { i8*, i32 } %100, 0
  store i8* %101, i8** %10, align 8
  %102 = extractvalue { i8*, i32 } %100, 1
  store i32 %102, i32* %11, align 4
  call void @_ZN6StringD2Ev(%class.String* %15) #9
  br label %103

; <label>:103:                                    ; preds = %99, %95
  call void @_ZN6StringD2Ev(%class.String* %14) #9
  br label %105

; <label>:104:                                    ; preds = %94, %77, %57, %36, %26
  ret void

; <label>:105:                                    ; preds = %103, %86, %66
  %106 = load i8*, i8** %10, align 8
  %107 = load i32, i32* %11, align 4
  %108 = insertvalue { i8*, i32 } undef, i8* %106, 0
  %109 = insertvalue { i8*, i32 } %108, i32 %107, 1
  resume { i8*, i32 } %109
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(48) %"struct.Lexer::ElementType"* @_ZNK6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14*, i32) #0 comdat align 2 {
  %3 = alloca %class.Vector.14*, align 8
  %4 = alloca i32, align 4
  store %class.Vector.14* %0, %class.Vector.14** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Vector.14*, %class.Vector.14** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = getelementptr inbounds %class.Vector.14, %class.Vector.14* %5, i32 0, i32 0
  %8 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp ult i32 %6, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %2
  br label %14

; <label>:12:                                     ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.128, i32 0, i32 0), i32 295, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @__PRETTY_FUNCTION__._ZNK6VectorIN5Lexer11ElementTypeEEixEi, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %14

; <label>:14:                                     ; preds = %13, %11
  %15 = getelementptr inbounds %class.Vector.14, %class.Vector.14* %5, i32 0, i32 0
  %16 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %15, i32 0, i32 0
  %17 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %16, align 8
  %18 = load i32, i32* %4, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %17, i64 %19
  ret %"struct.Lexer::ElementType"* %20
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6String11make_stableEPKc(%class.String* noalias sret, i8*) #2 comdat align 2 {
  %3 = alloca i8*, align 8
  store i8* %1, i8** %3, align 8
  %4 = load i8*, i8** %3, align 8
  %5 = icmp ne i8* %4, null
  br i1 %5, label %6, label %12

; <label>:6:                                      ; preds = %2
  br i1 false, label %7, label %12

; <label>:7:                                      ; preds = %6
  %8 = load i8*, i8** %3, align 8
  %9 = load i8*, i8** %3, align 8
  %10 = call i64 @strlen(i8* %9) #13
  %11 = trunc i64 %10 to i32
  call void @_ZN6StringC2EPKciPNS_6memo_tE(%class.String* %0, i8* %8, i32 %11, %"struct.String::memo_t"* null)
  br label %14

; <label>:12:                                     ; preds = %6, %2
  %13 = load i8*, i8** %3, align 8
  call void @_ZN6String16hard_make_stableEPKci(%class.String* sret %0, i8* %13, i32 -1)
  br label %14

; <label>:14:                                     ; preds = %12, %7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN6StringC2EOS_(%class.String*, %class.String* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.String*, align 8
  %4 = alloca %class.String*, align 8
  store %class.String* %0, %class.String** %3, align 8
  store %class.String* %1, %class.String** %4, align 8
  %5 = load %class.String*, %class.String** %3, align 8
  %6 = getelementptr inbounds %class.String, %class.String* %5, i32 0, i32 0
  %7 = load %class.String*, %class.String** %4, align 8
  %8 = getelementptr inbounds %class.String, %class.String* %7, i32 0, i32 0
  %9 = bitcast %"struct.String::rep_t"* %6 to i8*
  %10 = bitcast %"struct.String::rep_t"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 24, i32 8, i1 false)
  %11 = load %class.String*, %class.String** %4, align 8
  %12 = getelementptr inbounds %class.String, %class.String* %11, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %12, i32 0, i32 2
  store %"struct.String::memo_t"* null, %"struct.String::memo_t"** %13, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer5yportEb(%class.Lexer*, i1 zeroext) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.Lexer*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca %class.Lexeme, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = alloca i32, align 4
  %11 = alloca %class.IntArg, align 4
  %12 = alloca i32
  %13 = alloca %class.Lexeme, align 8
  store %class.Lexer* %0, %class.Lexer** %3, align 8
  %14 = zext i1 %1 to i8
  store i8 %14, i8* %4, align 1
  %15 = load %class.Lexer*, %class.Lexer** %3, align 8
  %16 = call zeroext i1 @_ZN5Lexer6expectEib(%class.Lexer* %15, i32 91, i1 zeroext true)
  br i1 %16, label %18, label %17

; <label>:17:                                     ; preds = %2
  br label %126

; <label>:18:                                     ; preds = %2
  store i32 -1, i32* %5, align 4
  store i8 0, i8* %6, align 1
  br label %19

; <label>:19:                                     ; preds = %18, %124
  call void @_ZN5Lexer3lexEv(%class.Lexeme* sret %7, %class.Lexer* %15)
  %20 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %7, i32 256)
          to label %21 unwind label %32

; <label>:21:                                     ; preds = %19
  br i1 %20, label %22, label %66

; <label>:22:                                     ; preds = %21
  invoke void @_ZN6IntArgC2Ei(%class.IntArg* %11, i32 0)
          to label %23 unwind label %32

; <label>:23:                                     ; preds = %22
  %24 = invoke dereferenceable(24) %class.String* @_ZN6Lexeme6stringEv(%class.Lexeme* %7)
          to label %25 unwind label %32

; <label>:25:                                     ; preds = %23
  %26 = invoke zeroext i1 @_ZN6IntArg5parseIiEEbRK6StringRT_RK10ArgContext(%class.IntArg* %11, %class.String* dereferenceable(24) %24, i32* dereferenceable(4) %10, %class.ArgContext* dereferenceable(32) @blank_args)
          to label %27 unwind label %32

; <label>:27:                                     ; preds = %25
  %28 = xor i1 %26, true
  br i1 %28, label %29, label %36

; <label>:29:                                     ; preds = %27
  %30 = invoke i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %15, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.56, i32 0, i32 0))
          to label %31 unwind label %32

; <label>:31:                                     ; preds = %29
  store i32 0, i32* %10, align 4
  br label %36

; <label>:32:                                     ; preds = %117, %115, %111, %104, %96, %93, %91, %89, %83, %77, %69, %66, %57, %46, %29, %25, %23, %22, %19
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  store i8* %34, i8** %8, align 8
  %35 = extractvalue { i8*, i32 } %33, 1
  store i32 %35, i32* %9, align 4
  br label %125

; <label>:36:                                     ; preds = %31, %27
  %37 = load i8, i8* %6, align 1
  %38 = trunc i8 %37 to i1
  br i1 %38, label %39, label %57

; <label>:39:                                     ; preds = %36
  %40 = load i32, i32* %5, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %5, align 4
  br label %42

; <label>:42:                                     ; preds = %53, %39
  %43 = load i32, i32* %5, align 4
  %44 = load i32, i32* %10, align 4
  %45 = icmp sle i32 %43, %44
  br i1 %45, label %46, label %56

; <label>:46:                                     ; preds = %42
  %47 = getelementptr inbounds %class.Lexer, %class.Lexer* %15, i32 0, i32 13
  %48 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %47, align 8
  %49 = load i8, i8* %4, align 1
  %50 = trunc i8 %49 to i1
  %51 = load i32, i32* %5, align 4
  invoke void @_ZN5Lexer10ParseState14push_back_portEbi(%"struct.Lexer::ParseState"* %48, i1 zeroext %50, i32 %51)
          to label %52 unwind label %32

; <label>:52:                                     ; preds = %46
  br label %53

; <label>:53:                                     ; preds = %52
  %54 = load i32, i32* %5, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %5, align 4
  br label %42

; <label>:56:                                     ; preds = %42
  br label %65

; <label>:57:                                     ; preds = %36
  %58 = getelementptr inbounds %class.Lexer, %class.Lexer* %15, i32 0, i32 13
  %59 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %58, align 8
  %60 = load i8, i8* %4, align 1
  %61 = trunc i8 %60 to i1
  %62 = load i32, i32* %10, align 4
  invoke void @_ZN5Lexer10ParseState14push_back_portEbi(%"struct.Lexer::ParseState"* %59, i1 zeroext %61, i32 %62)
          to label %63 unwind label %32

; <label>:63:                                     ; preds = %57
  %64 = load i32, i32* %10, align 4
  store i32 %64, i32* %5, align 4
  br label %65

; <label>:65:                                     ; preds = %63, %56
  br label %93

; <label>:66:                                     ; preds = %21
  %67 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %7, i32 93)
          to label %68 unwind label %32

; <label>:68:                                     ; preds = %66
  br i1 %67, label %69, label %89

; <label>:69:                                     ; preds = %68
  %70 = getelementptr inbounds %class.Lexer, %class.Lexer* %15, i32 0, i32 13
  %71 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %70, align 8
  %72 = load i8, i8* %4, align 1
  %73 = trunc i8 %72 to i1
  %74 = invoke i32 @_ZNK5Lexer10ParseState6nportsEb(%"struct.Lexer::ParseState"* %71, i1 zeroext %73)
          to label %75 unwind label %32

; <label>:75:                                     ; preds = %69
  %76 = icmp eq i32 %74, 0
  br i1 %76, label %77, label %83

; <label>:77:                                     ; preds = %75
  %78 = getelementptr inbounds %class.Lexer, %class.Lexer* %15, i32 0, i32 13
  %79 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %78, align 8
  %80 = load i8, i8* %4, align 1
  %81 = trunc i8 %80 to i1
  invoke void @_ZN5Lexer10ParseState14push_back_portEbi(%"struct.Lexer::ParseState"* %79, i1 zeroext %81, i32 0)
          to label %82 unwind label %32

; <label>:82:                                     ; preds = %77
  br label %83

; <label>:83:                                     ; preds = %82, %75
  %84 = getelementptr inbounds %class.Lexer, %class.Lexer* %15, i32 0, i32 13
  %85 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %84, align 8
  %86 = load i8, i8* %4, align 1
  %87 = trunc i8 %86 to i1
  invoke void @_ZN5Lexer10ParseState14push_back_portEbi(%"struct.Lexer::ParseState"* %85, i1 zeroext %87, i32 -1)
          to label %88 unwind label %32

; <label>:88:                                     ; preds = %83
  store i32 3, i32* %12, align 4
  br label %122

; <label>:89:                                     ; preds = %68
  %90 = invoke i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %15, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.57, i32 0, i32 0))
          to label %91 unwind label %32

; <label>:91:                                     ; preds = %89
  invoke void @_ZN5Lexer5unlexERK6Lexeme(%class.Lexer* %15, %class.Lexeme* dereferenceable(32) %7)
          to label %92 unwind label %32

; <label>:92:                                     ; preds = %91
  store i32 3, i32* %12, align 4
  br label %122

; <label>:93:                                     ; preds = %65
  invoke void @_ZN5Lexer3lexEv(%class.Lexeme* sret %13, %class.Lexer* %15)
          to label %94 unwind label %32

; <label>:94:                                     ; preds = %93
  %95 = invoke dereferenceable(32) %class.Lexeme* @_ZN6LexemeaSEOS_(%class.Lexeme* %7, %class.Lexeme* dereferenceable(32) %13)
          to label %96 unwind label %100

; <label>:96:                                     ; preds = %94
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %13) #9
  %97 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %7, i32 93)
          to label %98 unwind label %32

; <label>:98:                                     ; preds = %96
  br i1 %97, label %99, label %104

; <label>:99:                                     ; preds = %98
  store i32 3, i32* %12, align 4
  br label %122

; <label>:100:                                    ; preds = %94
  %101 = landingpad { i8*, i32 }
          cleanup
  %102 = extractvalue { i8*, i32 } %101, 0
  store i8* %102, i8** %8, align 8
  %103 = extractvalue { i8*, i32 } %101, 1
  store i32 %103, i32* %9, align 4
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %13) #9
  br label %125

; <label>:104:                                    ; preds = %98
  %105 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %7, i32 45)
          to label %106 unwind label %32

; <label>:106:                                    ; preds = %104
  br i1 %105, label %107, label %111

; <label>:107:                                    ; preds = %106
  %108 = load i8, i8* %6, align 1
  %109 = trunc i8 %108 to i1
  br i1 %109, label %111, label %110

; <label>:110:                                    ; preds = %107
  store i8 1, i8* %6, align 1
  br label %120

; <label>:111:                                    ; preds = %107, %106
  %112 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %7, i32 44)
          to label %113 unwind label %32

; <label>:113:                                    ; preds = %111
  br i1 %112, label %114, label %115

; <label>:114:                                    ; preds = %113
  store i8 0, i8* %6, align 1
  br label %119

; <label>:115:                                    ; preds = %113
  %116 = invoke i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %15, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.58, i32 0, i32 0))
          to label %117 unwind label %32

; <label>:117:                                    ; preds = %115
  invoke void @_ZN5Lexer5unlexERK6Lexeme(%class.Lexer* %15, %class.Lexeme* dereferenceable(32) %7)
          to label %118 unwind label %32

; <label>:118:                                    ; preds = %117
  br label %119

; <label>:119:                                    ; preds = %118, %114
  br label %120

; <label>:120:                                    ; preds = %119, %110
  br label %121

; <label>:121:                                    ; preds = %120
  store i32 0, i32* %12, align 4
  br label %122

; <label>:122:                                    ; preds = %121, %99, %92, %88
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %7) #9
  %123 = load i32, i32* %12, align 4
  switch i32 %123, label %132 [
    i32 0, label %124
    i32 3, label %126
  ]

; <label>:124:                                    ; preds = %122
  br label %19

; <label>:125:                                    ; preds = %100, %32
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %7) #9
  br label %127

; <label>:126:                                    ; preds = %17, %122
  ret void

; <label>:127:                                    ; preds = %125
  %128 = load i8*, i8** %8, align 8
  %129 = load i32, i32* %9, align 4
  %130 = insertvalue { i8*, i32 } undef, i8* %128, 0
  %131 = insertvalue { i8*, i32 } %130, i32 %129, 1
  resume { i8*, i32 } %131

; <label>:132:                                    ; preds = %122
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(24) %class.String* @_ZN6Lexeme6stringEv(%class.Lexeme*) #0 comdat align 2 {
  %2 = alloca %class.Lexeme*, align 8
  store %class.Lexeme* %0, %class.Lexeme** %2, align 8
  %3 = load %class.Lexeme*, %class.Lexeme** %2, align 8
  %4 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %3, i32 0, i32 1
  ret %class.String* %4
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN5Lexer10ParseState14push_back_portEbi(%"struct.Lexer::ParseState"*, i1 zeroext, i32) #2 comdat align 2 {
  %4 = alloca %"struct.Lexer::ParseState"*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  store %"struct.Lexer::ParseState"* %0, %"struct.Lexer::ParseState"** %4, align 8
  %7 = zext i1 %1 to i8
  store i8 %7, i8* %5, align 1
  store i32 %2, i32* %6, align 4
  %8 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %4, align 8
  %9 = load i8, i8* %5, align 1
  %10 = trunc i8 %9 to i1
  br i1 %10, label %19, label %11

; <label>:11:                                     ; preds = %3
  %12 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %8, i32 0, i32 11
  %13 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %8, i32 0, i32 12
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, 2
  %16 = call dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %12, i32 %15)
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br label %19

; <label>:19:                                     ; preds = %11, %3
  %20 = phi i1 [ true, %3 ], [ %18, %11 ]
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %19
  br label %24

; <label>:22:                                     ; preds = %19
  call void @__assert_fail(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i32 514, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__._ZN5Lexer10ParseState14push_back_portEbi, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %24

; <label>:24:                                     ; preds = %23, %21
  %25 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %8, i32 0, i32 11
  %26 = load i32, i32* %6, align 4
  call void @_ZN6VectorIiE9push_backEi(%class.Vector.5* %25, i32 %26)
  %27 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %8, i32 0, i32 11
  %28 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %8, i32 0, i32 12
  %29 = load i32, i32* %28, align 8
  %30 = add nsw i32 %29, 1
  %31 = load i8, i8* %5, align 1
  %32 = trunc i8 %31 to i1
  %33 = zext i1 %32 to i32
  %34 = add nsw i32 %30, %33
  %35 = call dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %27, i32 %34)
  %36 = load i32, i32* %35, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %35, align 4
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr i32 @_ZNK5Lexer10ParseState6nportsEb(%"struct.Lexer::ParseState"*, i1 zeroext) #2 comdat align 2 {
  %3 = alloca %"struct.Lexer::ParseState"*, align 8
  %4 = alloca i8, align 1
  store %"struct.Lexer::ParseState"* %0, %"struct.Lexer::ParseState"** %3, align 8
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  %6 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %3, align 8
  %7 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %6, i32 0, i32 11
  %8 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %6, i32 0, i32 12
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, 1
  %11 = load i8, i8* %4, align 1
  %12 = trunc i8 %11 to i1
  %13 = zext i1 %12 to i32
  %14 = add nsw i32 %10, %13
  %15 = call dereferenceable(4) i32* @_ZNK6VectorIiEixEi(%class.Vector.5* %7, i32 %14)
  %16 = load i32, i32* %15, align 4
  ret i32 %16
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN5Lexer5unlexERK6Lexeme(%class.Lexer*, %class.Lexeme* dereferenceable(32)) #2 comdat align 2 {
  %3 = alloca %class.Lexer*, align 8
  %4 = alloca %class.Lexeme*, align 8
  store %class.Lexer* %0, %class.Lexer** %3, align 8
  store %class.Lexeme* %1, %class.Lexeme** %4, align 8
  %5 = load %class.Lexer*, %class.Lexer** %3, align 8
  %6 = getelementptr inbounds %class.Lexer, %class.Lexer* %5, i32 0, i32 5
  %7 = load i32, i32* %6, align 8
  %8 = icmp slt i32 %7, 2
  br i1 %8, label %9, label %10

; <label>:9:                                      ; preds = %2
  br label %12

; <label>:10:                                     ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.132, i32 0, i32 0), i32 73, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__PRETTY_FUNCTION__._ZN5Lexer5unlexERK6Lexeme, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %12

; <label>:12:                                     ; preds = %11, %9
  %13 = load %class.Lexeme*, %class.Lexeme** %4, align 8
  %14 = getelementptr inbounds %class.Lexer, %class.Lexer* %5, i32 0, i32 4
  %15 = getelementptr inbounds %class.Lexer, %class.Lexer* %5, i32 0, i32 5
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 8
  %18 = sext i32 %16 to i64
  %19 = getelementptr inbounds [2 x %class.Lexeme], [2 x %class.Lexeme]* %14, i64 0, i64 %18
  %20 = call dereferenceable(32) %class.Lexeme* @_ZN6LexemeaSERKS_(%class.Lexeme* %19, %class.Lexeme* dereferenceable(32) %13)
  ret void
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer13yelement_nameEv(%class.Lexer*) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Lexer*, align 8
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca %class.Lexeme, align 8
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %class.String, align 8
  %9 = alloca i32
  %10 = alloca %class.String, align 8
  %11 = alloca %class.String, align 8
  %12 = alloca i8, align 1
  %13 = alloca %class.String, align 8
  store %class.Lexer* %0, %class.Lexer** %2, align 8
  %14 = load %class.Lexer*, %class.Lexer** %2, align 8
  %15 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %16 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %15, align 8
  %17 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %16, i32 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %20 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %19, align 8
  %21 = icmp eq i32 %18, 2
  br i1 %21, label %22, label %23

; <label>:22:                                     ; preds = %1
  br label %25

; <label>:23:                                     ; preds = %1
  call void @__assert_fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i32 1306, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__PRETTY_FUNCTION__._ZN5Lexer13yelement_nameEv, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %25

; <label>:25:                                     ; preds = %24, %22
  %26 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %27 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %26, align 8
  call void @_ZN5Lexer10ParseState13start_elementEv(%"struct.Lexer::ParseState"* %27)
  call void @_ZN5Lexer5yportEb(%class.Lexer* %14, i1 zeroext false)
  store i8 0, i8* %3, align 1
  store i8 0, i8* %4, align 1
  call void @_ZN5Lexer3lexEv(%class.Lexeme* sret %5, %class.Lexer* %14)
  %28 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %5, i32 256)
          to label %29 unwind label %38

; <label>:29:                                     ; preds = %25
  br i1 %28, label %30, label %42

; <label>:30:                                     ; preds = %29
  %31 = invoke dereferenceable(24) %class.String* @_ZN6Lexeme6stringEv(%class.Lexeme* %5)
          to label %32 unwind label %38

; <label>:32:                                     ; preds = %30
  %33 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %34 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %33, align 8
  %35 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %34, i32 0, i32 14
  %36 = invoke dereferenceable(24) %class.String* @_ZN6StringaSERKS_(%class.String* %35, %class.String* dereferenceable(24) %31)
          to label %37 unwind label %38

; <label>:37:                                     ; preds = %32
  store i8 1, i8* %4, align 1
  br label %307

; <label>:38:                                     ; preds = %288, %286, %281, %264, %261, %255, %253, %251, %241, %231, %223, %214, %210, %187, %182, %179, %167, %164, %141, %129, %109, %104, %101, %98, %81, %70, %63, %60, %51, %45, %42, %32, %30, %25
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = extractvalue { i8*, i32 } %39, 0
  store i8* %40, i8** %6, align 8
  %41 = extractvalue { i8*, i32 } %39, 1
  store i32 %41, i32* %7, align 4
  br label %320

; <label>:42:                                     ; preds = %29
  %43 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %5, i32 123)
          to label %44 unwind label %38

; <label>:44:                                     ; preds = %42
  br i1 %43, label %45, label %60

; <label>:45:                                     ; preds = %44
  invoke void @_ZN6StringC2Ev(%class.String* %8)
          to label %46 unwind label %38

; <label>:46:                                     ; preds = %45
  %47 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %48 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %47, align 8
  %49 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %48, i32 0, i32 14
  %50 = invoke dereferenceable(24) %class.String* @_ZN6StringaSEOS_(%class.String* %49, %class.String* dereferenceable(24) %8)
          to label %51 unwind label %56

; <label>:51:                                     ; preds = %46
  call void @_ZN6StringD2Ev(%class.String* %8) #9
  %52 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %53 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %52, align 8
  %54 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %53, i32 0, i32 0
  store i32 6, i32* %54, align 8
  invoke void @_ZN5Lexer9ycompoundEv(%class.Lexer* %14)
          to label %55 unwind label %38

; <label>:55:                                     ; preds = %51
  store i32 1, i32* %9, align 4
  br label %308

; <label>:56:                                     ; preds = %46
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %6, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %7, align 4
  call void @_ZN6StringD2Ev(%class.String* %8) #9
  br label %320

; <label>:60:                                     ; preds = %44
  %61 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %5, i32 40)
          to label %62 unwind label %38

; <label>:62:                                     ; preds = %60
  br i1 %61, label %63, label %81

; <label>:63:                                     ; preds = %62
  invoke void @_ZN6StringC2EPKc(%class.String* %11, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13, i32 0, i32 0))
          to label %64 unwind label %38

; <label>:64:                                     ; preds = %63
  invoke void @_ZNK5Lexer17anon_element_nameERK6String(%class.String* sret %10, %class.Lexer* %14, %class.String* dereferenceable(24) %11)
          to label %65 unwind label %72

; <label>:65:                                     ; preds = %64
  %66 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %67 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %66, align 8
  %68 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %67, i32 0, i32 14
  %69 = invoke dereferenceable(24) %class.String* @_ZN6StringaSEOS_(%class.String* %68, %class.String* dereferenceable(24) %10)
          to label %70 unwind label %76

; <label>:70:                                     ; preds = %65
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  invoke void @_ZN5Lexer6ygroupEv(%class.Lexer* %14)
          to label %71 unwind label %38

; <label>:71:                                     ; preds = %70
  store i32 1, i32* %9, align 4
  br label %308

; <label>:72:                                     ; preds = %64
  %73 = landingpad { i8*, i32 }
          cleanup
  %74 = extractvalue { i8*, i32 } %73, 0
  store i8* %74, i8** %6, align 8
  %75 = extractvalue { i8*, i32 } %73, 1
  store i32 %75, i32* %7, align 4
  br label %80

; <label>:76:                                     ; preds = %65
  %77 = landingpad { i8*, i32 }
          cleanup
  %78 = extractvalue { i8*, i32 } %77, 0
  store i8* %78, i8** %6, align 8
  %79 = extractvalue { i8*, i32 } %77, 1
  store i32 %79, i32* %7, align 4
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  br label %80

; <label>:80:                                     ; preds = %76, %72
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  br label %320

; <label>:81:                                     ; preds = %62
  %82 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 12
  %83 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %82, align 8
  %84 = invoke i32 @_ZNK5Lexer8Compound5depthEv(%"class.Lexer::Compound"* %83)
          to label %85 unwind label %38

; <label>:85:                                     ; preds = %81
  %86 = icmp ne i32 %84, 0
  br i1 %86, label %93, label %87

; <label>:87:                                     ; preds = %85
  %88 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %89 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %88, align 8
  %90 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %89, i32 0, i32 21
  %91 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %90, align 8
  %92 = icmp ne %"struct.Lexer::ParseState"* %91, null
  br label %93

; <label>:93:                                     ; preds = %87, %85
  %94 = phi i1 [ true, %85 ], [ %92, %87 ]
  %95 = zext i1 %94 to i8
  store i8 %95, i8* %12, align 1
  %96 = load i8, i8* %12, align 1
  %97 = trunc i8 %96 to i1
  br i1 %97, label %98, label %161

; <label>:98:                                     ; preds = %93
  %99 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %5, i32 258)
          to label %100 unwind label %38

; <label>:100:                                    ; preds = %98
  br i1 %99, label %104, label %101

; <label>:101:                                    ; preds = %100
  %102 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %5, i32 259)
          to label %103 unwind label %38

; <label>:103:                                    ; preds = %101
  br i1 %102, label %104, label %161

; <label>:104:                                    ; preds = %103, %100
  %105 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %106 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %105, align 8
  %107 = invoke zeroext i1 @_ZNK5Lexer10ParseState17first_element_setEv(%"struct.Lexer::ParseState"* %106)
          to label %108 unwind label %38

; <label>:108:                                    ; preds = %104
  br i1 %107, label %109, label %124

; <label>:109:                                    ; preds = %108
  %110 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %111 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %110, align 8
  %112 = invoke i32 @_ZNK5Lexer10ParseState6nportsEb(%"struct.Lexer::ParseState"* %111, i1 zeroext false)
          to label %113 unwind label %38

; <label>:113:                                    ; preds = %109
  %114 = icmp ne i32 %112, 0
  br i1 %114, label %122, label %115

; <label>:115:                                    ; preds = %113
  %116 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %117 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %116, align 8
  %118 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %117, i32 0, i32 12
  %119 = load i32, i32* %118, align 8
  %120 = icmp ne i32 %119, 0
  %121 = xor i1 %120, true
  br label %122

; <label>:122:                                    ; preds = %115, %113
  %123 = phi i1 [ true, %113 ], [ %121, %115 ]
  br label %124

; <label>:124:                                    ; preds = %122, %108
  %125 = phi i1 [ false, %108 ], [ %123, %122 ]
  %126 = zext i1 %125 to i8
  store i8 %126, i8* %3, align 1
  %127 = load i8, i8* %3, align 1
  %128 = trunc i8 %127 to i1
  br i1 %128, label %129, label %160

; <label>:129:                                    ; preds = %124
  %130 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %131 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %130, align 8
  %132 = invoke i32 @_ZNK5Lexer10ParseState6nportsEb(%"struct.Lexer::ParseState"* %131, i1 zeroext false)
          to label %133 unwind label %38

; <label>:133:                                    ; preds = %129
  %134 = icmp ne i32 %132, 0
  br i1 %134, label %160, label %135

; <label>:135:                                    ; preds = %133
  %136 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %137 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %136, align 8
  %138 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %137, i32 0, i32 9
  %139 = load i8, i8* %138, align 2
  %140 = trunc i8 %139 to i1
  br i1 %140, label %160, label %141

; <label>:141:                                    ; preds = %135
  %142 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 19
  %143 = load %class.ErrorHandler*, %class.ErrorHandler** %142, align 8
  %144 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 1
  invoke void @_ZNK5Lexer9FileState8landmarkEv(%class.String* sret %13, %"struct.Lexer::FileState"* %144)
          to label %145 unwind label %38

; <label>:145:                                    ; preds = %141
  %146 = invoke dereferenceable(24) %class.String* @_ZN6Lexeme6stringEv(%class.Lexeme* %5)
          to label %147 unwind label %156

; <label>:147:                                    ; preds = %145
  %148 = invoke i8* @_ZNK6String5c_strEv(%class.String* %146)
          to label %149 unwind label %156

; <label>:149:                                    ; preds = %147
  %150 = invoke dereferenceable(24) %class.String* @_ZN6Lexeme6stringEv(%class.Lexeme* %5)
          to label %151 unwind label %156

; <label>:151:                                    ; preds = %149
  %152 = invoke i8* @_ZNK6String5c_strEv(%class.String* %150)
          to label %153 unwind label %156

; <label>:153:                                    ; preds = %151
  %154 = invoke i32 (%class.ErrorHandler*, %class.String*, i8*, ...) @_ZN12ErrorHandler8lwarningERK6StringPKcz(%class.ErrorHandler* %143, %class.String* dereferenceable(24) %13, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.60, i32 0, i32 0), i8* %148, i8* %152)
          to label %155 unwind label %156

; <label>:155:                                    ; preds = %153
  call void @_ZN6StringD2Ev(%class.String* %13) #9
  br label %160

; <label>:156:                                    ; preds = %153, %151, %149, %147, %145
  %157 = landingpad { i8*, i32 }
          cleanup
  %158 = extractvalue { i8*, i32 } %157, 0
  store i8* %158, i8** %6, align 8
  %159 = extractvalue { i8*, i32 } %157, 1
  store i32 %159, i32* %7, align 4
  call void @_ZN6StringD2Ev(%class.String* %13) #9
  br label %320

; <label>:160:                                    ; preds = %155, %135, %133, %124
  br label %207

; <label>:161:                                    ; preds = %103, %93
  %162 = load i8, i8* %12, align 1
  %163 = trunc i8 %162 to i1
  br i1 %163, label %164, label %176

; <label>:164:                                    ; preds = %161
  %165 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %5, i32 44)
          to label %166 unwind label %38

; <label>:166:                                    ; preds = %164
  br i1 %165, label %167, label %176

; <label>:167:                                    ; preds = %166
  %168 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %169 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %168, align 8
  %170 = invoke i32 @_ZNK5Lexer10ParseState6nportsEb(%"struct.Lexer::ParseState"* %169, i1 zeroext false)
          to label %171 unwind label %38

; <label>:171:                                    ; preds = %167
  %172 = icmp ne i32 %170, 0
  %173 = xor i1 %172, true
  %174 = xor i1 %173, true
  %175 = zext i1 %174 to i8
  store i8 %175, i8* %3, align 1
  br label %206

; <label>:176:                                    ; preds = %166, %161
  %177 = load i8, i8* %12, align 1
  %178 = trunc i8 %177 to i1
  br i1 %178, label %179, label %205

; <label>:179:                                    ; preds = %176
  %180 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %5, i32 260)
          to label %181 unwind label %38

; <label>:181:                                    ; preds = %179
  br i1 %180, label %205, label %182

; <label>:182:                                    ; preds = %181
  %183 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %184 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %183, align 8
  %185 = invoke zeroext i1 @_ZNK5Lexer10ParseState17first_element_setEv(%"struct.Lexer::ParseState"* %184)
          to label %186 unwind label %38

; <label>:186:                                    ; preds = %182
  br i1 %185, label %202, label %187

; <label>:187:                                    ; preds = %186
  %188 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %189 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %188, align 8
  %190 = invoke i32 @_ZNK5Lexer10ParseState6nportsEb(%"struct.Lexer::ParseState"* %189, i1 zeroext false)
          to label %191 unwind label %38

; <label>:191:                                    ; preds = %187
  %192 = icmp ne i32 %190, 0
  br i1 %192, label %200, label %193

; <label>:193:                                    ; preds = %191
  %194 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %195 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %194, align 8
  %196 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %195, i32 0, i32 12
  %197 = load i32, i32* %196, align 8
  %198 = icmp ne i32 %197, 0
  %199 = xor i1 %198, true
  br label %200

; <label>:200:                                    ; preds = %193, %191
  %201 = phi i1 [ true, %191 ], [ %199, %193 ]
  br label %202

; <label>:202:                                    ; preds = %200, %186
  %203 = phi i1 [ false, %186 ], [ %201, %200 ]
  %204 = zext i1 %203 to i8
  store i8 %204, i8* %3, align 1
  br label %205

; <label>:205:                                    ; preds = %202, %181, %176
  br label %206

; <label>:206:                                    ; preds = %205, %171
  br label %207

; <label>:207:                                    ; preds = %206, %160
  %208 = load i8, i8* %3, align 1
  %209 = trunc i8 %208 to i1
  br i1 %209, label %210, label %255

; <label>:210:                                    ; preds = %207
  %211 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %212 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %211, align 8
  %213 = invoke zeroext i1 @_ZNK5Lexer10ParseState17first_element_setEv(%"struct.Lexer::ParseState"* %212)
          to label %214 unwind label %38

; <label>:214:                                    ; preds = %210
  %215 = xor i1 %213, true
  %216 = zext i1 %215 to i64
  %217 = getelementptr inbounds [2 x i8*], [2 x i8*]* @_ZL10port_names, i64 0, i64 %216
  %218 = load i8*, i8** %217, align 8
  %219 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %220 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %219, align 8
  %221 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %220, i32 0, i32 14
  %222 = invoke dereferenceable(24) %class.String* @_ZN6StringaSEPKc(%class.String* %221, i8* %218)
          to label %223 unwind label %38

; <label>:223:                                    ; preds = %214
  %224 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %225 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %224, align 8
  %226 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %225, i32 0, i32 7
  store i8 1, i8* %226, align 8
  %227 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %228 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %227, align 8
  %229 = invoke zeroext i1 @_ZNK5Lexer10ParseState17first_element_setEv(%"struct.Lexer::ParseState"* %228)
          to label %230 unwind label %38

; <label>:230:                                    ; preds = %223
  br i1 %229, label %231, label %253

; <label>:231:                                    ; preds = %230
  %232 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %233 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %232, align 8
  %234 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %233, i32 0, i32 11
  %235 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %236 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %235, align 8
  %237 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %236, i32 0, i32 12
  %238 = load i32, i32* %237, align 8
  %239 = add nsw i32 %238, 1
  %240 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %234, i32 %239)
          to label %241 unwind label %38

; <label>:241:                                    ; preds = %231
  %242 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %243 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %242, align 8
  %244 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %243, i32 0, i32 11
  %245 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %246 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %245, align 8
  %247 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %246, i32 0, i32 12
  %248 = load i32, i32* %247, align 8
  %249 = add nsw i32 %248, 2
  %250 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %244, i32 %249)
          to label %251 unwind label %38

; <label>:251:                                    ; preds = %241
  invoke void @_Z10click_swapIiEvRT_S1_(i32* dereferenceable(4) %240, i32* dereferenceable(4) %250)
          to label %252 unwind label %38

; <label>:252:                                    ; preds = %251
  br label %253

; <label>:253:                                    ; preds = %252, %230
  invoke void @_ZN5Lexer5unlexERK6Lexeme(%class.Lexer* %14, %class.Lexeme* dereferenceable(32) %5)
          to label %254 unwind label %38

; <label>:254:                                    ; preds = %253
  br label %304

; <label>:255:                                    ; preds = %207
  %256 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %257 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %256, align 8
  %258 = invoke i32 @_ZNK5Lexer10ParseState6nportsEb(%"struct.Lexer::ParseState"* %257, i1 zeroext false)
          to label %259 unwind label %38

; <label>:259:                                    ; preds = %255
  %260 = icmp ne i32 %258, 0
  br i1 %260, label %261, label %264

; <label>:261:                                    ; preds = %259
  %262 = invoke i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %14, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.61, i32 0, i32 0))
          to label %263 unwind label %38

; <label>:263:                                    ; preds = %261
  br label %264

; <label>:264:                                    ; preds = %263, %259
  %265 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %266 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %265, align 8
  %267 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %266, i32 0, i32 11
  %268 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %269 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %268, align 8
  %270 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %269, i32 0, i32 12
  %271 = load i32, i32* %270, align 8
  invoke void @_ZN6VectorIiE6resizeEii(%class.Vector.5* %267, i32 %271, i32 0)
          to label %272 unwind label %38

; <label>:272:                                    ; preds = %264
  %273 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %274 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %273, align 8
  %275 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %274, i32 0, i32 12
  %276 = load i32, i32* %275, align 8
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %297

; <label>:278:                                    ; preds = %272
  %279 = load i8, i8* %12, align 1
  %280 = trunc i8 %279 to i1
  br i1 %280, label %281, label %288

; <label>:281:                                    ; preds = %278
  %282 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %283 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %282, align 8
  %284 = invoke zeroext i1 @_ZNK5Lexer10ParseState17first_element_setEv(%"struct.Lexer::ParseState"* %283)
          to label %285 unwind label %38

; <label>:285:                                    ; preds = %281
  br i1 %284, label %286, label %288

; <label>:286:                                    ; preds = %285
  invoke void @_ZN5Lexer5unlexERK6Lexeme(%class.Lexer* %14, %class.Lexeme* dereferenceable(32) %5)
          to label %287 unwind label %38

; <label>:287:                                    ; preds = %286
  br label %291

; <label>:288:                                    ; preds = %285, %278
  %289 = invoke i32 @_ZN5Lexer13lerror_syntaxERK6Lexeme(%class.Lexer* %14, %class.Lexeme* dereferenceable(32) %5)
          to label %290 unwind label %38

; <label>:290:                                    ; preds = %288
  br label %291

; <label>:291:                                    ; preds = %290, %287
  %292 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %293 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %292, align 8
  %294 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %295 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %294, align 8
  %296 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %295, i32 0, i32 0
  store i32 5, i32* %296, align 8
  br label %303

; <label>:297:                                    ; preds = %272
  %298 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %299 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %298, align 8
  %300 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %301 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %300, align 8
  %302 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %301, i32 0, i32 0
  store i32 3, i32* %302, align 8
  br label %303

; <label>:303:                                    ; preds = %297, %291
  store i32 1, i32* %9, align 4
  br label %308

; <label>:304:                                    ; preds = %254
  br label %305

; <label>:305:                                    ; preds = %304
  br label %306

; <label>:306:                                    ; preds = %305
  br label %307

; <label>:307:                                    ; preds = %306, %37
  store i32 0, i32* %9, align 4
  br label %308

; <label>:308:                                    ; preds = %307, %303, %71, %55
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %5) #9
  %309 = load i32, i32* %9, align 4
  switch i32 %309, label %326 [
    i32 0, label %310
    i32 1, label %319
  ]

; <label>:310:                                    ; preds = %308
  %311 = getelementptr inbounds %class.Lexer, %class.Lexer* %14, i32 0, i32 13
  %312 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %311, align 8
  %313 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %312, i32 0, i32 14
  %314 = call i32 @_ZNK5Lexer12element_typeERK6String(%class.Lexer* %14, %class.String* dereferenceable(24) %313)
  %315 = load i8, i8* %4, align 1
  %316 = trunc i8 %315 to i1
  %317 = load i8, i8* %3, align 1
  %318 = trunc i8 %317 to i1
  call void @_ZN5Lexer13yelement_typeEibb(%class.Lexer* %14, i32 %314, i1 zeroext %316, i1 zeroext %318)
  br label %319

; <label>:319:                                    ; preds = %310, %308
  ret void

; <label>:320:                                    ; preds = %156, %80, %56, %38
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %5) #9
  br label %321

; <label>:321:                                    ; preds = %320
  %322 = load i8*, i8** %6, align 8
  %323 = load i32, i32* %7, align 4
  %324 = insertvalue { i8*, i32 } undef, i8* %322, 0
  %325 = insertvalue { i8*, i32 } %324, i32 %323, 1
  resume { i8*, i32 } %325

; <label>:326:                                    ; preds = %308
  unreachable
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN5Lexer10ParseState13start_elementEv(%"struct.Lexer::ParseState"*) #2 comdat align 2 {
  %2 = alloca %"struct.Lexer::ParseState"*, align 8
  store %"struct.Lexer::ParseState"* %0, %"struct.Lexer::ParseState"** %2, align 8
  %3 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %2, align 8
  %4 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %3, i32 0, i32 11
  %5 = call i32 @_ZNK6VectorIiE4sizeEv(%class.Vector.5* %4)
  %6 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %3, i32 0, i32 12
  store i32 %5, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %3, i32 0, i32 11
  call void @_ZN6VectorIiE9push_backEi(%class.Vector.5* %7, i32 -1)
  %8 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %3, i32 0, i32 11
  call void @_ZN6VectorIiE9push_backEi(%class.Vector.5* %8, i32 0)
  %9 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %3, i32 0, i32 11
  call void @_ZN6VectorIiE9push_backEi(%class.Vector.5* %9, i32 0)
  ret void
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer9ycompoundEv(%class.Lexer*) #2 align 2 {
  %2 = alloca %class.Lexer*, align 8
  store %class.Lexer* %0, %class.Lexer** %2, align 8
  %3 = load %class.Lexer*, %class.Lexer** %2, align 8
  %4 = getelementptr inbounds %class.Lexer, %class.Lexer* %3, i32 0, i32 7
  %5 = getelementptr inbounds %class.Lexer, %class.Lexer* %3, i32 0, i32 13
  %6 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %5, align 8
  %7 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %6, i32 0, i32 15
  %8 = call dereferenceable(64) %class.HashTable* @_ZN9HashTableI6StringiEaSERKS1_(%class.HashTable* %7, %class.HashTable* dereferenceable(64) %4)
  %9 = getelementptr inbounds %class.Lexer, %class.Lexer* %3, i32 0, i32 12
  %10 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %9, align 8
  %11 = getelementptr inbounds %class.Lexer, %class.Lexer* %3, i32 0, i32 13
  %12 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %11, align 8
  %13 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %12, i32 0, i32 16
  store %"class.Lexer::Compound"* %10, %"class.Lexer::Compound"** %13, align 8
  %14 = getelementptr inbounds %class.Lexer, %class.Lexer* %3, i32 0, i32 13
  %15 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %14, align 8
  %16 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %15, i32 0, i32 18
  store %"class.Lexer::Compound"* null, %"class.Lexer::Compound"** %16, align 8
  %17 = getelementptr inbounds %class.Lexer, %class.Lexer* %3, i32 0, i32 13
  %18 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %17, align 8
  %19 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %18, i32 0, i32 17
  store %"class.Lexer::Compound"* null, %"class.Lexer::Compound"** %19, align 8
  %20 = getelementptr inbounds %class.Lexer, %class.Lexer* %3, i32 0, i32 13
  %21 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %20, align 8
  %22 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %21, i32 0, i32 19
  store i32 -1, i32* %22, align 8
  call void @_ZN5Lexer14ycompound_nextEv(%class.Lexer* %3)
  ret void
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer6ygroupEv(%class.Lexer*) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Lexer*, align 8
  %3 = alloca [3 x i32], align 4
  %4 = alloca %class.String, align 8
  %5 = alloca i8*
  %6 = alloca i32
  %7 = alloca %class.String, align 8
  %8 = alloca %class.String, align 8
  %9 = alloca %class.String, align 8
  %10 = alloca %class.String, align 8
  store %class.Lexer* %0, %class.Lexer** %2, align 8
  %11 = load %class.Lexer*, %class.Lexer** %2, align 8
  %12 = getelementptr inbounds %class.Lexer, %class.Lexer* %11, i32 0, i32 13
  %13 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %12, align 8
  %14 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %13, i32 0, i32 14
  call void @_ZN6StringC2ERKS_(%class.String* %4, %class.String* dereferenceable(24) %14)
  %15 = getelementptr inbounds [3 x i32], [3 x i32]* %3, i32 0, i32 0
  invoke void @_ZN5Lexer11add_tunnelsE6StringPi(%class.Lexer* %11, %class.String* %4, i32* %15)
          to label %16 unwind label %64

; <label>:16:                                     ; preds = %1
  call void @_ZN6StringD2Ev(%class.String* %4) #9
  %17 = getelementptr inbounds %class.Lexer, %class.Lexer* %11, i32 0, i32 13
  %18 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %17, align 8
  %19 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %18, i32 0, i32 11
  %20 = getelementptr inbounds %class.Lexer, %class.Lexer* %11, i32 0, i32 12
  %21 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %20, align 8
  %22 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %21, i32 0, i32 10
  call void @_ZN6StringC2EPKc(%class.String* %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0))
  %23 = invoke dereferenceable(4) i32* @_ZN9HashTableI6StringiEixERKS0_(%class.HashTable* %22, %class.String* dereferenceable(24) %7)
          to label %24 unwind label %68

; <label>:24:                                     ; preds = %16
  %25 = load i32, i32* %23, align 4
  invoke void @_ZN6VectorIiE9push_backEi(%class.Vector.5* %19, i32 %25)
          to label %26 unwind label %68

; <label>:26:                                     ; preds = %24
  call void @_ZN6StringD2Ev(%class.String* %7) #9
  %27 = getelementptr inbounds %class.Lexer, %class.Lexer* %11, i32 0, i32 13
  %28 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %27, align 8
  %29 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %28, i32 0, i32 11
  %30 = getelementptr inbounds %class.Lexer, %class.Lexer* %11, i32 0, i32 12
  %31 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %30, align 8
  %32 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %31, i32 0, i32 10
  call void @_ZN6StringC2EPKc(%class.String* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0))
  %33 = invoke dereferenceable(4) i32* @_ZN9HashTableI6StringiEixERKS0_(%class.HashTable* %32, %class.String* dereferenceable(24) %8)
          to label %34 unwind label %72

; <label>:34:                                     ; preds = %26
  %35 = load i32, i32* %33, align 4
  invoke void @_ZN6VectorIiE9push_backEi(%class.Vector.5* %29, i32 %35)
          to label %36 unwind label %72

; <label>:36:                                     ; preds = %34
  call void @_ZN6StringD2Ev(%class.String* %8) #9
  %37 = getelementptr inbounds [3 x i32], [3 x i32]* %3, i64 0, i64 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %class.Lexer, %class.Lexer* %11, i32 0, i32 12
  %40 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %39, align 8
  %41 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %40, i32 0, i32 10
  call void @_ZN6StringC2EPKc(%class.String* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0))
  %42 = invoke dereferenceable(4) i32* @_ZN9HashTableI6StringiEixERKS0_(%class.HashTable* %41, %class.String* dereferenceable(24) %9)
          to label %43 unwind label %76

; <label>:43:                                     ; preds = %36
  store i32 %38, i32* %42, align 4
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  %44 = getelementptr inbounds [3 x i32], [3 x i32]* %3, i64 0, i64 2
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %class.Lexer, %class.Lexer* %11, i32 0, i32 12
  %47 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %46, align 8
  %48 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %47, i32 0, i32 10
  call void @_ZN6StringC2EPKc(%class.String* %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0))
  %49 = invoke dereferenceable(4) i32* @_ZN9HashTableI6StringiEixERKS0_(%class.HashTable* %48, %class.String* dereferenceable(24) %10)
          to label %50 unwind label %80

; <label>:50:                                     ; preds = %43
  store i32 %45, i32* %49, align 4
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  %51 = call i8* @_Znwm(i64 216) #15
  %52 = bitcast i8* %51 to %"struct.Lexer::ParseState"*
  %53 = getelementptr inbounds %class.Lexer, %class.Lexer* %11, i32 0, i32 13
  %54 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %53, align 8
  invoke void @_ZN5Lexer10ParseStateC2EiPS0_(%"struct.Lexer::ParseState"* %52, i32 2, %"struct.Lexer::ParseState"* %54)
          to label %55 unwind label %84

; <label>:55:                                     ; preds = %50
  %56 = getelementptr inbounds %class.Lexer, %class.Lexer* %11, i32 0, i32 13
  store %"struct.Lexer::ParseState"* %52, %"struct.Lexer::ParseState"** %56, align 8
  %57 = getelementptr inbounds %class.Lexer, %class.Lexer* %11, i32 0, i32 13
  %58 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %57, align 8
  %59 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %58, i32 0, i32 22
  %60 = load i32, i32* %59, align 8
  %61 = icmp sge i32 %60, 50
  br i1 %61, label %62, label %88

; <label>:62:                                     ; preds = %55
  %63 = call i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %11, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.85, i32 0, i32 0))
  call void @_ZN5Lexer10ygroup_endEv(%class.Lexer* %11)
  br label %88

; <label>:64:                                     ; preds = %1
  %65 = landingpad { i8*, i32 }
          cleanup
  %66 = extractvalue { i8*, i32 } %65, 0
  store i8* %66, i8** %5, align 8
  %67 = extractvalue { i8*, i32 } %65, 1
  store i32 %67, i32* %6, align 4
  call void @_ZN6StringD2Ev(%class.String* %4) #9
  br label %89

; <label>:68:                                     ; preds = %24, %16
  %69 = landingpad { i8*, i32 }
          cleanup
  %70 = extractvalue { i8*, i32 } %69, 0
  store i8* %70, i8** %5, align 8
  %71 = extractvalue { i8*, i32 } %69, 1
  store i32 %71, i32* %6, align 4
  call void @_ZN6StringD2Ev(%class.String* %7) #9
  br label %89

; <label>:72:                                     ; preds = %34, %26
  %73 = landingpad { i8*, i32 }
          cleanup
  %74 = extractvalue { i8*, i32 } %73, 0
  store i8* %74, i8** %5, align 8
  %75 = extractvalue { i8*, i32 } %73, 1
  store i32 %75, i32* %6, align 4
  call void @_ZN6StringD2Ev(%class.String* %8) #9
  br label %89

; <label>:76:                                     ; preds = %36
  %77 = landingpad { i8*, i32 }
          cleanup
  %78 = extractvalue { i8*, i32 } %77, 0
  store i8* %78, i8** %5, align 8
  %79 = extractvalue { i8*, i32 } %77, 1
  store i32 %79, i32* %6, align 4
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  br label %89

; <label>:80:                                     ; preds = %43
  %81 = landingpad { i8*, i32 }
          cleanup
  %82 = extractvalue { i8*, i32 } %81, 0
  store i8* %82, i8** %5, align 8
  %83 = extractvalue { i8*, i32 } %81, 1
  store i32 %83, i32* %6, align 4
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  br label %89

; <label>:84:                                     ; preds = %50
  %85 = landingpad { i8*, i32 }
          cleanup
  %86 = extractvalue { i8*, i32 } %85, 0
  store i8* %86, i8** %5, align 8
  %87 = extractvalue { i8*, i32 } %85, 1
  store i32 %87, i32* %6, align 4
  call void @_ZdlPv(i8* %51) #14
  br label %89

; <label>:88:                                     ; preds = %62, %55
  ret void

; <label>:89:                                     ; preds = %84, %80, %76, %72, %68, %64
  %90 = load i8*, i8** %5, align 8
  %91 = load i32, i32* %6, align 4
  %92 = insertvalue { i8*, i32 } undef, i8* %90, 0
  %93 = insertvalue { i8*, i32 } %92, i32 %91, 1
  resume { i8*, i32 } %93
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr zeroext i1 @_ZNK5Lexer10ParseState17first_element_setEv(%"struct.Lexer::ParseState"*) #2 comdat align 2 {
  %2 = alloca %"struct.Lexer::ParseState"*, align 8
  store %"struct.Lexer::ParseState"* %0, %"struct.Lexer::ParseState"** %2, align 8
  %3 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %2, align 8
  %4 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %3, i32 0, i32 2
  %5 = call zeroext i1 @_ZNK6VectorIiE5emptyEv(%class.Vector.5* %4)
  ret i1 %5
}

declare i32 @_ZN12ErrorHandler8lwarningERK6StringPKcz(%class.ErrorHandler*, %class.String* dereferenceable(24), i8*, ...) #3

; Function Attrs: noinline optnone uwtable
define linkonce_odr dereferenceable(24) %class.String* @_ZN6StringaSEPKc(%class.String*, i8*) #2 comdat align 2 {
  %3 = alloca %class.String*, align 8
  %4 = alloca i8*, align 8
  store %class.String* %0, %class.String** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %class.String*, %class.String** %3, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %8, label %14

; <label>:8:                                      ; preds = %2
  br i1 false, label %9, label %14

; <label>:9:                                      ; preds = %8
  call void @_ZNK6String5derefEv(%class.String* %5)
  %10 = load i8*, i8** %4, align 8
  %11 = load i8*, i8** %4, align 8
  %12 = call i64 @strlen(i8* %11) #13
  %13 = trunc i64 %12 to i32
  call void @_ZNK6String11assign_memoEPKciPNS_6memo_tE(%class.String* %5, i8* %10, i32 %13, %"struct.String::memo_t"* null)
  br label %16

; <label>:14:                                     ; preds = %8, %2
  %15 = load i8*, i8** %4, align 8
  call void @_ZN6String6assignEPKcib(%class.String* %5, i8* %15, i32 -1, i1 zeroext true)
  br label %16

; <label>:16:                                     ; preds = %14, %9
  ret %class.String* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_Z10click_swapIiEvRT_S1_(i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* %5, align 4
  %8 = load i32*, i32** %4, align 8
  %9 = load i32, i32* %8, align 4
  %10 = load i32*, i32** %3, align 8
  store i32 %9, i32* %10, align 4
  %11 = load i32, i32* %5, align 4
  %12 = load i32*, i32** %4, align 8
  store i32 %11, i32* %12, align 4
  ret void
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer13yelement_typeEibb(%class.Lexer*, i32, i1 zeroext, i1 zeroext) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %class.Lexer*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca %"struct.Lexer::ElementState"*, align 8
  %10 = alloca i8*
  %11 = alloca i32
  %12 = alloca %class.Lexeme, align 8
  %13 = alloca %class.Lexeme, align 8
  %14 = alloca %class.String, align 8
  %15 = alloca %class.Lexeme, align 8
  %16 = alloca %class.String, align 8
  %17 = alloca i32
  %18 = alloca %class.String, align 8
  store %class.Lexer* %0, %class.Lexer** %5, align 8
  store i32 %1, i32* %6, align 4
  %19 = zext i1 %2 to i8
  store i8 %19, i8* %7, align 1
  %20 = zext i1 %3 to i8
  store i8 %20, i8* %8, align 1
  %21 = load %class.Lexer*, %class.Lexer** %5, align 8
  %22 = call i8* @_Znwm(i64 104) #15
  %23 = bitcast i8* %22 to %"struct.Lexer::ElementState"*
  %24 = getelementptr inbounds %class.Lexer, %class.Lexer* %21, i32 0, i32 13
  %25 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %24, align 8
  %26 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %25, i32 0, i32 14
  %27 = load i32, i32* %6, align 4
  %28 = load i8, i8* %7, align 1
  %29 = trunc i8 %28 to i1
  %30 = getelementptr inbounds %class.Lexer, %class.Lexer* %21, i32 0, i32 1
  %31 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %30, i32 0, i32 3
  %32 = getelementptr inbounds %class.Lexer, %class.Lexer* %21, i32 0, i32 1
  %33 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %32, i32 0, i32 5
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %class.Lexer, %class.Lexer* %21, i32 0, i32 13
  %36 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %35, align 8
  invoke void @_ZN5Lexer12ElementStateC2ERK6StringibS3_jPNS_10ParseStateE(%"struct.Lexer::ElementState"* %23, %class.String* dereferenceable(24) %26, i32 %27, i1 zeroext %29, %class.String* dereferenceable(24) %31, i32 %34, %"struct.Lexer::ParseState"* %36)
          to label %37 unwind label %62

; <label>:37:                                     ; preds = %4
  store %"struct.Lexer::ElementState"* %23, %"struct.Lexer::ElementState"** %9, align 8
  call void @_ZN5Lexer3lexEv(%class.Lexeme* sret %12, %class.Lexer* %21)
  %38 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %12, i32 260)
          to label %39 unwind label %66

; <label>:39:                                     ; preds = %37
  br i1 %38, label %40, label %116

; <label>:40:                                     ; preds = %39
  %41 = load i8, i8* %8, align 1
  %42 = trunc i8 %41 to i1
  br i1 %42, label %116, label %43

; <label>:43:                                     ; preds = %40
  %44 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %9, align 8
  %45 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %44, i32 0, i32 3
  store i8 0, i8* %45, align 8
  invoke void @_ZN5Lexer3lexEv(%class.Lexeme* sret %13, %class.Lexer* %21)
          to label %46 unwind label %66

; <label>:46:                                     ; preds = %43
  %47 = invoke dereferenceable(32) %class.Lexeme* @_ZN6LexemeaSEOS_(%class.Lexeme* %12, %class.Lexeme* dereferenceable(32) %13)
          to label %48 unwind label %70

; <label>:48:                                     ; preds = %46
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %13) #9
  %49 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %12, i32 256)
          to label %50 unwind label %66

; <label>:50:                                     ; preds = %48
  br i1 %49, label %51, label %82

; <label>:51:                                     ; preds = %50
  %52 = invoke dereferenceable(24) %class.String* @_ZN6Lexeme6stringEv(%class.Lexeme* %12)
          to label %53 unwind label %66

; <label>:53:                                     ; preds = %51
  invoke void @_ZN6StringC2ERKS_(%class.String* %14, %class.String* dereferenceable(24) %52)
          to label %54 unwind label %66

; <label>:54:                                     ; preds = %53
  %55 = invoke i32 @_ZN5Lexer18force_element_typeE6Stringb(%class.Lexer* %21, %class.String* %14, i1 zeroext true)
          to label %56 unwind label %74

; <label>:56:                                     ; preds = %54
  %57 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %9, align 8
  %58 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %57, i32 0, i32 2
  store i32 %55, i32* %58, align 4
  call void @_ZN6StringD2Ev(%class.String* %14) #9
  invoke void @_ZN5Lexer3lexEv(%class.Lexeme* sret %15, %class.Lexer* %21)
          to label %59 unwind label %66

; <label>:59:                                     ; preds = %56
  %60 = invoke dereferenceable(32) %class.Lexeme* @_ZN6LexemeaSEOS_(%class.Lexeme* %12, %class.Lexeme* dereferenceable(32) %15)
          to label %61 unwind label %78

; <label>:61:                                     ; preds = %59
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %15) #9
  br label %115

; <label>:62:                                     ; preds = %4
  %63 = landingpad { i8*, i32 }
          cleanup
  %64 = extractvalue { i8*, i32 } %63, 0
  store i8* %64, i8** %10, align 8
  %65 = extractvalue { i8*, i32 } %63, 1
  store i32 %65, i32* %11, align 4
  call void @_ZdlPv(i8* %22) #14
  br label %126

; <label>:66:                                     ; preds = %116, %102, %100, %91, %85, %82, %56, %53, %51, %48, %43, %37
  %67 = landingpad { i8*, i32 }
          cleanup
  %68 = extractvalue { i8*, i32 } %67, 0
  store i8* %68, i8** %10, align 8
  %69 = extractvalue { i8*, i32 } %67, 1
  store i32 %69, i32* %11, align 4
  br label %125

; <label>:70:                                     ; preds = %46
  %71 = landingpad { i8*, i32 }
          cleanup
  %72 = extractvalue { i8*, i32 } %71, 0
  store i8* %72, i8** %10, align 8
  %73 = extractvalue { i8*, i32 } %71, 1
  store i32 %73, i32* %11, align 4
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %13) #9
  br label %125

; <label>:74:                                     ; preds = %54
  %75 = landingpad { i8*, i32 }
          cleanup
  %76 = extractvalue { i8*, i32 } %75, 0
  store i8* %76, i8** %10, align 8
  %77 = extractvalue { i8*, i32 } %75, 1
  store i32 %77, i32* %11, align 4
  call void @_ZN6StringD2Ev(%class.String* %14) #9
  br label %125

; <label>:78:                                     ; preds = %59
  %79 = landingpad { i8*, i32 }
          cleanup
  %80 = extractvalue { i8*, i32 } %79, 0
  store i8* %80, i8** %10, align 8
  %81 = extractvalue { i8*, i32 } %79, 1
  store i32 %81, i32* %11, align 4
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %15) #9
  br label %125

; <label>:82:                                     ; preds = %50
  %83 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %12, i32 123)
          to label %84 unwind label %66

; <label>:84:                                     ; preds = %82
  br i1 %83, label %85, label %100

; <label>:85:                                     ; preds = %84
  invoke void @_ZN6StringC2Ev(%class.String* %16)
          to label %86 unwind label %66

; <label>:86:                                     ; preds = %85
  %87 = getelementptr inbounds %class.Lexer, %class.Lexer* %21, i32 0, i32 13
  %88 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %87, align 8
  %89 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %88, i32 0, i32 14
  %90 = invoke dereferenceable(24) %class.String* @_ZN6StringaSEOS_(%class.String* %89, %class.String* dereferenceable(24) %16)
          to label %91 unwind label %96

; <label>:91:                                     ; preds = %86
  call void @_ZN6StringD2Ev(%class.String* %16) #9
  %92 = getelementptr inbounds %class.Lexer, %class.Lexer* %21, i32 0, i32 13
  %93 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %92, align 8
  %94 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %93, i32 0, i32 0
  store i32 7, i32* %94, align 8
  invoke void @_ZN5Lexer9ycompoundEv(%class.Lexer* %21)
          to label %95 unwind label %66

; <label>:95:                                     ; preds = %91
  store i32 1, i32* %17, align 4
  br label %118

; <label>:96:                                     ; preds = %86
  %97 = landingpad { i8*, i32 }
          cleanup
  %98 = extractvalue { i8*, i32 } %97, 0
  store i8* %98, i8** %10, align 8
  %99 = extractvalue { i8*, i32 } %97, 1
  store i32 %99, i32* %11, align 4
  call void @_ZN6StringD2Ev(%class.String* %16) #9
  br label %125

; <label>:100:                                    ; preds = %84
  %101 = invoke i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %21, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.62, i32 0, i32 0))
          to label %102 unwind label %66

; <label>:102:                                    ; preds = %100
  %103 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %9, align 8
  %104 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %103, i32 0, i32 0
  invoke void @_ZN6StringC2ERKS_(%class.String* %18, %class.String* dereferenceable(24) %104)
          to label %105 unwind label %66

; <label>:105:                                    ; preds = %102
  %106 = invoke i32 @_ZN5Lexer18force_element_typeE6Stringb(%class.Lexer* %21, %class.String* %18, i1 zeroext true)
          to label %107 unwind label %110

; <label>:107:                                    ; preds = %105
  %108 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %9, align 8
  %109 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %108, i32 0, i32 2
  store i32 %106, i32* %109, align 4
  call void @_ZN6StringD2Ev(%class.String* %18) #9
  br label %114

; <label>:110:                                    ; preds = %105
  %111 = landingpad { i8*, i32 }
          cleanup
  %112 = extractvalue { i8*, i32 } %111, 0
  store i8* %112, i8** %10, align 8
  %113 = extractvalue { i8*, i32 } %111, 1
  store i32 %113, i32* %11, align 4
  call void @_ZN6StringD2Ev(%class.String* %18) #9
  br label %125

; <label>:114:                                    ; preds = %107
  br label %115

; <label>:115:                                    ; preds = %114, %61
  br label %116

; <label>:116:                                    ; preds = %115, %40, %39
  invoke void @_ZN5Lexer5unlexERK6Lexeme(%class.Lexer* %21, %class.Lexeme* dereferenceable(32) %12)
          to label %117 unwind label %66

; <label>:117:                                    ; preds = %116
  store i32 0, i32* %17, align 4
  br label %118

; <label>:118:                                    ; preds = %117, %95
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %12) #9
  %119 = load i32, i32* %17, align 4
  switch i32 %119, label %131 [
    i32 0, label %120
    i32 1, label %124
  ]

; <label>:120:                                    ; preds = %118
  %121 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %9, align 8
  %122 = load i8, i8* %8, align 1
  %123 = trunc i8 %122 to i1
  call void @_ZN5Lexer15yelement_configEPNS_12ElementStateEb(%class.Lexer* %21, %"struct.Lexer::ElementState"* %121, i1 zeroext %123)
  br label %124

; <label>:124:                                    ; preds = %120, %118
  ret void

; <label>:125:                                    ; preds = %110, %96, %78, %74, %70, %66
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %12) #9
  br label %126

; <label>:126:                                    ; preds = %125, %62
  %127 = load i8*, i8** %10, align 8
  %128 = load i32, i32* %11, align 4
  %129 = insertvalue { i8*, i32 } undef, i8* %127, 0
  %130 = insertvalue { i8*, i32 } %129, i32 %128, 1
  resume { i8*, i32 } %130

; <label>:131:                                    ; preds = %118
  unreachable
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN5Lexer12ElementStateC2ERK6StringibS3_jPNS_10ParseStateE(%"struct.Lexer::ElementState"*, %class.String* dereferenceable(24), i32, i1 zeroext, %class.String* dereferenceable(24), i32, %"struct.Lexer::ParseState"*) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %8 = alloca %"struct.Lexer::ElementState"*, align 8
  %9 = alloca %class.String*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca %class.String*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %"struct.Lexer::ParseState"*, align 8
  %15 = alloca i8*
  %16 = alloca i32
  store %"struct.Lexer::ElementState"* %0, %"struct.Lexer::ElementState"** %8, align 8
  store %class.String* %1, %class.String** %9, align 8
  store i32 %2, i32* %10, align 4
  %17 = zext i1 %3 to i8
  store i8 %17, i8* %11, align 1
  store %class.String* %4, %class.String** %12, align 8
  store i32 %5, i32* %13, align 4
  store %"struct.Lexer::ParseState"* %6, %"struct.Lexer::ParseState"** %14, align 8
  %18 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %8, align 8
  %19 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %18, i32 0, i32 0
  %20 = load %class.String*, %class.String** %9, align 8
  call void @_ZN6StringC2ERKS_(%class.String* %19, %class.String* dereferenceable(24) %20)
  %21 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %18, i32 0, i32 1
  %22 = load i32, i32* %10, align 4
  store i32 %22, i32* %21, align 8
  %23 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %18, i32 0, i32 2
  store i32 -1, i32* %23, align 4
  %24 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %18, i32 0, i32 3
  %25 = load i8, i8* %11, align 1
  %26 = trunc i8 %25 to i1
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %24, align 8
  %28 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %18, i32 0, i32 4
  invoke void @_ZN6StringC2Ev(%class.String* %28)
          to label %29 unwind label %52

; <label>:29:                                     ; preds = %7
  %30 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %18, i32 0, i32 5
  %31 = load %class.String*, %class.String** %12, align 8
  invoke void @_ZN6StringC2ERKS_(%class.String* %30, %class.String* dereferenceable(24) %31)
          to label %32 unwind label %56

; <label>:32:                                     ; preds = %29
  %33 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %18, i32 0, i32 6
  %34 = load i32, i32* %13, align 4
  store i32 %34, i32* %33, align 8
  %35 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %18, i32 0, i32 7
  store %"struct.Lexer::ElementState"* null, %"struct.Lexer::ElementState"** %35, align 8
  %36 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %14, align 8
  %37 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %36, i32 0, i32 6
  %38 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %37, align 8
  %39 = icmp ne %"struct.Lexer::ElementState"* %38, null
  br i1 %39, label %40, label %45

; <label>:40:                                     ; preds = %32
  %41 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %14, align 8
  %42 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %41, i32 0, i32 6
  %43 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %42, align 8
  %44 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %43, i32 0, i32 7
  br label %48

; <label>:45:                                     ; preds = %32
  %46 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %14, align 8
  %47 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %46, i32 0, i32 5
  br label %48

; <label>:48:                                     ; preds = %45, %40
  %49 = phi %"struct.Lexer::ElementState"** [ %44, %40 ], [ %47, %45 ]
  store %"struct.Lexer::ElementState"* %18, %"struct.Lexer::ElementState"** %49, align 8
  %50 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %14, align 8
  %51 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %50, i32 0, i32 6
  store %"struct.Lexer::ElementState"* %18, %"struct.Lexer::ElementState"** %51, align 8
  ret void

; <label>:52:                                     ; preds = %7
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  store i8* %54, i8** %15, align 8
  %55 = extractvalue { i8*, i32 } %53, 1
  store i32 %55, i32* %16, align 4
  br label %60

; <label>:56:                                     ; preds = %29
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %15, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %16, align 4
  call void @_ZN6StringD2Ev(%class.String* %28) #9
  br label %60

; <label>:60:                                     ; preds = %56, %52
  call void @_ZN6StringD2Ev(%class.String* %19) #9
  br label %61

; <label>:61:                                     ; preds = %60
  %62 = load i8*, i8** %15, align 8
  %63 = load i32, i32* %16, align 4
  %64 = insertvalue { i8*, i32 } undef, i8* %62, 0
  %65 = insertvalue { i8*, i32 } %64, i32 %63, 1
  resume { i8*, i32 } %65
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer15yelement_configEPNS_12ElementStateEb(%class.Lexer*, %"struct.Lexer::ElementState"*, i1 zeroext) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.Lexer*, align 8
  %5 = alloca %"struct.Lexer::ElementState"*, align 8
  %6 = alloca i8, align 1
  %7 = alloca %class.Lexeme, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = alloca %class.String, align 8
  %11 = alloca %class.Lexeme, align 8
  store %class.Lexer* %0, %class.Lexer** %4, align 8
  store %"struct.Lexer::ElementState"* %1, %"struct.Lexer::ElementState"** %5, align 8
  %12 = zext i1 %2 to i8
  store i8 %12, i8* %6, align 1
  %13 = load %class.Lexer*, %class.Lexer** %4, align 8
  call void @_ZN5Lexer3lexEv(%class.Lexeme* sret %7, %class.Lexer* %13)
  %14 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %7, i32 40)
          to label %15 unwind label %32

; <label>:15:                                     ; preds = %3
  br i1 %14, label %16, label %57

; <label>:16:                                     ; preds = %15
  %17 = load i8, i8* %6, align 1
  %18 = trunc i8 %17 to i1
  br i1 %18, label %57, label %19

; <label>:19:                                     ; preds = %16
  %20 = getelementptr inbounds %class.Lexer, %class.Lexer* %13, i32 0, i32 12
  %21 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %20, align 8
  %22 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %21, i32 0, i32 10
  %23 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %5, align 8
  %24 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %23, i32 0, i32 0
  %25 = invoke dereferenceable(4) i32* @_ZN9HashTableI6StringiEixERKS0_(%class.HashTable* %22, %class.String* dereferenceable(24) %24)
          to label %26 unwind label %32

; <label>:26:                                     ; preds = %19
  %27 = load i32, i32* %25, align 4
  %28 = icmp sge i32 %27, 0
  br i1 %28, label %29, label %36

; <label>:29:                                     ; preds = %26
  %30 = invoke i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %13, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.63, i32 0, i32 0))
          to label %31 unwind label %32

; <label>:31:                                     ; preds = %29
  br label %36

; <label>:32:                                     ; preds = %75, %69, %67, %64, %58, %57, %43, %41, %36, %29, %19, %3
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  store i8* %34, i8** %8, align 8
  %35 = extractvalue { i8*, i32 } %33, 1
  store i32 %35, i32* %9, align 4
  br label %89

; <label>:36:                                     ; preds = %31, %26
  invoke void @_ZN5Lexer10lex_configEv(%class.String* sret %10, %class.Lexer* %13)
          to label %37 unwind label %32

; <label>:37:                                     ; preds = %36
  %38 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %5, align 8
  %39 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %38, i32 0, i32 4
  %40 = invoke dereferenceable(24) %class.String* @_ZN6StringaSEOS_(%class.String* %39, %class.String* dereferenceable(24) %10)
          to label %41 unwind label %49

; <label>:41:                                     ; preds = %37
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  %42 = invoke zeroext i1 @_ZN5Lexer6expectEib(%class.Lexer* %13, i32 41, i1 zeroext false)
          to label %43 unwind label %32

; <label>:43:                                     ; preds = %41
  %44 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %5, align 8
  %45 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %44, i32 0, i32 3
  store i8 0, i8* %45, align 8
  invoke void @_ZN5Lexer3lexEv(%class.Lexeme* sret %11, %class.Lexer* %13)
          to label %46 unwind label %32

; <label>:46:                                     ; preds = %43
  %47 = invoke dereferenceable(32) %class.Lexeme* @_ZN6LexemeaSEOS_(%class.Lexeme* %7, %class.Lexeme* dereferenceable(32) %11)
          to label %48 unwind label %53

; <label>:48:                                     ; preds = %46
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %11) #9
  br label %57

; <label>:49:                                     ; preds = %37
  %50 = landingpad { i8*, i32 }
          cleanup
  %51 = extractvalue { i8*, i32 } %50, 0
  store i8* %51, i8** %8, align 8
  %52 = extractvalue { i8*, i32 } %50, 1
  store i32 %52, i32* %9, align 4
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  br label %89

; <label>:53:                                     ; preds = %46
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %8, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %9, align 4
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %11) #9
  br label %89

; <label>:57:                                     ; preds = %48, %16, %15
  invoke void @_ZN5Lexer5unlexERK6Lexeme(%class.Lexer* %13, %class.Lexeme* dereferenceable(32) %7)
          to label %58 unwind label %32

; <label>:58:                                     ; preds = %57
  %59 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %7, i32 91)
          to label %60 unwind label %32

; <label>:60:                                     ; preds = %58
  br i1 %59, label %61, label %69

; <label>:61:                                     ; preds = %60
  %62 = load i8, i8* %6, align 1
  %63 = trunc i8 %62 to i1
  br i1 %63, label %69, label %64

; <label>:64:                                     ; preds = %61
  %65 = getelementptr inbounds %class.Lexer, %class.Lexer* %13, i32 0, i32 13
  %66 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %65, align 8
  invoke void @_ZN5Lexer10ParseState11clear_portsEb(%"struct.Lexer::ParseState"* %66, i1 zeroext true)
          to label %67 unwind label %32

; <label>:67:                                     ; preds = %64
  invoke void @_ZN5Lexer5yportEb(%class.Lexer* %13, i1 zeroext true)
          to label %68 unwind label %32

; <label>:68:                                     ; preds = %67
  br label %69

; <label>:69:                                     ; preds = %68, %61, %60
  %70 = getelementptr inbounds %class.Lexer, %class.Lexer* %13, i32 0, i32 13
  %71 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %70, align 8
  %72 = invoke i32 @_ZNK5Lexer10ParseState6nportsEb(%"struct.Lexer::ParseState"* %71, i1 zeroext false)
          to label %73 unwind label %32

; <label>:73:                                     ; preds = %69
  %74 = icmp ne i32 %72, 0
  br i1 %74, label %81, label %75

; <label>:75:                                     ; preds = %73
  %76 = getelementptr inbounds %class.Lexer, %class.Lexer* %13, i32 0, i32 13
  %77 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %76, align 8
  %78 = invoke i32 @_ZNK5Lexer10ParseState6nportsEb(%"struct.Lexer::ParseState"* %77, i1 zeroext true)
          to label %79 unwind label %32

; <label>:79:                                     ; preds = %75
  %80 = icmp ne i32 %78, 0
  br i1 %80, label %81, label %85

; <label>:81:                                     ; preds = %79, %73
  %82 = getelementptr inbounds %class.Lexer, %class.Lexer* %13, i32 0, i32 13
  %83 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %82, align 8
  %84 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %83, i32 0, i32 8
  store i8 1, i8* %84, align 1
  br label %85

; <label>:85:                                     ; preds = %81, %79
  %86 = getelementptr inbounds %class.Lexer, %class.Lexer* %13, i32 0, i32 13
  %87 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %86, align 8
  %88 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %87, i32 0, i32 0
  store i32 3, i32* %88, align 8
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %7) #9
  ret void

; <label>:89:                                     ; preds = %53, %49, %32
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %7) #9
  br label %90

; <label>:90:                                     ; preds = %89
  %91 = load i8*, i8** %8, align 8
  %92 = load i32, i32* %9, align 4
  %93 = insertvalue { i8*, i32 } undef, i8* %91, 0
  %94 = insertvalue { i8*, i32 } %93, i32 %92, 1
  resume { i8*, i32 } %94
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN5Lexer10lex_configEv(%class.String* noalias sret, %class.Lexer*) #2 comdat align 2 {
  %3 = alloca %class.Lexer*, align 8
  store %class.Lexer* %1, %class.Lexer** %3, align 8
  %4 = load %class.Lexer*, %class.Lexer** %3, align 8
  %5 = getelementptr inbounds %class.Lexer, %class.Lexer* %4, i32 0, i32 5
  %6 = load i32, i32* %5, align 8
  %7 = icmp ne i32 %6, 0
  %8 = xor i1 %7, true
  br i1 %8, label %9, label %10

; <label>:9:                                      ; preds = %2
  br label %12

; <label>:10:                                     ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.132, i32 0, i32 0), i32 77, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__PRETTY_FUNCTION__._ZN5Lexer10lex_configEv, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %12

; <label>:12:                                     ; preds = %11, %9
  %13 = getelementptr inbounds %class.Lexer, %class.Lexer* %4, i32 0, i32 1
  call void @_ZN5Lexer9FileState10lex_configEPS_(%class.String* sret %0, %"struct.Lexer::FileState"* %13, %class.Lexer* %4)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN5Lexer10ParseState11clear_portsEb(%"struct.Lexer::ParseState"*, i1 zeroext) #2 comdat align 2 {
  %3 = alloca %"struct.Lexer::ParseState"*, align 8
  %4 = alloca i8, align 1
  store %"struct.Lexer::ParseState"* %0, %"struct.Lexer::ParseState"** %3, align 8
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  %6 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %3, align 8
  %7 = load i8, i8* %4, align 1
  %8 = trunc i8 %7 to i1
  br i1 %8, label %17, label %9

; <label>:9:                                      ; preds = %2
  %10 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %6, i32 0, i32 11
  %11 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %6, i32 0, i32 12
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, 2
  %14 = call dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %10, i32 %13)
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br label %17

; <label>:17:                                     ; preds = %9, %2
  %18 = phi i1 [ true, %2 ], [ %16, %9 ]
  br i1 %18, label %19, label %20

; <label>:19:                                     ; preds = %17
  br label %22

; <label>:20:                                     ; preds = %17
  call void @__assert_fail(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i32 509, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__PRETTY_FUNCTION__._ZN5Lexer10ParseState11clear_portsEb, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %22

; <label>:22:                                     ; preds = %21, %19
  %23 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %6, i32 0, i32 11
  %24 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %6, i32 0, i32 11
  %25 = call i32 @_ZNK6VectorIiE4sizeEv(%class.Vector.5* %24)
  %26 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %6, i32 0, i32 11
  %27 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %6, i32 0, i32 12
  %28 = load i32, i32* %27, align 8
  %29 = add nsw i32 %28, 1
  %30 = load i8, i8* %4, align 1
  %31 = trunc i8 %30 to i1
  %32 = zext i1 %31 to i32
  %33 = add nsw i32 %29, %32
  %34 = call dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %26, i32 %33)
  %35 = load i32, i32* %34, align 4
  %36 = sub nsw i32 %25, %35
  call void @_ZN6VectorIiE6resizeEii(%class.Vector.5* %23, i32 %36, i32 0)
  %37 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %6, i32 0, i32 11
  %38 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %6, i32 0, i32 12
  %39 = load i32, i32* %38, align 8
  %40 = add nsw i32 %39, 1
  %41 = load i8, i8* %4, align 1
  %42 = trunc i8 %41 to i1
  %43 = zext i1 %42 to i32
  %44 = add nsw i32 %40, %43
  %45 = call dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %37, i32 %44)
  store i32 0, i32* %45, align 4
  ret void
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer13yelement_nextEv(%class.Lexer*) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Lexer*, align 8
  %3 = alloca %class.Lexeme, align 8
  %4 = alloca i8*
  %5 = alloca i32
  %6 = alloca i32
  %7 = alloca %"struct.Lexer::ElementState"*, align 8
  %8 = alloca %"struct.Lexer::ElementState"*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca %"struct.Lexer::ElementState"*, align 8
  %11 = alloca %class.String, align 8
  %12 = alloca %class.String, align 8
  %13 = alloca %class.String, align 8
  %14 = alloca %class.String, align 8
  %15 = alloca %class.String, align 8
  %16 = alloca %class.String, align 8
  %17 = alloca %class.String, align 8
  store %class.Lexer* %0, %class.Lexer** %2, align 8
  %18 = load %class.Lexer*, %class.Lexer** %2, align 8
  %19 = getelementptr inbounds %class.Lexer, %class.Lexer* %18, i32 0, i32 13
  %20 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %19, align 8
  %21 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %20, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %class.Lexer, %class.Lexer* %18, i32 0, i32 13
  %24 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %23, align 8
  %25 = icmp eq i32 %22, 3
  br i1 %25, label %26, label %27

; <label>:26:                                     ; preds = %1
  br label %29

; <label>:27:                                     ; preds = %1
  call void @__assert_fail(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i32 1428, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__PRETTY_FUNCTION__._ZN5Lexer13yelement_nextEv, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %29

; <label>:29:                                     ; preds = %28, %26
  call void @_ZN5Lexer3lexEv(%class.Lexeme* sret %3, %class.Lexer* %18)
  %30 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %3, i32 44)
          to label %31 unwind label %38

; <label>:31:                                     ; preds = %29
  br i1 %30, label %32, label %42

; <label>:32:                                     ; preds = %31
  %33 = getelementptr inbounds %class.Lexer, %class.Lexer* %18, i32 0, i32 13
  %34 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %33, align 8
  %35 = getelementptr inbounds %class.Lexer, %class.Lexer* %18, i32 0, i32 13
  %36 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %35, align 8
  %37 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %36, i32 0, i32 0
  store i32 2, i32* %37, align 8
  store i32 1, i32* %6, align 4
  br label %381

; <label>:38:                                     ; preds = %330, %320, %306, %269, %257, %235, %221, %192, %171, %153, %135, %79, %76, %71, %60, %57, %54, %49, %42, %29
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = extractvalue { i8*, i32 } %39, 0
  store i8* %40, i8** %4, align 8
  %41 = extractvalue { i8*, i32 } %39, 1
  store i32 %41, i32* %5, align 4
  br label %384

; <label>:42:                                     ; preds = %31
  invoke void @_ZN5Lexer5unlexERK6Lexeme(%class.Lexer* %18, %class.Lexeme* dereferenceable(32) %3)
          to label %43 unwind label %38

; <label>:43:                                     ; preds = %42
  %44 = getelementptr inbounds %class.Lexer, %class.Lexer* %18, i32 0, i32 13
  %45 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %44, align 8
  %46 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %45, i32 0, i32 7
  %47 = load i8, i8* %46, align 8
  %48 = trunc i8 %47 to i1
  br i1 %48, label %49, label %63

; <label>:49:                                     ; preds = %43
  %50 = getelementptr inbounds %class.Lexer, %class.Lexer* %18, i32 0, i32 13
  %51 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %50, align 8
  %52 = invoke zeroext i1 @_ZNK5Lexer10ParseState17first_element_setEv(%"struct.Lexer::ParseState"* %51)
          to label %53 unwind label %38

; <label>:53:                                     ; preds = %49
  br i1 %52, label %63, label %54

; <label>:54:                                     ; preds = %53
  %55 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %3, i32 258)
          to label %56 unwind label %38

; <label>:56:                                     ; preds = %54
  br i1 %55, label %60, label %57

; <label>:57:                                     ; preds = %56
  %58 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %3, i32 259)
          to label %59 unwind label %38

; <label>:59:                                     ; preds = %57
  br i1 %58, label %60, label %63

; <label>:60:                                     ; preds = %59, %56
  %61 = invoke i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %18, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.65, i32 0, i32 0))
          to label %62 unwind label %38

; <label>:62:                                     ; preds = %60
  br label %63

; <label>:63:                                     ; preds = %62, %59, %53, %43
  %64 = getelementptr inbounds %class.Lexer, %class.Lexer* %18, i32 0, i32 13
  %65 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %64, align 8
  %66 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %65, i32 0, i32 5
  %67 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %66, align 8
  %68 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %67, i32 0, i32 7
  %69 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %68, align 8
  %70 = icmp ne %"struct.Lexer::ElementState"* %69, null
  br i1 %70, label %71, label %153

; <label>:71:                                     ; preds = %63
  %72 = getelementptr inbounds %class.Lexer, %class.Lexer* %18, i32 0, i32 13
  %73 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %72, align 8
  %74 = invoke zeroext i1 @_ZNK5Lexer10ParseState17first_element_setEv(%"struct.Lexer::ParseState"* %73)
          to label %75 unwind label %38

; <label>:75:                                     ; preds = %71
  br i1 %74, label %76, label %153

; <label>:76:                                     ; preds = %75
  %77 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %3, i32 258)
          to label %78 unwind label %38

; <label>:78:                                     ; preds = %76
  br i1 %77, label %153, label %79

; <label>:79:                                     ; preds = %78
  %80 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %3, i32 259)
          to label %81 unwind label %38

; <label>:81:                                     ; preds = %79
  br i1 %80, label %153, label %82

; <label>:82:                                     ; preds = %81
  %83 = getelementptr inbounds %class.Lexer, %class.Lexer* %18, i32 0, i32 13
  %84 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %83, align 8
  %85 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %84, i32 0, i32 8
  %86 = load i8, i8* %85, align 1
  %87 = trunc i8 %86 to i1
  br i1 %87, label %153, label %88

; <label>:88:                                     ; preds = %82
  %89 = getelementptr inbounds %class.Lexer, %class.Lexer* %18, i32 0, i32 13
  %90 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %89, align 8
  %91 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %90, i32 0, i32 7
  %92 = load i8, i8* %91, align 8
  %93 = trunc i8 %92 to i1
  br i1 %93, label %153, label %94

; <label>:94:                                     ; preds = %88
  %95 = getelementptr inbounds %class.Lexer, %class.Lexer* %18, i32 0, i32 13
  %96 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %95, align 8
  %97 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %96, i32 0, i32 5
  %98 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %97, align 8
  store %"struct.Lexer::ElementState"* %98, %"struct.Lexer::ElementState"** %7, align 8
  br label %99

; <label>:99:                                     ; preds = %111, %94
  %100 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %7, align 8
  %101 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %100, i32 0, i32 7
  %102 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %101, align 8
  %103 = icmp ne %"struct.Lexer::ElementState"* %102, null
  br i1 %103, label %104, label %109

; <label>:104:                                    ; preds = %99
  %105 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %7, align 8
  %106 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %105, i32 0, i32 3
  %107 = load i8, i8* %106, align 8
  %108 = trunc i8 %107 to i1
  br label %109

; <label>:109:                                    ; preds = %104, %99
  %110 = phi i1 [ false, %99 ], [ %108, %104 ]
  br i1 %110, label %111, label %115

; <label>:111:                                    ; preds = %109
  %112 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %7, align 8
  %113 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %112, i32 0, i32 7
  %114 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %113, align 8
  store %"struct.Lexer::ElementState"* %114, %"struct.Lexer::ElementState"** %7, align 8
  br label %99

; <label>:115:                                    ; preds = %109
  %116 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %7, align 8
  %117 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %116, i32 0, i32 7
  %118 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %117, align 8
  %119 = icmp ne %"struct.Lexer::ElementState"* %118, null
  br i1 %119, label %152, label %120

; <label>:120:                                    ; preds = %115
  %121 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %7, align 8
  %122 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %121, i32 0, i32 2
  %123 = load i32, i32* %122, align 4
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %125, label %152

; <label>:125:                                    ; preds = %120
  %126 = getelementptr inbounds %class.Lexer, %class.Lexer* %18, i32 0, i32 13
  %127 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %126, align 8
  %128 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %127, i32 0, i32 5
  %129 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %128, align 8
  store %"struct.Lexer::ElementState"* %129, %"struct.Lexer::ElementState"** %8, align 8
  br label %130

; <label>:130:                                    ; preds = %147, %125
  %131 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %8, align 8
  %132 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %131, i32 0, i32 7
  %133 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %132, align 8
  %134 = icmp ne %"struct.Lexer::ElementState"* %133, null
  br i1 %134, label %135, label %151

; <label>:135:                                    ; preds = %130
  %136 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %7, align 8
  %137 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %136, i32 0, i32 2
  %138 = load i32, i32* %137, align 4
  %139 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %8, align 8
  %140 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %139, i32 0, i32 2
  store i32 %138, i32* %140, align 4
  %141 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %7, align 8
  %142 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %141, i32 0, i32 4
  %143 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %8, align 8
  %144 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %143, i32 0, i32 4
  %145 = invoke dereferenceable(24) %class.String* @_ZN6StringaSERKS_(%class.String* %144, %class.String* dereferenceable(24) %142)
          to label %146 unwind label %38

; <label>:146:                                    ; preds = %135
  br label %147

; <label>:147:                                    ; preds = %146
  %148 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %8, align 8
  %149 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %148, i32 0, i32 7
  %150 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %149, align 8
  store %"struct.Lexer::ElementState"* %150, %"struct.Lexer::ElementState"** %8, align 8
  br label %130

; <label>:151:                                    ; preds = %130
  br label %152

; <label>:152:                                    ; preds = %151, %120, %115
  br label %153

; <label>:153:                                    ; preds = %152, %88, %82, %81, %78, %75, %63
  %154 = getelementptr inbounds %class.Lexer, %class.Lexer* %18, i32 0, i32 13
  %155 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %154, align 8
  %156 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %155, i32 0, i32 11
  %157 = invoke i32* @_ZN6VectorIiE5beginEv(%class.Vector.5* %156)
          to label %158 unwind label %38

; <label>:158:                                    ; preds = %153
  store i32* %157, i32** %9, align 8
  br label %159

; <label>:159:                                    ; preds = %376, %158
  %160 = getelementptr inbounds %class.Lexer, %class.Lexer* %18, i32 0, i32 13
  %161 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %160, align 8
  %162 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %161, i32 0, i32 5
  %163 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %162, align 8
  store %"struct.Lexer::ElementState"* %163, %"struct.Lexer::ElementState"** %10, align 8
  %164 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %165 = icmp ne %"struct.Lexer::ElementState"* %164, null
  br i1 %165, label %166, label %377

; <label>:166:                                    ; preds = %159
  %167 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %168 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %167, i32 0, i32 1
  %169 = load i32, i32* %168, align 8
  %170 = icmp sge i32 %169, 0
  br i1 %170, label %182, label %171

; <label>:171:                                    ; preds = %166
  %172 = getelementptr inbounds %class.Lexer, %class.Lexer* %18, i32 0, i32 12
  %173 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %172, align 8
  %174 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %173, i32 0, i32 10
  %175 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %176 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %175, i32 0, i32 0
  %177 = invoke dereferenceable(4) i32* @_ZN9HashTableI6StringiEixERKS0_(%class.HashTable* %174, %class.String* dereferenceable(24) %176)
          to label %178 unwind label %38

; <label>:178:                                    ; preds = %171
  %179 = load i32, i32* %177, align 4
  %180 = load i32*, i32** %9, align 8
  store i32 %179, i32* %180, align 4
  %181 = icmp slt i32 %179, 0
  br i1 %181, label %182, label %301

; <label>:182:                                    ; preds = %178, %166
  %183 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %184 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %183, i32 0, i32 2
  %185 = load i32, i32* %184, align 4
  %186 = icmp sge i32 %185, 0
  br i1 %186, label %187, label %211

; <label>:187:                                    ; preds = %182
  %188 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %189 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %188, i32 0, i32 1
  %190 = load i32, i32* %189, align 8
  %191 = icmp sge i32 %190, 0
  br i1 %191, label %192, label %211

; <label>:192:                                    ; preds = %187
  %193 = getelementptr inbounds %class.Lexer, %class.Lexer* %18, i32 0, i32 19
  %194 = load %class.ErrorHandler*, %class.ErrorHandler** %193, align 8
  %195 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %196 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %195, i32 0, i32 5
  %197 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %198 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %197, i32 0, i32 6
  %199 = load i32, i32* %198, align 8
  invoke void @_ZN5Lexer8Compound15landmark_stringERK6Stringj(%class.String* sret %11, %class.String* dereferenceable(24) %196, i32 %199)
          to label %200 unwind label %38

; <label>:200:                                    ; preds = %192
  %201 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %202 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %201, i32 0, i32 0
  %203 = invoke i8* @_ZNK6String5c_strEv(%class.String* %202)
          to label %204 unwind label %207

; <label>:204:                                    ; preds = %200
  %205 = invoke i32 (%class.ErrorHandler*, %class.String*, i8*, ...) @_ZN12ErrorHandler6lerrorERK6StringPKcz(%class.ErrorHandler* %194, %class.String* dereferenceable(24) %11, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.66, i32 0, i32 0), i8* %203)
          to label %206 unwind label %207

; <label>:206:                                    ; preds = %204
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  br label %252

; <label>:207:                                    ; preds = %204, %200
  %208 = landingpad { i8*, i32 }
          cleanup
  %209 = extractvalue { i8*, i32 } %208, 0
  store i8* %209, i8** %4, align 8
  %210 = extractvalue { i8*, i32 } %208, 1
  store i32 %210, i32* %5, align 4
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  br label %384

; <label>:211:                                    ; preds = %187, %182
  %212 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %213 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %212, i32 0, i32 2
  %214 = load i32, i32* %213, align 4
  %215 = icmp slt i32 %214, 0
  br i1 %215, label %216, label %251

; <label>:216:                                    ; preds = %211
  %217 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %218 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %217, i32 0, i32 1
  %219 = load i32, i32* %218, align 8
  %220 = icmp slt i32 %219, 0
  br i1 %220, label %221, label %251

; <label>:221:                                    ; preds = %216
  %222 = getelementptr inbounds %class.Lexer, %class.Lexer* %18, i32 0, i32 19
  %223 = load %class.ErrorHandler*, %class.ErrorHandler** %222, align 8
  %224 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %225 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %224, i32 0, i32 5
  %226 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %227 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %226, i32 0, i32 6
  %228 = load i32, i32* %227, align 8
  invoke void @_ZN5Lexer8Compound15landmark_stringERK6Stringj(%class.String* sret %12, %class.String* dereferenceable(24) %225, i32 %228)
          to label %229 unwind label %38

; <label>:229:                                    ; preds = %221
  %230 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %231 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %230, i32 0, i32 0
  %232 = invoke i8* @_ZNK6String5c_strEv(%class.String* %231)
          to label %233 unwind label %243

; <label>:233:                                    ; preds = %229
  %234 = invoke i32 (%class.ErrorHandler*, %class.String*, i8*, ...) @_ZN12ErrorHandler6lerrorERK6StringPKcz(%class.ErrorHandler* %223, %class.String* dereferenceable(24) %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.67, i32 0, i32 0), i8* %232)
          to label %235 unwind label %243

; <label>:235:                                    ; preds = %233
  call void @_ZN6StringD2Ev(%class.String* %12) #9
  %236 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %237 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %236, i32 0, i32 0
  invoke void @_ZN6StringC2ERKS_(%class.String* %13, %class.String* dereferenceable(24) %237)
          to label %238 unwind label %38

; <label>:238:                                    ; preds = %235
  %239 = invoke i32 @_ZN5Lexer18force_element_typeE6Stringb(%class.Lexer* %18, %class.String* %13, i1 zeroext false)
          to label %240 unwind label %247

; <label>:240:                                    ; preds = %238
  %241 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %242 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %241, i32 0, i32 1
  store i32 %239, i32* %242, align 8
  call void @_ZN6StringD2Ev(%class.String* %13) #9
  br label %251

; <label>:243:                                    ; preds = %233, %229
  %244 = landingpad { i8*, i32 }
          cleanup
  %245 = extractvalue { i8*, i32 } %244, 0
  store i8* %245, i8** %4, align 8
  %246 = extractvalue { i8*, i32 } %244, 1
  store i32 %246, i32* %5, align 4
  call void @_ZN6StringD2Ev(%class.String* %12) #9
  br label %384

; <label>:247:                                    ; preds = %238
  %248 = landingpad { i8*, i32 }
          cleanup
  %249 = extractvalue { i8*, i32 } %248, 0
  store i8* %249, i8** %4, align 8
  %250 = extractvalue { i8*, i32 } %248, 1
  store i32 %250, i32* %5, align 4
  call void @_ZN6StringD2Ev(%class.String* %13) #9
  br label %384

; <label>:251:                                    ; preds = %240, %216, %211
  br label %252

; <label>:252:                                    ; preds = %251, %206
  %253 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %254 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %253, i32 0, i32 1
  %255 = load i32, i32* %254, align 8
  %256 = icmp sge i32 %255, 0
  br i1 %256, label %257, label %269

; <label>:257:                                    ; preds = %252
  %258 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %259 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %258, i32 0, i32 0
  invoke void @_ZNK5Lexer17anon_element_nameERK6String(%class.String* sret %14, %class.Lexer* %18, %class.String* dereferenceable(24) %259)
          to label %260 unwind label %38

; <label>:260:                                    ; preds = %257
  %261 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %262 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %261, i32 0, i32 0
  %263 = invoke dereferenceable(24) %class.String* @_ZN6StringaSEOS_(%class.String* %262, %class.String* dereferenceable(24) %14)
          to label %264 unwind label %265

; <label>:264:                                    ; preds = %260
  call void @_ZN6StringD2Ev(%class.String* %14) #9
  br label %269

; <label>:265:                                    ; preds = %260
  %266 = landingpad { i8*, i32 }
          cleanup
  %267 = extractvalue { i8*, i32 } %266, 0
  store i8* %267, i8** %4, align 8
  %268 = extractvalue { i8*, i32 } %266, 1
  store i32 %268, i32* %5, align 4
  call void @_ZN6StringD2Ev(%class.String* %14) #9
  br label %384

; <label>:269:                                    ; preds = %264, %252
  %270 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %271 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %270, i32 0, i32 0
  invoke void @_ZN6StringC2ERKS_(%class.String* %15, %class.String* dereferenceable(24) %271)
          to label %272 unwind label %38

; <label>:272:                                    ; preds = %269
  %273 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %274 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %273, i32 0, i32 1
  %275 = load i32, i32* %274, align 8
  %276 = icmp sge i32 %275, 0
  br i1 %276, label %277, label %281

; <label>:277:                                    ; preds = %272
  %278 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %279 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %278, i32 0, i32 1
  %280 = load i32, i32* %279, align 8
  br label %285

; <label>:281:                                    ; preds = %272
  %282 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %283 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %282, i32 0, i32 2
  %284 = load i32, i32* %283, align 4
  br label %285

; <label>:285:                                    ; preds = %281, %277
  %286 = phi i32 [ %280, %277 ], [ %284, %281 ]
  %287 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %288 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %287, i32 0, i32 4
  %289 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %290 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %289, i32 0, i32 5
  %291 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %292 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %291, i32 0, i32 6
  %293 = load i32, i32* %292, align 8
  %294 = invoke i32 @_ZN5Lexer11get_elementE6StringiRKS0_S2_j(%class.Lexer* %18, %class.String* %15, i32 %286, %class.String* dereferenceable(24) %288, %class.String* dereferenceable(24) %290, i32 %293)
          to label %295 unwind label %297

; <label>:295:                                    ; preds = %285
  %296 = load i32*, i32** %9, align 8
  store i32 %294, i32* %296, align 4
  call void @_ZN6StringD2Ev(%class.String* %15) #9
  br label %354

; <label>:297:                                    ; preds = %285
  %298 = landingpad { i8*, i32 }
          cleanup
  %299 = extractvalue { i8*, i32 } %298, 0
  store i8* %299, i8** %4, align 8
  %300 = extractvalue { i8*, i32 } %298, 1
  store i32 %300, i32* %5, align 4
  call void @_ZN6StringD2Ev(%class.String* %15) #9
  br label %384

; <label>:301:                                    ; preds = %178
  %302 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %303 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %302, i32 0, i32 2
  %304 = load i32, i32* %303, align 4
  %305 = icmp sge i32 %304, 0
  br i1 %305, label %306, label %353

; <label>:306:                                    ; preds = %301
  %307 = getelementptr inbounds %class.Lexer, %class.Lexer* %18, i32 0, i32 19
  %308 = load %class.ErrorHandler*, %class.ErrorHandler** %307, align 8
  %309 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %310 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %309, i32 0, i32 5
  %311 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %312 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %311, i32 0, i32 6
  %313 = load i32, i32* %312, align 8
  invoke void @_ZN5Lexer8Compound15landmark_stringERK6Stringj(%class.String* sret %16, %class.String* dereferenceable(24) %310, i32 %313)
          to label %314 unwind label %38

; <label>:314:                                    ; preds = %306
  %315 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %316 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %315, i32 0, i32 0
  %317 = invoke i8* @_ZNK6String5c_strEv(%class.String* %316)
          to label %318 unwind label %344

; <label>:318:                                    ; preds = %314
  %319 = invoke i32 (%class.ErrorHandler*, %class.String*, i8*, ...) @_ZN12ErrorHandler6lerrorERK6StringPKcz(%class.ErrorHandler* %308, %class.String* dereferenceable(24) %16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.68, i32 0, i32 0), i8* %317)
          to label %320 unwind label %344

; <label>:320:                                    ; preds = %318
  call void @_ZN6StringD2Ev(%class.String* %16) #9
  %321 = getelementptr inbounds %class.Lexer, %class.Lexer* %18, i32 0, i32 12
  %322 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %321, align 8
  %323 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %322, i32 0, i32 11
  %324 = load i32*, i32** %9, align 8
  %325 = load i32, i32* %324, align 4
  %326 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %323, i32 %325)
          to label %327 unwind label %38

; <label>:327:                                    ; preds = %320
  %328 = load i32, i32* %326, align 4
  %329 = icmp ne i32 %328, 0
  br i1 %329, label %330, label %352

; <label>:330:                                    ; preds = %327
  %331 = getelementptr inbounds %class.Lexer, %class.Lexer* %18, i32 0, i32 19
  %332 = load %class.ErrorHandler*, %class.ErrorHandler** %331, align 8
  %333 = getelementptr inbounds %class.Lexer, %class.Lexer* %18, i32 0, i32 12
  %334 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %333, align 8
  %335 = load i32*, i32** %9, align 8
  %336 = load i32, i32* %335, align 4
  invoke void @_ZNK5Lexer8Compound16element_landmarkEi(%class.String* sret %17, %"class.Lexer::Compound"* %334, i32 %336)
          to label %337 unwind label %38

; <label>:337:                                    ; preds = %330
  %338 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %339 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %338, i32 0, i32 0
  %340 = invoke i8* @_ZNK6String5c_strEv(%class.String* %339)
          to label %341 unwind label %348

; <label>:341:                                    ; preds = %337
  %342 = invoke i32 (%class.ErrorHandler*, %class.String*, i8*, ...) @_ZN12ErrorHandler6lerrorERK6StringPKcz(%class.ErrorHandler* %332, %class.String* dereferenceable(24) %17, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.69, i32 0, i32 0), i8* %340)
          to label %343 unwind label %348

; <label>:343:                                    ; preds = %341
  call void @_ZN6StringD2Ev(%class.String* %17) #9
  br label %352

; <label>:344:                                    ; preds = %318, %314
  %345 = landingpad { i8*, i32 }
          cleanup
  %346 = extractvalue { i8*, i32 } %345, 0
  store i8* %346, i8** %4, align 8
  %347 = extractvalue { i8*, i32 } %345, 1
  store i32 %347, i32* %5, align 4
  call void @_ZN6StringD2Ev(%class.String* %16) #9
  br label %384

; <label>:348:                                    ; preds = %341, %337
  %349 = landingpad { i8*, i32 }
          cleanup
  %350 = extractvalue { i8*, i32 } %349, 0
  store i8* %350, i8** %4, align 8
  %351 = extractvalue { i8*, i32 } %349, 1
  store i32 %351, i32* %5, align 4
  call void @_ZN6StringD2Ev(%class.String* %17) #9
  br label %384

; <label>:352:                                    ; preds = %343, %327
  br label %353

; <label>:353:                                    ; preds = %352, %301
  br label %354

; <label>:354:                                    ; preds = %353, %295
  %355 = load i32*, i32** %9, align 8
  %356 = getelementptr inbounds i32, i32* %355, i64 1
  %357 = load i32, i32* %356, align 4
  %358 = add nsw i32 3, %357
  %359 = load i32*, i32** %9, align 8
  %360 = getelementptr inbounds i32, i32* %359, i64 2
  %361 = load i32, i32* %360, align 4
  %362 = add nsw i32 %358, %361
  %363 = load i32*, i32** %9, align 8
  %364 = sext i32 %362 to i64
  %365 = getelementptr inbounds i32, i32* %363, i64 %364
  store i32* %365, i32** %9, align 8
  %366 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %367 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %366, i32 0, i32 7
  %368 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %367, align 8
  %369 = getelementptr inbounds %class.Lexer, %class.Lexer* %18, i32 0, i32 13
  %370 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %369, align 8
  %371 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %370, i32 0, i32 5
  store %"struct.Lexer::ElementState"* %368, %"struct.Lexer::ElementState"** %371, align 8
  %372 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %10, align 8
  %373 = icmp eq %"struct.Lexer::ElementState"* %372, null
  br i1 %373, label %376, label %374

; <label>:374:                                    ; preds = %354
  call void @_ZN5Lexer12ElementStateD2Ev(%"struct.Lexer::ElementState"* %372) #9
  %375 = bitcast %"struct.Lexer::ElementState"* %372 to i8*
  call void @_ZdlPv(i8* %375) #14
  br label %376

; <label>:376:                                    ; preds = %374, %354
  br label %159

; <label>:377:                                    ; preds = %159
  %378 = getelementptr inbounds %class.Lexer, %class.Lexer* %18, i32 0, i32 13
  %379 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %378, align 8
  %380 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %379, i32 0, i32 0
  store i32 4, i32* %380, align 8
  store i32 0, i32* %6, align 4
  br label %381

; <label>:381:                                    ; preds = %377, %32
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %3) #9
  %382 = load i32, i32* %6, align 4
  switch i32 %382, label %390 [
    i32 0, label %383
    i32 1, label %383
  ]

; <label>:383:                                    ; preds = %381, %381
  ret void

; <label>:384:                                    ; preds = %348, %344, %297, %265, %247, %243, %207, %38
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %3) #9
  br label %385

; <label>:385:                                    ; preds = %384
  %386 = load i8*, i8** %4, align 8
  %387 = load i32, i32* %5, align 4
  %388 = insertvalue { i8*, i32 } undef, i8* %386, 0
  %389 = insertvalue { i8*, i32 } %388, i32 %387, 1
  resume { i8*, i32 } %389

; <label>:390:                                    ; preds = %381
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr i32* @_ZN6VectorIiE5beginEv(%class.Vector.5*) #0 comdat align 2 {
  %2 = alloca %class.Vector.5*, align 8
  store %class.Vector.5* %0, %class.Vector.5** %2, align 8
  %3 = load %class.Vector.5*, %class.Vector.5** %2, align 8
  %4 = getelementptr inbounds %class.Vector.5, %class.Vector.5* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %4, i32 0, i32 0
  %6 = load %struct.char_array.4*, %struct.char_array.4** %5, align 8
  %7 = bitcast %struct.char_array.4* %6 to i32*
  ret i32* %7
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN5Lexer12ElementStateD2Ev(%"struct.Lexer::ElementState"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.Lexer::ElementState"*, align 8
  store %"struct.Lexer::ElementState"* %0, %"struct.Lexer::ElementState"** %2, align 8
  %3 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %2, align 8
  %4 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %3, i32 0, i32 5
  call void @_ZN6StringD2Ev(%class.String* %4) #9
  %5 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %3, i32 0, i32 4
  call void @_ZN6StringD2Ev(%class.String* %5) #9
  %6 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %3, i32 0, i32 0
  call void @_ZN6StringD2Ev(%class.String* %6) #9
  ret void
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer25yconnection_check_uselessERK6VectorIiEb(%class.Lexer*, %class.Vector.5* dereferenceable(16), i1 zeroext) #2 align 2 {
  %4 = alloca %class.Lexer*, align 8
  %5 = alloca %class.Vector.5*, align 8
  %6 = alloca i8, align 1
  %7 = alloca i32*, align 8
  store %class.Lexer* %0, %class.Lexer** %4, align 8
  store %class.Vector.5* %1, %class.Vector.5** %5, align 8
  %8 = zext i1 %2 to i8
  store i8 %8, i8* %6, align 1
  %9 = load %class.Lexer*, %class.Lexer** %4, align 8
  %10 = load %class.Vector.5*, %class.Vector.5** %5, align 8
  %11 = call i32* @_ZNK6VectorIiE5beginEv(%class.Vector.5* %10)
  store i32* %11, i32** %7, align 8
  br label %12

; <label>:12:                                     ; preds = %34, %3
  %13 = load i32*, i32** %7, align 8
  %14 = load %class.Vector.5*, %class.Vector.5** %5, align 8
  %15 = call i32* @_ZNK6VectorIiE3endEv(%class.Vector.5* %14)
  %16 = icmp ne i32* %13, %15
  br i1 %16, label %17, label %46

; <label>:17:                                     ; preds = %12
  %18 = load i32*, i32** %7, align 8
  %19 = load i8, i8* %6, align 1
  %20 = trunc i8 %19 to i1
  %21 = zext i1 %20 to i64
  %22 = select i1 %20, i32 2, i32 1
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i32, i32* %18, i64 %23
  %25 = load i32, i32* %24, align 4
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %33

; <label>:27:                                     ; preds = %17
  %28 = load i8, i8* %6, align 1
  %29 = trunc i8 %28 to i1
  %30 = zext i1 %29 to i64
  %31 = select i1 %29, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.71, i32 0, i32 0)
  %32 = call i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %9, i8* %31)
  br label %46

; <label>:33:                                     ; preds = %17
  br label %34

; <label>:34:                                     ; preds = %33
  %35 = load i32*, i32** %7, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 1
  %37 = load i32, i32* %36, align 4
  %38 = add nsw i32 3, %37
  %39 = load i32*, i32** %7, align 8
  %40 = getelementptr inbounds i32, i32* %39, i64 2
  %41 = load i32, i32* %40, align 4
  %42 = add nsw i32 %38, %41
  %43 = load i32*, i32** %7, align 8
  %44 = sext i32 %42 to i64
  %45 = getelementptr inbounds i32, i32* %43, i64 %44
  store i32* %45, i32** %7, align 8
  br label %12

; <label>:46:                                     ; preds = %27, %12
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr i32* @_ZNK6VectorIiE5beginEv(%class.Vector.5*) #0 comdat align 2 {
  %2 = alloca %class.Vector.5*, align 8
  store %class.Vector.5* %0, %class.Vector.5** %2, align 8
  %3 = load %class.Vector.5*, %class.Vector.5** %2, align 8
  %4 = getelementptr inbounds %class.Vector.5, %class.Vector.5* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %4, i32 0, i32 0
  %6 = load %struct.char_array.4*, %struct.char_array.4** %5, align 8
  %7 = bitcast %struct.char_array.4* %6 to i32*
  ret i32* %7
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr i32* @_ZNK6VectorIiE3endEv(%class.Vector.5*) #0 comdat align 2 {
  %2 = alloca %class.Vector.5*, align 8
  store %class.Vector.5* %0, %class.Vector.5** %2, align 8
  %3 = load %class.Vector.5*, %class.Vector.5** %2, align 8
  %4 = getelementptr inbounds %class.Vector.5, %class.Vector.5* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %4, i32 0, i32 0
  %6 = load %struct.char_array.4*, %struct.char_array.4** %5, align 8
  %7 = bitcast %struct.char_array.4* %6 to i32*
  %8 = getelementptr inbounds %class.Vector.5, %class.Vector.5* %3, i32 0, i32 0
  %9 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i32, i32* %7, i64 %11
  ret i32* %12
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer25yconnection_analyze_portsERK6VectorIiEbRiS4_(%class.Vector.5* dereferenceable(16), i1 zeroext, i32* dereferenceable(4), i32* dereferenceable(4)) #2 align 2 {
  %5 = alloca %class.Vector.5*, align 8
  %6 = alloca i8, align 1
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  store %class.Vector.5* %0, %class.Vector.5** %5, align 8
  %11 = zext i1 %1 to i8
  store i8 %11, i8* %6, align 1
  store i32* %2, i32** %7, align 8
  store i32* %3, i32** %8, align 8
  %12 = load i32*, i32** %8, align 8
  store i32 0, i32* %12, align 4
  %13 = load i32*, i32** %7, align 8
  store i32 0, i32* %13, align 4
  %14 = load %class.Vector.5*, %class.Vector.5** %5, align 8
  %15 = call i32* @_ZNK6VectorIiE5beginEv(%class.Vector.5* %14)
  store i32* %15, i32** %9, align 8
  br label %16

; <label>:16:                                     ; preds = %71, %4
  %17 = load i32*, i32** %9, align 8
  %18 = load %class.Vector.5*, %class.Vector.5** %5, align 8
  %19 = call i32* @_ZNK6VectorIiE3endEv(%class.Vector.5* %18)
  %20 = icmp ne i32* %17, %19
  br i1 %20, label %21, label %83

; <label>:21:                                     ; preds = %16
  %22 = load i32*, i32** %9, align 8
  %23 = load i8, i8* %6, align 1
  %24 = trunc i8 %23 to i1
  %25 = zext i1 %24 to i64
  %26 = select i1 %24, i32 2, i32 1
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i32, i32* %22, i64 %27
  %29 = load i32, i32* %28, align 4
  store i32 %29, i32* %10, align 4
  %30 = load i32, i32* %10, align 4
  %31 = icmp sle i32 %30, 1
  br i1 %31, label %32, label %36

; <label>:32:                                     ; preds = %21
  %33 = load i32*, i32** %7, align 8
  %34 = load i32, i32* %33, align 4
  %35 = add nsw i32 %34, 1
  store i32 %35, i32* %33, align 4
  br label %70

; <label>:36:                                     ; preds = %21
  %37 = load i32*, i32** %9, align 8
  %38 = load i8, i8* %6, align 1
  %39 = trunc i8 %38 to i1
  br i1 %39, label %40, label %44

; <label>:40:                                     ; preds = %36
  %41 = load i32*, i32** %9, align 8
  %42 = getelementptr inbounds i32, i32* %41, i64 1
  %43 = load i32, i32* %42, align 4
  br label %45

; <label>:44:                                     ; preds = %36
  br label %45

; <label>:45:                                     ; preds = %44, %40
  %46 = phi i32 [ %43, %40 ], [ 0, %44 ]
  %47 = add nsw i32 3, %46
  %48 = load i32, i32* %10, align 4
  %49 = add nsw i32 %47, %48
  %50 = sub nsw i32 %49, 1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, i32* %37, i64 %51
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, -1
  br i1 %54, label %55, label %64

; <label>:55:                                     ; preds = %45
  %56 = load i32, i32* %10, align 4
  %57 = sub nsw i32 %56, 1
  %58 = load i32*, i32** %7, align 8
  %59 = load i32, i32* %58, align 4
  %60 = add nsw i32 %59, %57
  store i32 %60, i32* %58, align 4
  %61 = load i32*, i32** %8, align 8
  %62 = load i32, i32* %61, align 4
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %61, align 4
  br label %69

; <label>:64:                                     ; preds = %45
  %65 = load i32, i32* %10, align 4
  %66 = load i32*, i32** %7, align 8
  %67 = load i32, i32* %66, align 4
  %68 = add nsw i32 %67, %65
  store i32 %68, i32* %66, align 4
  br label %69

; <label>:69:                                     ; preds = %64, %55
  br label %70

; <label>:70:                                     ; preds = %69, %32
  br label %71

; <label>:71:                                     ; preds = %70
  %72 = load i32*, i32** %9, align 8
  %73 = getelementptr inbounds i32, i32* %72, i64 1
  %74 = load i32, i32* %73, align 4
  %75 = add nsw i32 3, %74
  %76 = load i32*, i32** %9, align 8
  %77 = getelementptr inbounds i32, i32* %76, i64 2
  %78 = load i32, i32* %77, align 4
  %79 = add nsw i32 %75, %78
  %80 = load i32*, i32** %9, align 8
  %81 = sext i32 %79 to i64
  %82 = getelementptr inbounds i32, i32* %80, i64 %81
  store i32* %82, i32** %9, align 8
  br label %16

; <label>:83:                                     ; preds = %16
  ret void
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer23yconnection_connect_allER6VectorIiES2_i(%class.Lexer*, %class.Vector.5* dereferenceable(16), %class.Vector.5* dereferenceable(16), i32) #2 align 2 {
  %5 = alloca %class.Lexer*, align 8
  %6 = alloca %class.Vector.5*, align 8
  %7 = alloca %class.Vector.5*, align 8
  %8 = alloca i32, align 4
  %9 = alloca [2 x i32], align 4
  %10 = alloca [2 x i32], align 4
  %11 = alloca i32, align 4
  %12 = alloca %class.Vector.5*, align 8
  %13 = alloca [2 x i8], align 1
  %14 = alloca [2 x i32], align 4
  %15 = alloca i32, align 4
  %16 = alloca [2 x i32*], align 16
  %17 = alloca [2 x i32], align 4
  %18 = alloca [2 x i32], align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32*, align 8
  store %class.Lexer* %0, %class.Lexer** %5, align 8
  store %class.Vector.5* %1, %class.Vector.5** %6, align 8
  store %class.Vector.5* %2, %class.Vector.5** %7, align 8
  store i32 %3, i32* %8, align 4
  %24 = load %class.Lexer*, %class.Lexer** %5, align 8
  %25 = load %class.Vector.5*, %class.Vector.5** %6, align 8
  %26 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 1
  %27 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i64 0, i64 1
  call void @_ZN5Lexer25yconnection_analyze_portsERK6VectorIiEbRiS4_(%class.Vector.5* dereferenceable(16) %25, i1 zeroext true, i32* dereferenceable(4) %26, i32* dereferenceable(4) %27)
  %28 = load %class.Vector.5*, %class.Vector.5** %7, align 8
  %29 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0
  %30 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i64 0, i64 0
  call void @_ZN5Lexer25yconnection_analyze_portsERK6VectorIiEbRiS4_(%class.Vector.5* dereferenceable(16) %28, i1 zeroext false, i32* dereferenceable(4) %29, i32* dereferenceable(4) %30)
  %31 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i64 0, i64 0
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i64 0, i64 1
  %34 = load i32, i32* %33, align 4
  %35 = add nsw i32 %32, %34
  %36 = icmp sgt i32 %35, 1
  br i1 %36, label %37, label %46

; <label>:37:                                     ; preds = %4
  %38 = call i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %24, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.72, i32 0, i32 0))
  %39 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp slt i32 %40, %42
  %44 = zext i1 %43 to i64
  %45 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i64 0, i64 %44
  store i32 0, i32* %45, align 4
  br label %46

; <label>:46:                                     ; preds = %37, %4
  %47 = load i32, i32* %8, align 4
  %48 = icmp eq i32 %47, 259
  br i1 %48, label %49, label %90

; <label>:49:                                     ; preds = %46
  store i32 0, i32* %11, align 4
  br label %50

; <label>:50:                                     ; preds = %86, %49
  %51 = load i32, i32* %11, align 4
  %52 = icmp slt i32 %51, 2
  br i1 %52, label %53, label %89

; <label>:53:                                     ; preds = %50
  %54 = load i32, i32* %11, align 4
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %58

; <label>:56:                                     ; preds = %53
  %57 = load %class.Vector.5*, %class.Vector.5** %6, align 8
  br label %60

; <label>:58:                                     ; preds = %53
  %59 = load %class.Vector.5*, %class.Vector.5** %7, align 8
  br label %60

; <label>:60:                                     ; preds = %58, %56
  %61 = phi %class.Vector.5* [ %57, %56 ], [ %59, %58 ]
  store %class.Vector.5* %61, %class.Vector.5** %12, align 8
  %62 = load i32, i32* %11, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 %63
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %85

; <label>:67:                                     ; preds = %60
  %68 = load i32, i32* %11, align 4
  %69 = sub nsw i32 1, %68
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = icmp sgt i32 %72, 1
  br i1 %73, label %74, label %85

; <label>:74:                                     ; preds = %67
  %75 = load %class.Vector.5*, %class.Vector.5** %12, align 8
  %76 = load i32, i32* %11, align 4
  %77 = add nsw i32 1, %76
  %78 = call dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %75, i32 %77)
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %85

; <label>:81:                                     ; preds = %74
  %82 = load i32, i32* %11, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i64 0, i64 %83
  store i32 1, i32* %84, align 4
  br label %85

; <label>:85:                                     ; preds = %81, %74, %67, %60
  br label %86

; <label>:86:                                     ; preds = %85
  %87 = load i32, i32* %11, align 4
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* %11, align 4
  br label %50

; <label>:89:                                     ; preds = %50
  br label %90

; <label>:90:                                     ; preds = %89, %46
  store i32 0, i32* %15, align 4
  br label %91

; <label>:91:                                     ; preds = %134, %90
  %92 = load i32, i32* %15, align 4
  %93 = icmp slt i32 %92, 2
  br i1 %93, label %94, label %137

; <label>:94:                                     ; preds = %91
  %95 = load i32, i32* %15, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 %96
  %98 = load i32, i32* %97, align 4
  %99 = icmp sgt i32 %98, 1
  br i1 %99, label %106, label %100

; <label>:100:                                    ; preds = %94
  %101 = load i32, i32* %15, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i64 0, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = icmp ne i32 %104, 0
  br label %106

; <label>:106:                                    ; preds = %100, %94
  %107 = phi i1 [ true, %94 ], [ %105, %100 ]
  %108 = load i32, i32* %15, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds [2 x i8], [2 x i8]* %13, i64 0, i64 %109
  %111 = zext i1 %107 to i8
  store i8 %111, i8* %110, align 1
  %112 = load i32, i32* %15, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i64 0, i64 %113
  %115 = load i32, i32* %114, align 4
  %116 = icmp ne i32 %115, 0
  br i1 %116, label %117, label %128

; <label>:117:                                    ; preds = %106
  %118 = load i32, i32* %15, align 4
  %119 = sub nsw i32 1, %118
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = load i32, i32* %15, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 %124
  %126 = load i32, i32* %125, align 4
  %127 = sub nsw i32 %122, %126
  br label %129

; <label>:128:                                    ; preds = %106
  br label %129

; <label>:129:                                    ; preds = %128, %117
  %130 = phi i32 [ %127, %117 ], [ 0, %128 ]
  %131 = load i32, i32* %15, align 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds [2 x i32], [2 x i32]* %14, i64 0, i64 %132
  store i32 %130, i32* %133, align 4
  br label %134

; <label>:134:                                    ; preds = %129
  %135 = load i32, i32* %15, align 4
  %136 = add nsw i32 %135, 1
  store i32 %136, i32* %15, align 4
  br label %91

; <label>:137:                                    ; preds = %91
  %138 = getelementptr inbounds [2 x i8], [2 x i8]* %13, i64 0, i64 0
  %139 = load i8, i8* %138, align 1
  %140 = trunc i8 %139 to i1
  br i1 %140, label %141, label %205

; <label>:141:                                    ; preds = %137
  %142 = getelementptr inbounds [2 x i8], [2 x i8]* %13, i64 0, i64 1
  %143 = load i8, i8* %142, align 1
  %144 = trunc i8 %143 to i1
  br i1 %144, label %145, label %205

; <label>:145:                                    ; preds = %141
  %146 = load i32, i32* %8, align 4
  %147 = icmp ne i32 %146, 259
  br i1 %147, label %148, label %150

; <label>:148:                                    ; preds = %145
  %149 = call i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %24, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.73, i32 0, i32 0))
  br label %150

; <label>:150:                                    ; preds = %148, %145
  %151 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i64 0, i64 0
  %152 = load i32, i32* %151, align 4
  %153 = icmp ne i32 %152, 0
  br i1 %153, label %170, label %154

; <label>:154:                                    ; preds = %150
  %155 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i64 0, i64 1
  %156 = load i32, i32* %155, align 4
  %157 = icmp ne i32 %156, 0
  br i1 %157, label %170, label %158

; <label>:158:                                    ; preds = %154
  %159 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 1
  %162 = load i32, i32* %161, align 4
  %163 = icmp ne i32 %160, %162
  br i1 %163, label %164, label %170

; <label>:164:                                    ; preds = %158
  %165 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 1
  %166 = load i32, i32* %165, align 4
  %167 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0
  %168 = load i32, i32* %167, align 4
  %169 = call i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %24, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.74, i32 0, i32 0), i32 %166, i32 %168)
  br label %204

; <label>:170:                                    ; preds = %158, %154, %150
  %171 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i64 0, i64 0
  %172 = load i32, i32* %171, align 4
  %173 = icmp ne i32 %172, 0
  br i1 %173, label %186, label %174

; <label>:174:                                    ; preds = %170
  %175 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0
  %176 = load i32, i32* %175, align 4
  %177 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 1
  %178 = load i32, i32* %177, align 4
  %179 = icmp slt i32 %176, %178
  br i1 %179, label %180, label %186

; <label>:180:                                    ; preds = %174
  %181 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 1
  %182 = load i32, i32* %181, align 4
  %183 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0
  %184 = load i32, i32* %183, align 4
  %185 = call i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %24, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.75, i32 0, i32 0), i32 %182, i32 %184)
  br label %203

; <label>:186:                                    ; preds = %174, %170
  %187 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i64 0, i64 1
  %188 = load i32, i32* %187, align 4
  %189 = icmp ne i32 %188, 0
  br i1 %189, label %202, label %190

; <label>:190:                                    ; preds = %186
  %191 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 1
  %192 = load i32, i32* %191, align 4
  %193 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0
  %194 = load i32, i32* %193, align 4
  %195 = icmp slt i32 %192, %194
  br i1 %195, label %196, label %202

; <label>:196:                                    ; preds = %190
  %197 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 1
  %198 = load i32, i32* %197, align 4
  %199 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0
  %200 = load i32, i32* %199, align 4
  %201 = call i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %24, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.76, i32 0, i32 0), i32 %198, i32 %200)
  br label %202

; <label>:202:                                    ; preds = %196, %190, %186
  br label %203

; <label>:203:                                    ; preds = %202, %180
  br label %204

; <label>:204:                                    ; preds = %203, %164
  br label %216

; <label>:205:                                    ; preds = %141, %137
  %206 = getelementptr inbounds [2 x i8], [2 x i8]* %13, i64 0, i64 0
  %207 = load i8, i8* %206, align 1
  %208 = trunc i8 %207 to i1
  br i1 %208, label %215, label %209

; <label>:209:                                    ; preds = %205
  %210 = getelementptr inbounds [2 x i8], [2 x i8]* %13, i64 0, i64 1
  %211 = load i8, i8* %210, align 1
  %212 = trunc i8 %211 to i1
  br i1 %212, label %215, label %213

; <label>:213:                                    ; preds = %209
  %214 = getelementptr inbounds [2 x i8], [2 x i8]* %13, i64 0, i64 0
  store i8 1, i8* %214, align 1
  br label %215

; <label>:215:                                    ; preds = %213, %209, %205
  br label %216

; <label>:216:                                    ; preds = %215, %204
  %217 = getelementptr inbounds [2 x i32*], [2 x i32*]* %16, i64 0, i64 0
  %218 = load %class.Vector.5*, %class.Vector.5** %7, align 8
  %219 = call i32* @_ZN6VectorIiE5beginEv(%class.Vector.5* %218)
  store i32* %219, i32** %217, align 8
  %220 = getelementptr inbounds i32*, i32** %217, i64 1
  %221 = load %class.Vector.5*, %class.Vector.5** %6, align 8
  %222 = call i32* @_ZN6VectorIiE5beginEv(%class.Vector.5* %221)
  store i32* %222, i32** %220, align 8
  %223 = bitcast [2 x i32]* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* %223, i8 0, i64 8, i32 4, i1 false)
  %224 = bitcast [2 x i32]* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %224, i8* bitcast ([2 x i32]* @_ZZN5Lexer23yconnection_connect_allER6VectorIiES2_iE4port to i8*), i64 8, i32 4, i1 false)
  br label %225

; <label>:225:                                    ; preds = %480, %216
  %226 = getelementptr inbounds [2 x i32*], [2 x i32*]* %16, i64 0, i64 0
  %227 = load i32*, i32** %226, align 16
  %228 = load %class.Vector.5*, %class.Vector.5** %7, align 8
  %229 = call i32* @_ZN6VectorIiE3endEv(%class.Vector.5* %228)
  %230 = icmp ne i32* %227, %229
  br i1 %230, label %231, label %237

; <label>:231:                                    ; preds = %225
  %232 = getelementptr inbounds [2 x i32*], [2 x i32*]* %16, i64 0, i64 1
  %233 = load i32*, i32** %232, align 8
  %234 = load %class.Vector.5*, %class.Vector.5** %6, align 8
  %235 = call i32* @_ZN6VectorIiE3endEv(%class.Vector.5* %234)
  %236 = icmp ne i32* %233, %235
  br label %237

; <label>:237:                                    ; preds = %231, %225
  %238 = phi i1 [ false, %225 ], [ %236, %231 ]
  br i1 %238, label %239, label %481

; <label>:239:                                    ; preds = %237
  store i32 0, i32* %19, align 4
  br label %240

; <label>:240:                                    ; preds = %289, %239
  %241 = load i32, i32* %19, align 4
  %242 = icmp slt i32 %241, 2
  br i1 %242, label %243, label %292

; <label>:243:                                    ; preds = %240
  %244 = load i32, i32* %19, align 4
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds [2 x i32], [2 x i32]* %18, i64 0, i64 %245
  %247 = load i32, i32* %246, align 4
  %248 = icmp slt i32 %247, 0
  br i1 %248, label %249, label %288

; <label>:249:                                    ; preds = %243
  %250 = load i32, i32* %19, align 4
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds [2 x i32*], [2 x i32*]* %16, i64 0, i64 %251
  %253 = load i32*, i32** %252, align 8
  %254 = load i32, i32* %19, align 4
  %255 = add nsw i32 1, %254
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds i32, i32* %253, i64 %256
  %258 = load i32, i32* %257, align 4
  store i32 %258, i32* %20, align 4
  %259 = load i32, i32* %20, align 4
  %260 = icmp ne i32 %259, 0
  br i1 %260, label %261, label %282

; <label>:261:                                    ; preds = %249
  %262 = load i32, i32* %19, align 4
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds [2 x i32*], [2 x i32*]* %16, i64 0, i64 %263
  %265 = load i32*, i32** %264, align 8
  %266 = load i32, i32* %19, align 4
  %267 = icmp ne i32 %266, 0
  br i1 %267, label %268, label %275

; <label>:268:                                    ; preds = %261
  %269 = load i32, i32* %19, align 4
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds [2 x i32*], [2 x i32*]* %16, i64 0, i64 %270
  %272 = load i32*, i32** %271, align 8
  %273 = getelementptr inbounds i32, i32* %272, i64 1
  %274 = load i32, i32* %273, align 4
  br label %276

; <label>:275:                                    ; preds = %261
  br label %276

; <label>:276:                                    ; preds = %275, %268
  %277 = phi i32 [ %274, %268 ], [ 0, %275 ]
  %278 = add nsw i32 3, %277
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds i32, i32* %265, i64 %279
  %281 = load i32, i32* %280, align 4
  br label %283

; <label>:282:                                    ; preds = %249
  br label %283

; <label>:283:                                    ; preds = %282, %276
  %284 = phi i32 [ %281, %276 ], [ 0, %282 ]
  %285 = load i32, i32* %19, align 4
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds [2 x i32], [2 x i32]* %18, i64 0, i64 %286
  store i32 %284, i32* %287, align 4
  br label %288

; <label>:288:                                    ; preds = %283, %243
  br label %289

; <label>:289:                                    ; preds = %288
  %290 = load i32, i32* %19, align 4
  %291 = add nsw i32 %290, 1
  store i32 %291, i32* %19, align 4
  br label %240

; <label>:292:                                    ; preds = %240
  %293 = getelementptr inbounds %class.Lexer, %class.Lexer* %24, i32 0, i32 12
  %294 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %293, align 8
  %295 = getelementptr inbounds [2 x i32*], [2 x i32*]* %16, i64 0, i64 1
  %296 = load i32*, i32** %295, align 8
  %297 = getelementptr inbounds i32, i32* %296, i64 0
  %298 = load i32, i32* %297, align 4
  %299 = getelementptr inbounds [2 x i32], [2 x i32]* %18, i64 0, i64 1
  %300 = load i32, i32* %299, align 4
  %301 = getelementptr inbounds [2 x i32*], [2 x i32*]* %16, i64 0, i64 0
  %302 = load i32*, i32** %301, align 16
  %303 = getelementptr inbounds i32, i32* %302, i64 0
  %304 = load i32, i32* %303, align 4
  %305 = getelementptr inbounds [2 x i32], [2 x i32]* %18, i64 0, i64 0
  %306 = load i32, i32* %305, align 4
  call void @_ZN5Lexer8Compound7connectEiiii(%"class.Lexer::Compound"* %294, i32 %298, i32 %300, i32 %304, i32 %306)
  store i32 0, i32* %21, align 4
  br label %307

; <label>:307:                                    ; preds = %477, %292
  %308 = load i32, i32* %21, align 4
  %309 = icmp slt i32 %308, 2
  br i1 %309, label %310, label %480

; <label>:310:                                    ; preds = %307
  %311 = load i32, i32* %21, align 4
  %312 = sext i32 %311 to i64
  %313 = getelementptr inbounds [2 x i8], [2 x i8]* %13, i64 0, i64 %312
  %314 = load i8, i8* %313, align 1
  %315 = trunc i8 %314 to i1
  br i1 %315, label %316, label %476

; <label>:316:                                    ; preds = %310
  %317 = load i32, i32* %21, align 4
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds [2 x i32*], [2 x i32*]* %16, i64 0, i64 %318
  %320 = load i32*, i32** %319, align 8
  %321 = load i32, i32* %21, align 4
  %322 = add nsw i32 1, %321
  %323 = sext i32 %322 to i64
  %324 = getelementptr inbounds i32, i32* %320, i64 %323
  %325 = load i32, i32* %324, align 4
  store i32 %325, i32* %22, align 4
  %326 = load i32, i32* %21, align 4
  %327 = sext i32 %326 to i64
  %328 = getelementptr inbounds [2 x i32*], [2 x i32*]* %16, i64 0, i64 %327
  %329 = load i32*, i32** %328, align 8
  %330 = getelementptr inbounds i32, i32* %329, i64 3
  %331 = load i32, i32* %21, align 4
  %332 = icmp ne i32 %331, 0
  br i1 %332, label %333, label %340

; <label>:333:                                    ; preds = %316
  %334 = load i32, i32* %21, align 4
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds [2 x i32*], [2 x i32*]* %16, i64 0, i64 %335
  %337 = load i32*, i32** %336, align 8
  %338 = getelementptr inbounds i32, i32* %337, i64 1
  %339 = load i32, i32* %338, align 4
  br label %341

; <label>:340:                                    ; preds = %316
  br label %341

; <label>:341:                                    ; preds = %340, %333
  %342 = phi i32 [ %339, %333 ], [ 0, %340 ]
  %343 = sext i32 %342 to i64
  %344 = getelementptr inbounds i32, i32* %330, i64 %343
  store i32* %344, i32** %23, align 8
  %345 = load i32, i32* %21, align 4
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds [2 x i32], [2 x i32]* %17, i64 0, i64 %346
  %348 = load i32, i32* %347, align 4
  %349 = add nsw i32 %348, 1
  store i32 %349, i32* %347, align 4
  %350 = load i32, i32* %21, align 4
  %351 = sext i32 %350 to i64
  %352 = getelementptr inbounds [2 x i32], [2 x i32]* %17, i64 0, i64 %351
  %353 = load i32, i32* %352, align 4
  %354 = load i32, i32* %22, align 4
  %355 = icmp slt i32 %353, %354
  br i1 %355, label %356, label %378

; <label>:356:                                    ; preds = %341
  %357 = load i32*, i32** %23, align 8
  %358 = load i32, i32* %21, align 4
  %359 = sext i32 %358 to i64
  %360 = getelementptr inbounds [2 x i32], [2 x i32]* %17, i64 0, i64 %359
  %361 = load i32, i32* %360, align 4
  %362 = sext i32 %361 to i64
  %363 = getelementptr inbounds i32, i32* %357, i64 %362
  %364 = load i32, i32* %363, align 4
  %365 = icmp sge i32 %364, 0
  br i1 %365, label %366, label %378

; <label>:366:                                    ; preds = %356
  %367 = load i32*, i32** %23, align 8
  %368 = load i32, i32* %21, align 4
  %369 = sext i32 %368 to i64
  %370 = getelementptr inbounds [2 x i32], [2 x i32]* %17, i64 0, i64 %369
  %371 = load i32, i32* %370, align 4
  %372 = sext i32 %371 to i64
  %373 = getelementptr inbounds i32, i32* %367, i64 %372
  %374 = load i32, i32* %373, align 4
  %375 = load i32, i32* %21, align 4
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds [2 x i32], [2 x i32]* %18, i64 0, i64 %376
  store i32 %374, i32* %377, align 4
  br label %475

; <label>:378:                                    ; preds = %356, %341
  %379 = load i32, i32* %22, align 4
  %380 = icmp ne i32 %379, 0
  br i1 %380, label %381, label %418

; <label>:381:                                    ; preds = %378
  %382 = load i32*, i32** %23, align 8
  %383 = load i32, i32* %22, align 4
  %384 = sub nsw i32 %383, 1
  %385 = sext i32 %384 to i64
  %386 = getelementptr inbounds i32, i32* %382, i64 %385
  %387 = load i32, i32* %386, align 4
  %388 = icmp eq i32 %387, -1
  br i1 %388, label %389, label %418

; <label>:389:                                    ; preds = %381
  %390 = load i32, i32* %21, align 4
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds [2 x i32], [2 x i32]* %14, i64 0, i64 %391
  %393 = load i32, i32* %392, align 4
  %394 = icmp sgt i32 %393, 0
  br i1 %394, label %395, label %418

; <label>:395:                                    ; preds = %389
  %396 = load i32*, i32** %23, align 8
  %397 = load i32, i32* %22, align 4
  %398 = sub nsw i32 %397, 2
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds i32, i32* %396, i64 %399
  %401 = load i32, i32* %400, align 4
  %402 = load i32, i32* %21, align 4
  %403 = sext i32 %402 to i64
  %404 = getelementptr inbounds [2 x i32], [2 x i32]* %17, i64 0, i64 %403
  %405 = load i32, i32* %404, align 4
  %406 = add nsw i32 %401, %405
  %407 = load i32, i32* %22, align 4
  %408 = sub nsw i32 %407, 2
  %409 = sub nsw i32 %406, %408
  %410 = load i32, i32* %21, align 4
  %411 = sext i32 %410 to i64
  %412 = getelementptr inbounds [2 x i32], [2 x i32]* %18, i64 0, i64 %411
  store i32 %409, i32* %412, align 4
  %413 = load i32, i32* %21, align 4
  %414 = sext i32 %413 to i64
  %415 = getelementptr inbounds [2 x i32], [2 x i32]* %14, i64 0, i64 %414
  %416 = load i32, i32* %415, align 4
  %417 = add nsw i32 %416, -1
  store i32 %417, i32* %415, align 4
  br label %474

; <label>:418:                                    ; preds = %389, %381, %378
  %419 = load i32, i32* %22, align 4
  %420 = icmp eq i32 %419, 0
  br i1 %420, label %421, label %446

; <label>:421:                                    ; preds = %418
  %422 = load i32, i32* %21, align 4
  %423 = sext i32 %422 to i64
  %424 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 %423
  %425 = load i32, i32* %424, align 4
  %426 = icmp eq i32 %425, 1
  br i1 %426, label %427, label %446

; <label>:427:                                    ; preds = %421
  %428 = load i32, i32* %21, align 4
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds [2 x i32], [2 x i32]* %14, i64 0, i64 %429
  %431 = load i32, i32* %430, align 4
  %432 = icmp sgt i32 %431, 0
  br i1 %432, label %433, label %446

; <label>:433:                                    ; preds = %427
  %434 = load i32, i32* %21, align 4
  %435 = sext i32 %434 to i64
  %436 = getelementptr inbounds [2 x i32], [2 x i32]* %17, i64 0, i64 %435
  %437 = load i32, i32* %436, align 4
  %438 = load i32, i32* %21, align 4
  %439 = sext i32 %438 to i64
  %440 = getelementptr inbounds [2 x i32], [2 x i32]* %18, i64 0, i64 %439
  store i32 %437, i32* %440, align 4
  %441 = load i32, i32* %21, align 4
  %442 = sext i32 %441 to i64
  %443 = getelementptr inbounds [2 x i32], [2 x i32]* %14, i64 0, i64 %442
  %444 = load i32, i32* %443, align 4
  %445 = add nsw i32 %444, -1
  store i32 %445, i32* %443, align 4
  br label %473

; <label>:446:                                    ; preds = %427, %421, %418
  %447 = load i32, i32* %21, align 4
  %448 = sext i32 %447 to i64
  %449 = getelementptr inbounds [2 x i32], [2 x i32]* %18, i64 0, i64 %448
  store i32 -1, i32* %449, align 4
  %450 = load i32, i32* %21, align 4
  %451 = sext i32 %450 to i64
  %452 = getelementptr inbounds [2 x i32], [2 x i32]* %17, i64 0, i64 %451
  store i32 0, i32* %452, align 4
  %453 = load i32, i32* %21, align 4
  %454 = sext i32 %453 to i64
  %455 = getelementptr inbounds [2 x i32*], [2 x i32*]* %16, i64 0, i64 %454
  %456 = load i32*, i32** %455, align 8
  %457 = getelementptr inbounds i32, i32* %456, i64 1
  %458 = load i32, i32* %457, align 4
  %459 = add nsw i32 3, %458
  %460 = load i32, i32* %21, align 4
  %461 = sext i32 %460 to i64
  %462 = getelementptr inbounds [2 x i32*], [2 x i32*]* %16, i64 0, i64 %461
  %463 = load i32*, i32** %462, align 8
  %464 = getelementptr inbounds i32, i32* %463, i64 2
  %465 = load i32, i32* %464, align 4
  %466 = add nsw i32 %459, %465
  %467 = load i32, i32* %21, align 4
  %468 = sext i32 %467 to i64
  %469 = getelementptr inbounds [2 x i32*], [2 x i32*]* %16, i64 0, i64 %468
  %470 = load i32*, i32** %469, align 8
  %471 = sext i32 %466 to i64
  %472 = getelementptr inbounds i32, i32* %470, i64 %471
  store i32* %472, i32** %469, align 8
  br label %473

; <label>:473:                                    ; preds = %446, %433
  br label %474

; <label>:474:                                    ; preds = %473, %395
  br label %475

; <label>:475:                                    ; preds = %474, %366
  br label %476

; <label>:476:                                    ; preds = %475, %310
  br label %477

; <label>:477:                                    ; preds = %476
  %478 = load i32, i32* %21, align 4
  %479 = add nsw i32 %478, 1
  store i32 %479, i32* %21, align 4
  br label %307

; <label>:480:                                    ; preds = %307
  br label %225

; <label>:481:                                    ; preds = %237
  ret void
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer21yconnection_connectorEv(%class.Lexer*) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Lexer*, align 8
  %3 = alloca %class.Lexeme, align 8
  %4 = alloca %class.Lexeme, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %class.Lexer* %0, %class.Lexer** %2, align 8
  %7 = load %class.Lexer*, %class.Lexer** %2, align 8
  %8 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 13
  %9 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %8, align 8
  %10 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %9, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 13
  %13 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %12, align 8
  %14 = icmp eq i32 %11, 4
  br i1 %14, label %15, label %16

; <label>:15:                                     ; preds = %1
  br label %18

; <label>:16:                                     ; preds = %1
  call void @__assert_fail(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i32 1592, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__._ZN5Lexer21yconnection_connectorEv, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %18

; <label>:18:                                     ; preds = %17, %15
  %19 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 13
  %20 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %19, align 8
  %21 = call zeroext i1 @_ZNK5Lexer10ParseState17first_element_setEv(%"struct.Lexer::ParseState"* %20)
  br i1 %21, label %22, label %26

; <label>:22:                                     ; preds = %18
  %23 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 13
  %24 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %23, align 8
  %25 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %24, i32 0, i32 11
  call void @_ZN5Lexer25yconnection_check_uselessERK6VectorIiEb(%class.Lexer* %7, %class.Vector.5* dereferenceable(16) %25, i1 zeroext false)
  br label %37

; <label>:26:                                     ; preds = %18
  %27 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 13
  %28 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %27, align 8
  %29 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %28, i32 0, i32 2
  %30 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 13
  %31 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %30, align 8
  %32 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %31, i32 0, i32 11
  %33 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 13
  %34 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %33, align 8
  %35 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %34, i32 0, i32 3
  %36 = load i32, i32* %35, align 8
  call void @_ZN5Lexer23yconnection_connect_allER6VectorIiES2_i(%class.Lexer* %7, %class.Vector.5* dereferenceable(16) %29, %class.Vector.5* dereferenceable(16) %32, i32 %36)
  br label %37

; <label>:37:                                     ; preds = %26, %22
  %38 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 13
  %39 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %38, align 8
  %40 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %39, i32 0, i32 2
  %41 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 13
  %42 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %41, align 8
  %43 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %42, i32 0, i32 11
  call void @_ZN6VectorIiE4swapERS0_(%class.Vector.5* %40, %class.Vector.5* dereferenceable(16) %43)
  call void @_ZN6LexemeC2Ev(%class.Lexeme* %3)
  br label %44

; <label>:44:                                     ; preds = %60, %37
  invoke void @_ZN5Lexer3lexEv(%class.Lexeme* sret %4, %class.Lexer* %7)
          to label %45 unwind label %50

; <label>:45:                                     ; preds = %44
  %46 = invoke dereferenceable(32) %class.Lexeme* @_ZN6LexemeaSEOS_(%class.Lexeme* %3, %class.Lexeme* dereferenceable(32) %4)
          to label %47 unwind label %54

; <label>:47:                                     ; preds = %45
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %4) #9
  %48 = invoke i32 @_ZNK6Lexeme4kindEv(%class.Lexeme* %3)
          to label %49 unwind label %50

; <label>:49:                                     ; preds = %47
  switch i32 %48, label %76 [
    i32 44, label %58
    i32 260, label %58
    i32 258, label %61
    i32 259, label %61
    i32 256, label %70
    i32 123, label %70
    i32 125, label %70
    i32 91, label %70
    i32 41, label %70
    i32 261, label %70
    i32 263, label %70
    i32 264, label %70
    i32 265, label %70
    i32 266, label %70
    i32 59, label %72
    i32 0, label %72
  ]

; <label>:50:                                     ; preds = %82, %78, %76, %70, %61, %58, %47, %44
  %51 = landingpad { i8*, i32 }
          cleanup
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %5, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %6, align 4
  br label %89

; <label>:54:                                     ; preds = %45
  %55 = landingpad { i8*, i32 }
          cleanup
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %5, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %6, align 4
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %4) #9
  br label %89

; <label>:58:                                     ; preds = %49, %49
  %59 = invoke i32 @_ZN5Lexer13lerror_syntaxERK6Lexeme(%class.Lexer* %7, %class.Lexeme* dereferenceable(32) %3)
          to label %60 unwind label %50

; <label>:60:                                     ; preds = %58
  br label %44

; <label>:61:                                     ; preds = %49, %49
  %62 = invoke i32 @_ZNK6Lexeme4kindEv(%class.Lexeme* %3)
          to label %63 unwind label %50

; <label>:63:                                     ; preds = %61
  %64 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 13
  %65 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %64, align 8
  %66 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %65, i32 0, i32 3
  store i32 %62, i32* %66, align 8
  %67 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 13
  %68 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %67, align 8
  %69 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %68, i32 0, i32 0
  store i32 1, i32* %69, align 8
  br label %88

; <label>:70:                                     ; preds = %49, %49, %49, %49, %49, %49, %49, %49, %49, %49
  invoke void @_ZN5Lexer5unlexERK6Lexeme(%class.Lexer* %7, %class.Lexeme* dereferenceable(32) %3)
          to label %71 unwind label %50

; <label>:71:                                     ; preds = %70
  br label %72

; <label>:72:                                     ; preds = %49, %49, %71
  %73 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 13
  %74 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %73, align 8
  %75 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %74, i32 0, i32 0
  store i32 5, i32* %75, align 8
  br label %88

; <label>:76:                                     ; preds = %49
  %77 = invoke i32 @_ZN5Lexer13lerror_syntaxERK6Lexeme(%class.Lexer* %7, %class.Lexeme* dereferenceable(32) %3)
          to label %78 unwind label %50

; <label>:78:                                     ; preds = %76
  %79 = invoke i32 @_ZNK6Lexeme4kindEv(%class.Lexeme* %3)
          to label %80 unwind label %50

; <label>:80:                                     ; preds = %78
  %81 = icmp sge i32 %79, 256
  br i1 %81, label %82, label %84

; <label>:82:                                     ; preds = %80
  invoke void @_ZN5Lexer5unlexERK6Lexeme(%class.Lexer* %7, %class.Lexeme* dereferenceable(32) %3)
          to label %83 unwind label %50

; <label>:83:                                     ; preds = %82
  br label %84

; <label>:84:                                     ; preds = %83, %80
  %85 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 13
  %86 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %85, align 8
  %87 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %86, i32 0, i32 0
  store i32 5, i32* %87, align 8
  br label %88

; <label>:88:                                     ; preds = %84, %72, %63
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %3) #9
  ret void

; <label>:89:                                     ; preds = %54, %50
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %3) #9
  br label %90

; <label>:90:                                     ; preds = %89
  %91 = load i8*, i8** %5, align 8
  %92 = load i32, i32* %6, align 4
  %93 = insertvalue { i8*, i32 } undef, i8* %91, 0
  %94 = insertvalue { i8*, i32 } %93, i32 %92, 1
  resume { i8*, i32 } %94
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6VectorIiE4swapERS0_(%class.Vector.5*, %class.Vector.5* dereferenceable(16)) #2 comdat align 2 {
  %3 = alloca %class.Vector.5*, align 8
  %4 = alloca %class.Vector.5*, align 8
  store %class.Vector.5* %0, %class.Vector.5** %3, align 8
  store %class.Vector.5* %1, %class.Vector.5** %4, align 8
  %5 = load %class.Vector.5*, %class.Vector.5** %3, align 8
  %6 = getelementptr inbounds %class.Vector.5, %class.Vector.5* %5, i32 0, i32 0
  %7 = load %class.Vector.5*, %class.Vector.5** %4, align 8
  %8 = getelementptr inbounds %class.Vector.5, %class.Vector.5* %7, i32 0, i32 0
  call void @_ZN13vector_memoryI18sized_array_memoryILm4EEE4swapERS2_(%class.vector_memory.3* %6, %class.vector_memory.3* dereferenceable(16) %8)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr i32 @_ZNK6Lexeme4kindEv(%class.Lexeme*) #0 comdat align 2 {
  %2 = alloca %class.Lexeme*, align 8
  store %class.Lexeme* %0, %class.Lexeme** %2, align 8
  %3 = load %class.Lexeme*, %class.Lexeme** %2, align 8
  %4 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer13yelementclassEv(%class.Lexer*) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Lexer*, align 8
  %3 = alloca %class.Lexeme, align 8
  %4 = alloca %class.String, align 8
  %5 = alloca i8*
  %6 = alloca i32
  %7 = alloca %class.Lexeme, align 8
  %8 = alloca i32, align 4
  %9 = alloca %class.String, align 8
  store %class.Lexer* %0, %class.Lexer** %2, align 8
  %10 = load %class.Lexer*, %class.Lexer** %2, align 8
  call void @_ZN5Lexer3lexEv(%class.Lexeme* sret %3, %class.Lexer* %10)
  invoke void @_ZN6StringC2Ev(%class.String* %4)
          to label %11 unwind label %19

; <label>:11:                                     ; preds = %1
  %12 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %3, i32 256)
          to label %13 unwind label %23

; <label>:13:                                     ; preds = %11
  br i1 %12, label %14, label %27

; <label>:14:                                     ; preds = %13
  %15 = invoke dereferenceable(24) %class.String* @_ZN6Lexeme6stringEv(%class.Lexeme* %3)
          to label %16 unwind label %23

; <label>:16:                                     ; preds = %14
  %17 = invoke dereferenceable(24) %class.String* @_ZN6StringaSERKS_(%class.String* %4, %class.String* dereferenceable(24) %15)
          to label %18 unwind label %23

; <label>:18:                                     ; preds = %16
  br label %31

; <label>:19:                                     ; preds = %1
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  store i8* %21, i8** %5, align 8
  %22 = extractvalue { i8*, i32 } %20, 1
  store i32 %22, i32* %6, align 4
  br label %110

; <label>:23:                                     ; preds = %31, %28, %27, %16, %14, %11
  %24 = landingpad { i8*, i32 }
          cleanup
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %5, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %6, align 4
  br label %109

; <label>:27:                                     ; preds = %13
  invoke void @_ZN5Lexer5unlexERK6Lexeme(%class.Lexer* %10, %class.Lexeme* dereferenceable(32) %3)
          to label %28 unwind label %23

; <label>:28:                                     ; preds = %27
  %29 = invoke i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %10, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.78, i32 0, i32 0))
          to label %30 unwind label %23

; <label>:30:                                     ; preds = %28
  br label %31

; <label>:31:                                     ; preds = %30, %18
  invoke void @_ZN5Lexer3lexEv(%class.Lexeme* sret %7, %class.Lexer* %10)
          to label %32 unwind label %23

; <label>:32:                                     ; preds = %31
  %33 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %7, i32 123)
          to label %34 unwind label %45

; <label>:34:                                     ; preds = %32
  br i1 %33, label %35, label %49

; <label>:35:                                     ; preds = %34
  %36 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 13
  %37 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %36, align 8
  %38 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %37, i32 0, i32 14
  %39 = invoke dereferenceable(24) %class.String* @_ZN6StringaSERKS_(%class.String* %38, %class.String* dereferenceable(24) %4)
          to label %40 unwind label %45

; <label>:40:                                     ; preds = %35
  %41 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 13
  %42 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %41, align 8
  %43 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %42, i32 0, i32 0
  store i32 8, i32* %43, align 8
  invoke void @_ZN5Lexer9ycompoundEv(%class.Lexer* %10)
          to label %44 unwind label %45

; <label>:44:                                     ; preds = %40
  br label %107

; <label>:45:                                     ; preds = %103, %101, %96, %90, %86, %77, %73, %65, %57, %54, %52, %49, %40, %35, %32
  %46 = landingpad { i8*, i32 }
          cleanup
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %5, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %6, align 4
  br label %108

; <label>:49:                                     ; preds = %34
  %50 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %7, i32 256)
          to label %51 unwind label %45

; <label>:51:                                     ; preds = %49
  br i1 %50, label %52, label %101

; <label>:52:                                     ; preds = %51
  %53 = invoke dereferenceable(24) %class.String* @_ZN6Lexeme6stringEv(%class.Lexeme* %7)
          to label %54 unwind label %45

; <label>:54:                                     ; preds = %52
  invoke void @_ZN6StringC2ERKS_(%class.String* %9, %class.String* dereferenceable(24) %53)
          to label %55 unwind label %45

; <label>:55:                                     ; preds = %54
  %56 = invoke i32 @_ZN5Lexer18force_element_typeE6Stringb(%class.Lexer* %10, %class.String* %9, i1 zeroext true)
          to label %57 unwind label %82

; <label>:57:                                     ; preds = %55
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  store i32 %56, i32* %8, align 4
  %58 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 8
  %59 = load i32, i32* %8, align 4
  %60 = invoke dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %58, i32 %59)
          to label %61 unwind label %45

; <label>:61:                                     ; preds = %57
  %62 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %60, i32 0, i32 0
  %63 = load %class.Element* (i64)*, %class.Element* (i64)** %62, align 8
  %64 = icmp eq %class.Element* (i64)* %63, @_ZN5Lexer24compound_element_factoryEm
  br i1 %64, label %65, label %86

; <label>:65:                                     ; preds = %61
  %66 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 8
  %67 = load i32, i32* %8, align 4
  %68 = invoke dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %66, i32 %67)
          to label %69 unwind label %45

; <label>:69:                                     ; preds = %65
  %70 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %68, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = icmp ne i64 %71, 0
  br i1 %72, label %73, label %86

; <label>:73:                                     ; preds = %69
  %74 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 8
  %75 = load i32, i32* %8, align 4
  %76 = invoke dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %74, i32 %75)
          to label %77 unwind label %45

; <label>:77:                                     ; preds = %73
  %78 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %76, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = inttoptr i64 %79 to %"class.Lexer::Compound"*
  invoke void @_ZN5Lexer8Compound3useEv(%"class.Lexer::Compound"* %80)
          to label %81 unwind label %45

; <label>:81:                                     ; preds = %77
  br label %86

; <label>:82:                                     ; preds = %55
  %83 = landingpad { i8*, i32 }
          cleanup
  %84 = extractvalue { i8*, i32 } %83, 0
  store i8* %84, i8** %5, align 8
  %85 = extractvalue { i8*, i32 } %83, 1
  store i32 %85, i32* %6, align 4
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  br label %108

; <label>:86:                                     ; preds = %81, %69, %61
  %87 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 8
  %88 = load i32, i32* %8, align 4
  %89 = invoke dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %87, i32 %88)
          to label %90 unwind label %45

; <label>:90:                                     ; preds = %86
  %91 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %89, i32 0, i32 0
  %92 = load %class.Element* (i64)*, %class.Element* (i64)** %91, align 8
  %93 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 8
  %94 = load i32, i32* %8, align 4
  %95 = invoke dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %93, i32 %94)
          to label %96 unwind label %45

; <label>:96:                                     ; preds = %90
  %97 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %95, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = invoke i32 @_ZN5Lexer16add_element_typeERK6StringPFP7ElementmEmb(%class.Lexer* %10, %class.String* dereferenceable(24) %4, %class.Element* (i64)* %92, i64 %98, i1 zeroext true)
          to label %100 unwind label %45

; <label>:100:                                    ; preds = %96
  br label %106

; <label>:101:                                    ; preds = %51
  %102 = invoke i32 @_ZN5Lexer13lerror_syntaxERK6Lexeme(%class.Lexer* %10, %class.Lexeme* dereferenceable(32) %7)
          to label %103 unwind label %45

; <label>:103:                                    ; preds = %101
  %104 = invoke i32 @_ZN5Lexer16add_element_typeERK6StringPFP7ElementmEmb(%class.Lexer* %10, %class.String* dereferenceable(24) %4, %class.Element* (i64)* @_ZL21error_element_factorym, i64 0, i1 zeroext true)
          to label %105 unwind label %45

; <label>:105:                                    ; preds = %103
  br label %106

; <label>:106:                                    ; preds = %105, %100
  br label %107

; <label>:107:                                    ; preds = %106, %44
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %7) #9
  call void @_ZN6StringD2Ev(%class.String* %4) #9
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %3) #9
  ret void

; <label>:108:                                    ; preds = %82, %45
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %7) #9
  br label %109

; <label>:109:                                    ; preds = %108, %23
  call void @_ZN6StringD2Ev(%class.String* %4) #9
  br label %110

; <label>:110:                                    ; preds = %109, %19
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %3) #9
  br label %111

; <label>:111:                                    ; preds = %110
  %112 = load i8*, i8** %5, align 8
  %113 = load i32, i32* %6, align 4
  %114 = insertvalue { i8*, i32 } undef, i8* %112, 0
  %115 = insertvalue { i8*, i32 } %114, i32 %113, 1
  resume { i8*, i32 } %115
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN5Lexer8Compound3useEv(%"class.Lexer::Compound"*) #0 comdat align 2 {
  %2 = alloca %"class.Lexer::Compound"*, align 8
  store %"class.Lexer::Compound"* %0, %"class.Lexer::Compound"** %2, align 8
  %3 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %2, align 8
  %4 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %3, i32 0, i32 18
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, 1
  store i32 %6, i32* %4, align 4
  ret void
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer19ycompound_argumentsEPNS_8CompoundE(%class.Lexer*, %"class.Lexer::Compound"*) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.Lexer*, align 8
  %4 = alloca %"class.Lexer::Compound"*, align 8
  %5 = alloca %class.Lexeme, align 8
  %6 = alloca %class.Lexeme, align 8
  %7 = alloca i8*
  %8 = alloca i32
  %9 = alloca %class.String, align 8
  %10 = alloca %class.String, align 8
  %11 = alloca %class.Lexeme, align 8
  %12 = alloca %class.Lexeme, align 8
  %13 = alloca i32
  %14 = alloca %class.Lexeme, align 8
  store %class.Lexer* %0, %class.Lexer** %3, align 8
  store %"class.Lexer::Compound"* %1, %"class.Lexer::Compound"** %4, align 8
  %15 = load %class.Lexer*, %class.Lexer** %3, align 8
  call void @_ZN6LexemeC2Ev(%class.Lexeme* %5)
  invoke void @_ZN6LexemeC2Ev(%class.Lexeme* %6)
          to label %16 unwind label %41

; <label>:16:                                     ; preds = %2
  br label %17

; <label>:17:                                     ; preds = %125, %16
  br label %18

; <label>:18:                                     ; preds = %17
  invoke void @_ZN6StringC2Ev(%class.String* %9)
          to label %19 unwind label %45

; <label>:19:                                     ; preds = %18
  invoke void @_ZN6StringC2Ev(%class.String* %10)
          to label %20 unwind label %49

; <label>:20:                                     ; preds = %19
  invoke void @_ZN5Lexer3lexEv(%class.Lexeme* sret %11, %class.Lexer* %15)
          to label %21 unwind label %53

; <label>:21:                                     ; preds = %20
  %22 = invoke dereferenceable(32) %class.Lexeme* @_ZN6LexemeaSEOS_(%class.Lexeme* %5, %class.Lexeme* dereferenceable(32) %11)
          to label %23 unwind label %57

; <label>:23:                                     ; preds = %21
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %11) #9
  %24 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %5, i32 256)
          to label %25 unwind label %53

; <label>:25:                                     ; preds = %23
  br i1 %24, label %26, label %79

; <label>:26:                                     ; preds = %25
  invoke void @_ZN5Lexer3lexEv(%class.Lexeme* sret %12, %class.Lexer* %15)
          to label %27 unwind label %53

; <label>:27:                                     ; preds = %26
  %28 = invoke dereferenceable(32) %class.Lexeme* @_ZN6LexemeaSEOS_(%class.Lexeme* %6, %class.Lexeme* dereferenceable(32) %12)
          to label %29 unwind label %61

; <label>:29:                                     ; preds = %27
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %12) #9
  %30 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %6, i32 257)
          to label %31 unwind label %53

; <label>:31:                                     ; preds = %29
  br i1 %30, label %32, label %65

; <label>:32:                                     ; preds = %31
  %33 = invoke dereferenceable(24) %class.String* @_ZN6Lexeme6stringEv(%class.Lexeme* %5)
          to label %34 unwind label %53

; <label>:34:                                     ; preds = %32
  %35 = invoke dereferenceable(24) %class.String* @_ZN6StringaSERKS_(%class.String* %9, %class.String* dereferenceable(24) %33)
          to label %36 unwind label %53

; <label>:36:                                     ; preds = %34
  %37 = invoke dereferenceable(24) %class.String* @_ZN6Lexeme6stringEv(%class.Lexeme* %6)
          to label %38 unwind label %53

; <label>:38:                                     ; preds = %36
  %39 = invoke dereferenceable(24) %class.String* @_ZN6StringaSERKS_(%class.String* %10, %class.String* dereferenceable(24) %37)
          to label %40 unwind label %53

; <label>:40:                                     ; preds = %38
  br label %78

; <label>:41:                                     ; preds = %2
  %42 = landingpad { i8*, i32 }
          cleanup
  %43 = extractvalue { i8*, i32 } %42, 0
  store i8* %43, i8** %7, align 8
  %44 = extractvalue { i8*, i32 } %42, 1
  store i32 %44, i32* %8, align 4
  br label %130

; <label>:45:                                     ; preds = %18
  %46 = landingpad { i8*, i32 }
          cleanup
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %7, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %8, align 4
  br label %129

; <label>:49:                                     ; preds = %19
  %50 = landingpad { i8*, i32 }
          cleanup
  %51 = extractvalue { i8*, i32 } %50, 0
  store i8* %51, i8** %7, align 8
  %52 = extractvalue { i8*, i32 } %50, 1
  store i32 %52, i32* %8, align 4
  br label %127

; <label>:53:                                     ; preds = %104, %102, %99, %96, %91, %87, %84, %82, %79, %76, %75, %72, %68, %65, %38, %36, %34, %32, %29, %26, %23, %20
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %7, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %8, align 4
  br label %126

; <label>:57:                                     ; preds = %21
  %58 = landingpad { i8*, i32 }
          cleanup
  %59 = extractvalue { i8*, i32 } %58, 0
  store i8* %59, i8** %7, align 8
  %60 = extractvalue { i8*, i32 } %58, 1
  store i32 %60, i32* %8, align 4
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %11) #9
  br label %126

; <label>:61:                                     ; preds = %27
  %62 = landingpad { i8*, i32 }
          cleanup
  %63 = extractvalue { i8*, i32 } %62, 0
  store i8* %63, i8** %7, align 8
  %64 = extractvalue { i8*, i32 } %62, 1
  store i32 %64, i32* %8, align 4
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %12) #9
  br label %126

; <label>:65:                                     ; preds = %31
  %66 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %4, align 8
  %67 = invoke dereferenceable(56) %class.VariableEnvironment* @_ZN5Lexer8Compound5scopeEv(%"class.Lexer::Compound"* %66)
          to label %68 unwind label %53

; <label>:68:                                     ; preds = %65
  %69 = invoke i32 @_ZNK19VariableEnvironment4sizeEv(%class.VariableEnvironment* %67)
          to label %70 unwind label %53

; <label>:70:                                     ; preds = %68
  %71 = icmp sgt i32 %69, 0
  br i1 %71, label %72, label %75

; <label>:72:                                     ; preds = %70
  %73 = invoke i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %15, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.79, i32 0, i32 0))
          to label %74 unwind label %53

; <label>:74:                                     ; preds = %72
  br label %75

; <label>:75:                                     ; preds = %74, %70
  invoke void @_ZN5Lexer5unlexERK6Lexeme(%class.Lexer* %15, %class.Lexeme* dereferenceable(32) %6)
          to label %76 unwind label %53

; <label>:76:                                     ; preds = %75
  invoke void @_ZN5Lexer5unlexERK6Lexeme(%class.Lexer* %15, %class.Lexeme* dereferenceable(32) %5)
          to label %77 unwind label %53

; <label>:77:                                     ; preds = %76
  store i32 3, i32* %13, align 4
  br label %123

; <label>:78:                                     ; preds = %40
  br label %102

; <label>:79:                                     ; preds = %25
  %80 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %5, i32 257)
          to label %81 unwind label %53

; <label>:81:                                     ; preds = %79
  br i1 %80, label %82, label %87

; <label>:82:                                     ; preds = %81
  %83 = invoke dereferenceable(24) %class.String* @_ZN6Lexeme6stringEv(%class.Lexeme* %5)
          to label %84 unwind label %53

; <label>:84:                                     ; preds = %82
  %85 = invoke dereferenceable(24) %class.String* @_ZN6StringaSERKS_(%class.String* %10, %class.String* dereferenceable(24) %83)
          to label %86 unwind label %53

; <label>:86:                                     ; preds = %84
  br label %101

; <label>:87:                                     ; preds = %81
  %88 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %5, i32 124)
          to label %89 unwind label %53

; <label>:89:                                     ; preds = %87
  br i1 %88, label %90, label %91

; <label>:90:                                     ; preds = %89
  store i32 3, i32* %13, align 4
  br label %123

; <label>:91:                                     ; preds = %89
  %92 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %4, align 8
  %93 = invoke i32 @_ZNK5Lexer8Compound8nformalsEv(%"class.Lexer::Compound"* %92)
          to label %94 unwind label %53

; <label>:94:                                     ; preds = %91
  %95 = icmp sgt i32 %93, 0
  br i1 %95, label %96, label %99

; <label>:96:                                     ; preds = %94
  %97 = invoke i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %15, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.79, i32 0, i32 0))
          to label %98 unwind label %53

; <label>:98:                                     ; preds = %96
  br label %99

; <label>:99:                                     ; preds = %98, %94
  invoke void @_ZN5Lexer5unlexERK6Lexeme(%class.Lexer* %15, %class.Lexeme* dereferenceable(32) %5)
          to label %100 unwind label %53

; <label>:100:                                    ; preds = %99
  store i32 3, i32* %13, align 4
  br label %123

; <label>:101:                                    ; preds = %86
  br label %102

; <label>:102:                                    ; preds = %101, %78
  %103 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %4, align 8
  invoke void @_ZN5Lexer8Compound6defineERK6StringS3_bPS_(%"class.Lexer::Compound"* %103, %class.String* dereferenceable(24) %10, %class.String* dereferenceable(24) %9, i1 zeroext true, %class.Lexer* %15)
          to label %104 unwind label %53

; <label>:104:                                    ; preds = %102
  invoke void @_ZN5Lexer3lexEv(%class.Lexeme* sret %14, %class.Lexer* %15)
          to label %105 unwind label %53

; <label>:105:                                    ; preds = %104
  %106 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %14, i32 124)
          to label %107 unwind label %109

; <label>:107:                                    ; preds = %105
  br i1 %106, label %108, label %113

; <label>:108:                                    ; preds = %107
  store i32 3, i32* %13, align 4
  br label %122

; <label>:109:                                    ; preds = %118, %116, %113, %105
  %110 = landingpad { i8*, i32 }
          cleanup
  %111 = extractvalue { i8*, i32 } %110, 0
  store i8* %111, i8** %7, align 8
  %112 = extractvalue { i8*, i32 } %110, 1
  store i32 %112, i32* %8, align 4
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %14) #9
  br label %126

; <label>:113:                                    ; preds = %107
  %114 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %14, i32 44)
          to label %115 unwind label %109

; <label>:115:                                    ; preds = %113
  br i1 %114, label %120, label %116

; <label>:116:                                    ; preds = %115
  %117 = invoke i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %15, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.80, i32 0, i32 0))
          to label %118 unwind label %109

; <label>:118:                                    ; preds = %116
  invoke void @_ZN5Lexer5unlexERK6Lexeme(%class.Lexer* %15, %class.Lexeme* dereferenceable(32) %14)
          to label %119 unwind label %109

; <label>:119:                                    ; preds = %118
  store i32 3, i32* %13, align 4
  br label %122

; <label>:120:                                    ; preds = %115
  br label %121

; <label>:121:                                    ; preds = %120
  store i32 0, i32* %13, align 4
  br label %122

; <label>:122:                                    ; preds = %121, %119, %108
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %14) #9
  br label %123

; <label>:123:                                    ; preds = %122, %100, %90, %77
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  %124 = load i32, i32* %13, align 4
  switch i32 %124, label %136 [
    i32 0, label %125
    i32 3, label %128
  ]

; <label>:125:                                    ; preds = %123
  br label %17

; <label>:126:                                    ; preds = %109, %61, %57, %53
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  br label %127

; <label>:127:                                    ; preds = %126, %49
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  br label %129

; <label>:128:                                    ; preds = %123
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %6) #9
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %5) #9
  ret void

; <label>:129:                                    ; preds = %127, %45
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %6) #9
  br label %130

; <label>:130:                                    ; preds = %129, %41
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %5) #9
  br label %131

; <label>:131:                                    ; preds = %130
  %132 = load i8*, i8** %7, align 8
  %133 = load i32, i32* %8, align 4
  %134 = insertvalue { i8*, i32 } undef, i8* %132, 0
  %135 = insertvalue { i8*, i32 } %134, i32 %133, 1
  resume { i8*, i32 } %135

; <label>:136:                                    ; preds = %123
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(56) %class.VariableEnvironment* @_ZN5Lexer8Compound5scopeEv(%"class.Lexer::Compound"*) #0 comdat align 2 {
  %2 = alloca %"class.Lexer::Compound"*, align 8
  store %"class.Lexer::Compound"* %0, %"class.Lexer::Compound"** %2, align 8
  %3 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %2, align 8
  %4 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %3, i32 0, i32 4
  ret %class.VariableEnvironment* %4
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr i32 @_ZNK19VariableEnvironment4sizeEv(%class.VariableEnvironment*) #2 comdat align 2 {
  %2 = alloca %class.VariableEnvironment*, align 8
  store %class.VariableEnvironment* %0, %class.VariableEnvironment** %2, align 8
  %3 = load %class.VariableEnvironment*, %class.VariableEnvironment** %2, align 8
  %4 = getelementptr inbounds %class.VariableEnvironment, %class.VariableEnvironment* %3, i32 0, i32 1
  %5 = call i32 @_ZNK6VectorI6StringE4sizeEv(%class.Vector.0* %4)
  ret i32 %5
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr i32 @_ZNK5Lexer8Compound8nformalsEv(%"class.Lexer::Compound"*) #0 comdat align 2 {
  %2 = alloca %"class.Lexer::Compound"*, align 8
  store %"class.Lexer::Compound"* %0, %"class.Lexer::Compound"** %2, align 8
  %3 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %2, align 8
  %4 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %3, i32 0, i32 5
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN5Lexer8Compound6defineERK6StringS3_bPS_(%"class.Lexer::Compound"*, %class.String* dereferenceable(24), %class.String* dereferenceable(24), i1 zeroext, %class.Lexer*) #2 comdat align 2 {
  %6 = alloca %"class.Lexer::Compound"*, align 8
  %7 = alloca %class.String*, align 8
  %8 = alloca %class.String*, align 8
  %9 = alloca i8, align 1
  %10 = alloca %class.Lexer*, align 8
  %11 = alloca i32, align 4
  store %"class.Lexer::Compound"* %0, %"class.Lexer::Compound"** %6, align 8
  store %class.String* %1, %class.String** %7, align 8
  store %class.String* %2, %class.String** %8, align 8
  %12 = zext i1 %3 to i8
  store i8 %12, i8* %9, align 1
  store %class.Lexer* %4, %class.Lexer** %10, align 8
  %13 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %6, align 8
  %14 = load i8, i8* %9, align 1
  %15 = trunc i8 %14 to i1
  br i1 %15, label %16, label %22

; <label>:16:                                     ; preds = %5
  %17 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %13, i32 0, i32 5
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %13, i32 0, i32 4
  %20 = call i32 @_ZNK19VariableEnvironment4sizeEv(%class.VariableEnvironment* %19)
  %21 = icmp eq i32 %18, %20
  br label %22

; <label>:22:                                     ; preds = %16, %5
  %23 = phi i1 [ true, %5 ], [ %21, %16 ]
  br i1 %23, label %24, label %25

; <label>:24:                                     ; preds = %22
  br label %27

; <label>:25:                                     ; preds = %22
  call void @__assert_fail(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i32 228, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN5Lexer8Compound6defineERK6StringS3_bPS_, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %27

; <label>:27:                                     ; preds = %26, %24
  %28 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %13, i32 0, i32 4
  %29 = load %class.String*, %class.String** %7, align 8
  %30 = load %class.String*, %class.String** %8, align 8
  %31 = call zeroext i1 @_ZN19VariableEnvironment6defineERK6StringS2_b(%class.VariableEnvironment* %28, %class.String* dereferenceable(24) %29, %class.String* dereferenceable(24) %30, i1 zeroext false)
  br i1 %31, label %37, label %32

; <label>:32:                                     ; preds = %27
  %33 = load %class.Lexer*, %class.Lexer** %10, align 8
  %34 = load %class.String*, %class.String** %7, align 8
  %35 = call i8* @_ZNK6String5c_strEv(%class.String* %34)
  %36 = call i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %33, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.134, i32 0, i32 0), i8* %35)
  br label %108

; <label>:37:                                     ; preds = %27
  %38 = load i8, i8* %9, align 1
  %39 = trunc i8 %38 to i1
  br i1 %39, label %40, label %107

; <label>:40:                                     ; preds = %37
  %41 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %13, i32 0, i32 4
  %42 = call i32 @_ZNK19VariableEnvironment4sizeEv(%class.VariableEnvironment* %41)
  %43 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %13, i32 0, i32 5
  store i32 %42, i32* %43, align 8
  %44 = load %class.String*, %class.String** %8, align 8
  %45 = call { i64, i64 } @_ZNK6StringcvMS_KFivEEv(%class.String* %44)
  %46 = extractvalue { i64, i64 } %45, 0
  %47 = icmp ne i64 %46, 0
  br i1 %47, label %48, label %71

; <label>:48:                                     ; preds = %40
  store i32 0, i32* %11, align 4
  br label %49

; <label>:49:                                     ; preds = %67, %48
  %50 = load i32, i32* %11, align 4
  %51 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %13, i32 0, i32 4
  %52 = call i32 @_ZNK19VariableEnvironment4sizeEv(%class.VariableEnvironment* %51)
  %53 = sub nsw i32 %52, 1
  %54 = icmp slt i32 %50, %53
  br i1 %54, label %55, label %70

; <label>:55:                                     ; preds = %49
  %56 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %13, i32 0, i32 4
  %57 = load i32, i32* %11, align 4
  %58 = call dereferenceable(24) %class.String* @_ZNK19VariableEnvironment5valueEi(%class.VariableEnvironment* %56, i32 %57)
  %59 = load %class.String*, %class.String** %8, align 8
  %60 = call zeroext i1 @_ZeqRK6StringS1_(%class.String* dereferenceable(24) %58, %class.String* dereferenceable(24) %59)
  br i1 %60, label %61, label %66

; <label>:61:                                     ; preds = %55
  %62 = load %class.Lexer*, %class.Lexer** %10, align 8
  %63 = load %class.String*, %class.String** %8, align 8
  %64 = call i8* @_ZNK6String5c_strEv(%class.String* %63)
  %65 = call i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %62, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.135, i32 0, i32 0), i8* %64)
  br label %70

; <label>:66:                                     ; preds = %55
  br label %67

; <label>:67:                                     ; preds = %66
  %68 = load i32, i32* %11, align 4
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %11, align 4
  br label %49

; <label>:70:                                     ; preds = %61, %49
  br label %71

; <label>:71:                                     ; preds = %70, %40
  %72 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %13, i32 0, i32 8
  %73 = load i8, i8* %72, align 4
  %74 = and i8 %73, 1
  %75 = trunc i8 %74 to i1
  br i1 %75, label %106, label %76

; <label>:76:                                     ; preds = %71
  %77 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %13, i32 0, i32 5
  %78 = load i32, i32* %77, align 8
  %79 = icmp sgt i32 %78, 1
  br i1 %79, label %80, label %106

; <label>:80:                                     ; preds = %76
  %81 = load %class.String*, %class.String** %8, align 8
  %82 = call zeroext i1 @_ZNK6StringntEv(%class.String* %81)
  br i1 %82, label %83, label %92

; <label>:83:                                     ; preds = %80
  %84 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %13, i32 0, i32 4
  %85 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %13, i32 0, i32 5
  %86 = load i32, i32* %85, align 8
  %87 = sub nsw i32 %86, 2
  %88 = call dereferenceable(24) %class.String* @_ZNK19VariableEnvironment5valueEi(%class.VariableEnvironment* %84, i32 %87)
  %89 = call { i64, i64 } @_ZNK6StringcvMS_KFivEEv(%class.String* %88)
  %90 = extractvalue { i64, i64 } %89, 0
  %91 = icmp ne i64 %90, 0
  br i1 %91, label %99, label %92

; <label>:92:                                     ; preds = %83, %80
  %93 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %13, i32 0, i32 4
  %94 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %13, i32 0, i32 5
  %95 = load i32, i32* %94, align 8
  %96 = sub nsw i32 %95, 2
  %97 = call dereferenceable(24) %class.String* @_ZNK19VariableEnvironment5valueEi(%class.VariableEnvironment* %93, i32 %96)
  %98 = call zeroext i1 @_ZeqRK6StringPKc(%class.String* dereferenceable(24) %97, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i32 0, i32 0))
  br i1 %98, label %99, label %106

; <label>:99:                                     ; preds = %92, %83
  %100 = load %class.Lexer*, %class.Lexer** %10, align 8
  %101 = call i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %100, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @.str.136, i32 0, i32 0))
  %102 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %13, i32 0, i32 8
  %103 = load i8, i8* %102, align 4
  %104 = and i8 %103, -2
  %105 = or i8 %104, 1
  store i8 %105, i8* %102, align 4
  br label %106

; <label>:106:                                    ; preds = %99, %92, %76, %71
  br label %107

; <label>:107:                                    ; preds = %106, %37
  br label %108

; <label>:108:                                    ; preds = %107, %32
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dereferenceable(64) %class.HashTable* @_ZN9HashTableI6StringiEaSERKS1_(%class.HashTable*, %class.HashTable* dereferenceable(64)) #2 comdat align 2 {
  %3 = alloca %class.HashTable*, align 8
  %4 = alloca %class.HashTable*, align 8
  store %class.HashTable* %0, %class.HashTable** %3, align 8
  store %class.HashTable* %1, %class.HashTable** %4, align 8
  %5 = load %class.HashTable*, %class.HashTable** %3, align 8
  %6 = load %class.HashTable*, %class.HashTable** %4, align 8
  %7 = getelementptr inbounds %class.HashTable, %class.HashTable* %6, i32 0, i32 0
  %8 = getelementptr inbounds %class.HashTable, %class.HashTable* %5, i32 0, i32 0
  %9 = call dereferenceable(56) %class.HashTable.13* @_ZN9HashTableI4PairIK6StringiEvEaSERKS4_(%class.HashTable.13* %8, %class.HashTable.13* dereferenceable(56) %7)
  %10 = load %class.HashTable*, %class.HashTable** %4, align 8
  %11 = getelementptr inbounds %class.HashTable, %class.HashTable* %10, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %class.HashTable, %class.HashTable* %5, i32 0, i32 1
  store i32 %12, i32* %13, align 8
  ret %class.HashTable* %5
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer14ycompound_nextEv(%class.Lexer*) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Lexer*, align 8
  %3 = alloca %class.Lexeme, align 8
  %4 = alloca i8*
  %5 = alloca i32
  %6 = alloca %class.String, align 8
  %7 = alloca %class.Lexeme, align 8
  %8 = alloca %class.String, align 8
  %9 = alloca i1, align 1
  %10 = alloca %class.String, align 8
  %11 = alloca %class.String, align 8
  %12 = alloca %class.String, align 8
  %13 = alloca %class.String, align 8
  %14 = alloca %class.String, align 8
  %15 = alloca %class.String, align 8
  %16 = alloca %class.Lexeme, align 8
  store %class.Lexer* %0, %class.Lexer** %2, align 8
  %17 = load %class.Lexer*, %class.Lexer** %2, align 8
  call void @_ZN5Lexer3lexEv(%class.Lexeme* sret %3, %class.Lexer* %17)
  %18 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %3, i32 262)
          to label %19 unwind label %35

; <label>:19:                                     ; preds = %1
  br i1 %18, label %20, label %70

; <label>:20:                                     ; preds = %19
  %21 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 13
  %22 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %21, align 8
  %23 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %22, i32 0, i32 14
  invoke void @_ZN6StringC2ERKS_(%class.String* %6, %class.String* dereferenceable(24) %23)
          to label %24 unwind label %35

; <label>:24:                                     ; preds = %20
  %25 = invoke i32 @_ZNK5Lexer12element_typeERK6String(%class.Lexer* %17, %class.String* dereferenceable(24) %6)
          to label %26 unwind label %39

; <label>:26:                                     ; preds = %24
  %27 = icmp slt i32 %25, 0
  br i1 %27, label %28, label %43

; <label>:28:                                     ; preds = %26
  %29 = invoke i8* @_ZNK6String5c_strEv(%class.String* %6)
          to label %30 unwind label %39

; <label>:30:                                     ; preds = %28
  %31 = invoke i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %17, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.81, i32 0, i32 0), i8* %29)
          to label %32 unwind label %39

; <label>:32:                                     ; preds = %30
  %33 = invoke i32 @_ZN5Lexer16add_element_typeERK6StringPFP7ElementmEmb(%class.Lexer* %17, %class.String* dereferenceable(24) %6, %class.Element* (i64)* @_ZL21error_element_factorym, i64 0, i1 zeroext true)
          to label %34 unwind label %39

; <label>:34:                                     ; preds = %32
  br label %43

; <label>:35:                                     ; preds = %120, %118, %106, %102, %97, %91, %84, %70, %20, %1
  %36 = landingpad { i8*, i32 }
          cleanup
  %37 = extractvalue { i8*, i32 } %36, 0
  store i8* %37, i8** %4, align 8
  %38 = extractvalue { i8*, i32 } %36, 1
  store i32 %38, i32* %5, align 4
  br label %173

; <label>:39:                                     ; preds = %67, %60, %57, %45, %43, %32, %30, %28, %24
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %4, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %5, align 4
  br label %69

; <label>:43:                                     ; preds = %34, %26
  %44 = invoke i32 @_ZNK5Lexer12element_typeERK6String(%class.Lexer* %17, %class.String* dereferenceable(24) %6)
          to label %45 unwind label %39

; <label>:45:                                     ; preds = %43
  %46 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 13
  %47 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %46, align 8
  %48 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %47, i32 0, i32 19
  store i32 %44, i32* %48, align 8
  invoke void @_ZN5Lexer3lexEv(%class.Lexeme* sret %7, %class.Lexer* %17)
          to label %49 unwind label %39

; <label>:49:                                     ; preds = %45
  %50 = invoke dereferenceable(32) %class.Lexeme* @_ZN6LexemeaSEOS_(%class.Lexeme* %3, %class.Lexeme* dereferenceable(32) %7)
          to label %51 unwind label %63

; <label>:51:                                     ; preds = %49
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %7) #9
  %52 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 13
  %53 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %52, align 8
  %54 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %53, i32 0, i32 17
  %55 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %54, align 8
  %56 = icmp ne %"class.Lexer::Compound"* %55, null
  br i1 %56, label %57, label %60

; <label>:57:                                     ; preds = %51
  %58 = invoke zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %3, i32 125)
          to label %59 unwind label %39

; <label>:59:                                     ; preds = %57
  br i1 %58, label %67, label %60

; <label>:60:                                     ; preds = %59, %51
  %61 = invoke i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %17, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.82, i32 0, i32 0))
          to label %62 unwind label %39

; <label>:62:                                     ; preds = %60
  br label %67

; <label>:63:                                     ; preds = %49
  %64 = landingpad { i8*, i32 }
          cleanup
  %65 = extractvalue { i8*, i32 } %64, 0
  store i8* %65, i8** %4, align 8
  %66 = extractvalue { i8*, i32 } %64, 1
  store i32 %66, i32* %5, align 4
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %7) #9
  br label %69

; <label>:67:                                     ; preds = %62, %59
  invoke void @_ZN5Lexer5unlexERK6Lexeme(%class.Lexer* %17, %class.Lexeme* dereferenceable(32) %3)
          to label %68 unwind label %39

; <label>:68:                                     ; preds = %67
  call void @_ZN6StringD2Ev(%class.String* %6) #9
  br label %172

; <label>:69:                                     ; preds = %63, %39
  call void @_ZN6StringD2Ev(%class.String* %6) #9
  br label %173

; <label>:70:                                     ; preds = %19
  %71 = invoke i8* @_Znwm(i64 440) #15
          to label %72 unwind label %35

; <label>:72:                                     ; preds = %70
  store i1 true, i1* %9, align 1
  %73 = bitcast i8* %71 to %"class.Lexer::Compound"*
  %74 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 13
  %75 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %74, align 8
  %76 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %75, i32 0, i32 14
  %77 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 1
  invoke void @_ZNK5Lexer9FileState8landmarkEv(%class.String* sret %8, %"struct.Lexer::FileState"* %77)
          to label %78 unwind label %123

; <label>:78:                                     ; preds = %72
  %79 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 13
  %80 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %79, align 8
  %81 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %80, i32 0, i32 16
  %82 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %81, align 8
  %83 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %82, i32 0, i32 4
  invoke void @_ZN5Lexer8CompoundC1ERK6StringS3_P19VariableEnvironment(%"class.Lexer::Compound"* %73, %class.String* dereferenceable(24) %76, %class.String* dereferenceable(24) %8, %class.VariableEnvironment* %83)
          to label %84 unwind label %127

; <label>:84:                                     ; preds = %78
  store i1 false, i1* %9, align 1
  %85 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 12
  store %"class.Lexer::Compound"* %73, %"class.Lexer::Compound"** %85, align 8
  call void @_ZN6StringD2Ev(%class.String* %8) #9
  %86 = invoke i8* @_Znwm(i64 216) #15
          to label %87 unwind label %35

; <label>:87:                                     ; preds = %84
  %88 = bitcast i8* %86 to %"struct.Lexer::ParseState"*
  %89 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 13
  %90 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %89, align 8
  invoke void @_ZN5Lexer10ParseStateC2EiPS0_(%"struct.Lexer::ParseState"* %88, i32 1, %"struct.Lexer::ParseState"* %90)
          to label %91 unwind label %135

; <label>:91:                                     ; preds = %87
  %92 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 13
  store %"struct.Lexer::ParseState"* %88, %"struct.Lexer::ParseState"** %92, align 8
  invoke void @_ZN6StringC2EPKc(%class.String* %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0))
          to label %93 unwind label %35

; <label>:93:                                     ; preds = %91
  invoke void @_ZN6StringC2Ev(%class.String* %11)
          to label %94 unwind label %139

; <label>:94:                                     ; preds = %93
  invoke void @_ZN6StringC2Ev(%class.String* %12)
          to label %95 unwind label %143

; <label>:95:                                     ; preds = %94
  %96 = invoke i32 @_ZN5Lexer11get_elementE6StringiRKS0_S2_j(%class.Lexer* %17, %class.String* %10, i32 0, %class.String* dereferenceable(24) %11, %class.String* dereferenceable(24) %12, i32 0)
          to label %97 unwind label %147

; <label>:97:                                     ; preds = %95
  call void @_ZN6StringD2Ev(%class.String* %12) #9
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  invoke void @_ZN6StringC2EPKc(%class.String* %13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0))
          to label %98 unwind label %35

; <label>:98:                                     ; preds = %97
  invoke void @_ZN6StringC2Ev(%class.String* %14)
          to label %99 unwind label %153

; <label>:99:                                     ; preds = %98
  invoke void @_ZN6StringC2Ev(%class.String* %15)
          to label %100 unwind label %157

; <label>:100:                                    ; preds = %99
  %101 = invoke i32 @_ZN5Lexer11get_elementE6StringiRKS0_S2_j(%class.Lexer* %17, %class.String* %13, i32 0, %class.String* dereferenceable(24) %14, %class.String* dereferenceable(24) %15, i32 0)
          to label %102 unwind label %161

; <label>:102:                                    ; preds = %100
  call void @_ZN6StringD2Ev(%class.String* %15) #9
  call void @_ZN6StringD2Ev(%class.String* %14) #9
  call void @_ZN6StringD2Ev(%class.String* %13) #9
  %103 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 12
  %104 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %103, align 8
  %105 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %104, i32 0, i32 17
  store i32 2, i32* %105, align 8
  invoke void @_ZN5Lexer5unlexERK6Lexeme(%class.Lexer* %17, %class.Lexeme* dereferenceable(32) %3)
          to label %106 unwind label %35

; <label>:106:                                    ; preds = %102
  %107 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 12
  %108 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %107, align 8
  invoke void @_ZN5Lexer19ycompound_argumentsEPNS_8CompoundE(%class.Lexer* %17, %"class.Lexer::Compound"* %108)
          to label %109 unwind label %35

; <label>:109:                                    ; preds = %106
  %110 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 13
  %111 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %110, align 8
  %112 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %111, i32 0, i32 0
  store i32 0, i32* %112, align 8
  %113 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 13
  %114 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %113, align 8
  %115 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %114, i32 0, i32 22
  %116 = load i32, i32* %115, align 8
  %117 = icmp sge i32 %116, 50
  br i1 %117, label %118, label %171

; <label>:118:                                    ; preds = %109
  %119 = invoke i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %17, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.83, i32 0, i32 0))
          to label %120 unwind label %35

; <label>:120:                                    ; preds = %118
  invoke void @_ZN6LexemeC2Ev(%class.Lexeme* %16)
          to label %121 unwind label %35

; <label>:121:                                    ; preds = %120
  invoke void @_ZN5Lexer13ycompound_endERK6Lexeme(%class.Lexer* %17, %class.Lexeme* dereferenceable(32) %16)
          to label %122 unwind label %167

; <label>:122:                                    ; preds = %121
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %16) #9
  br label %171

; <label>:123:                                    ; preds = %72
  %124 = landingpad { i8*, i32 }
          cleanup
  %125 = extractvalue { i8*, i32 } %124, 0
  store i8* %125, i8** %4, align 8
  %126 = extractvalue { i8*, i32 } %124, 1
  store i32 %126, i32* %5, align 4
  br label %131

; <label>:127:                                    ; preds = %78
  %128 = landingpad { i8*, i32 }
          cleanup
  %129 = extractvalue { i8*, i32 } %128, 0
  store i8* %129, i8** %4, align 8
  %130 = extractvalue { i8*, i32 } %128, 1
  store i32 %130, i32* %5, align 4
  call void @_ZN6StringD2Ev(%class.String* %8) #9
  br label %131

; <label>:131:                                    ; preds = %127, %123
  %132 = load i1, i1* %9, align 1
  br i1 %132, label %133, label %134

; <label>:133:                                    ; preds = %131
  call void @_ZdlPv(i8* %71) #14
  br label %134

; <label>:134:                                    ; preds = %133, %131
  br label %173

; <label>:135:                                    ; preds = %87
  %136 = landingpad { i8*, i32 }
          cleanup
  %137 = extractvalue { i8*, i32 } %136, 0
  store i8* %137, i8** %4, align 8
  %138 = extractvalue { i8*, i32 } %136, 1
  store i32 %138, i32* %5, align 4
  call void @_ZdlPv(i8* %86) #14
  br label %173

; <label>:139:                                    ; preds = %93
  %140 = landingpad { i8*, i32 }
          cleanup
  %141 = extractvalue { i8*, i32 } %140, 0
  store i8* %141, i8** %4, align 8
  %142 = extractvalue { i8*, i32 } %140, 1
  store i32 %142, i32* %5, align 4
  br label %152

; <label>:143:                                    ; preds = %94
  %144 = landingpad { i8*, i32 }
          cleanup
  %145 = extractvalue { i8*, i32 } %144, 0
  store i8* %145, i8** %4, align 8
  %146 = extractvalue { i8*, i32 } %144, 1
  store i32 %146, i32* %5, align 4
  br label %151

; <label>:147:                                    ; preds = %95
  %148 = landingpad { i8*, i32 }
          cleanup
  %149 = extractvalue { i8*, i32 } %148, 0
  store i8* %149, i8** %4, align 8
  %150 = extractvalue { i8*, i32 } %148, 1
  store i32 %150, i32* %5, align 4
  call void @_ZN6StringD2Ev(%class.String* %12) #9
  br label %151

; <label>:151:                                    ; preds = %147, %143
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  br label %152

; <label>:152:                                    ; preds = %151, %139
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  br label %173

; <label>:153:                                    ; preds = %98
  %154 = landingpad { i8*, i32 }
          cleanup
  %155 = extractvalue { i8*, i32 } %154, 0
  store i8* %155, i8** %4, align 8
  %156 = extractvalue { i8*, i32 } %154, 1
  store i32 %156, i32* %5, align 4
  br label %166

; <label>:157:                                    ; preds = %99
  %158 = landingpad { i8*, i32 }
          cleanup
  %159 = extractvalue { i8*, i32 } %158, 0
  store i8* %159, i8** %4, align 8
  %160 = extractvalue { i8*, i32 } %158, 1
  store i32 %160, i32* %5, align 4
  br label %165

; <label>:161:                                    ; preds = %100
  %162 = landingpad { i8*, i32 }
          cleanup
  %163 = extractvalue { i8*, i32 } %162, 0
  store i8* %163, i8** %4, align 8
  %164 = extractvalue { i8*, i32 } %162, 1
  store i32 %164, i32* %5, align 4
  call void @_ZN6StringD2Ev(%class.String* %15) #9
  br label %165

; <label>:165:                                    ; preds = %161, %157
  call void @_ZN6StringD2Ev(%class.String* %14) #9
  br label %166

; <label>:166:                                    ; preds = %165, %153
  call void @_ZN6StringD2Ev(%class.String* %13) #9
  br label %173

; <label>:167:                                    ; preds = %121
  %168 = landingpad { i8*, i32 }
          cleanup
  %169 = extractvalue { i8*, i32 } %168, 0
  store i8* %169, i8** %4, align 8
  %170 = extractvalue { i8*, i32 } %168, 1
  store i32 %170, i32* %5, align 4
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %16) #9
  br label %173

; <label>:171:                                    ; preds = %122, %109
  br label %172

; <label>:172:                                    ; preds = %171, %68
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %3) #9
  ret void

; <label>:173:                                    ; preds = %167, %166, %152, %135, %134, %69, %35
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %3) #9
  br label %174

; <label>:174:                                    ; preds = %173
  %175 = load i8*, i8** %4, align 8
  %176 = load i32, i32* %5, align 4
  %177 = insertvalue { i8*, i32 } undef, i8* %175, 0
  %178 = insertvalue { i8*, i32 } %177, i32 %176, 1
  resume { i8*, i32 } %178
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer13ycompound_endERK6Lexeme(%class.Lexer*, %class.Lexeme* dereferenceable(32)) #2 align 2 {
  %3 = alloca %class.Lexer*, align 8
  %4 = alloca %class.Lexeme*, align 8
  %5 = alloca %"struct.Lexer::ParseState"*, align 8
  %6 = alloca %"class.Lexer::Compound"*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"struct.Lexer::ElementState"*, align 8
  store %class.Lexer* %0, %class.Lexer** %3, align 8
  store %class.Lexeme* %1, %class.Lexeme** %4, align 8
  %10 = load %class.Lexer*, %class.Lexer** %3, align 8
  %11 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 13
  %12 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %11, align 8
  store %"struct.Lexer::ParseState"* %12, %"struct.Lexer::ParseState"** %5, align 8
  %13 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 12
  %14 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %13, align 8
  store %"class.Lexer::Compound"* %14, %"class.Lexer::Compound"** %6, align 8
  %15 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 13
  %16 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %15, align 8
  %17 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %16, i32 0, i32 21
  %18 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %17, align 8
  %19 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 13
  store %"struct.Lexer::ParseState"* %18, %"struct.Lexer::ParseState"** %19, align 8
  %20 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 13
  %21 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %20, align 8
  %22 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %21, i32 0, i32 15
  %23 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 7
  %24 = call dereferenceable(64) %class.HashTable* @_ZN9HashTableI6StringiEaSERKS1_(%class.HashTable* %23, %class.HashTable* dereferenceable(64) %22)
  %25 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 13
  %26 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %25, align 8
  %27 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %26, i32 0, i32 16
  %28 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %27, align 8
  %29 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 12
  store %"class.Lexer::Compound"* %28, %"class.Lexer::Compound"** %29, align 8
  %30 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %6, align 8
  %31 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 19
  %32 = load %class.ErrorHandler*, %class.ErrorHandler** %31, align 8
  call void @_ZN5Lexer8Compound6finishEP12ErrorHandler(%"class.Lexer::Compound"* %30, %class.ErrorHandler* %32)
  %33 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %5, align 8
  %34 = icmp eq %"struct.Lexer::ParseState"* %33, null
  br i1 %34, label %37, label %35

; <label>:35:                                     ; preds = %2
  call void @_ZN5Lexer10ParseStateD2Ev(%"struct.Lexer::ParseState"* %33) #9
  %36 = bitcast %"struct.Lexer::ParseState"* %33 to i8*
  call void @_ZdlPv(i8* %36) #14
  br label %37

; <label>:37:                                     ; preds = %35, %2
  %38 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 13
  %39 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %38, align 8
  %40 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %39, i32 0, i32 18
  %41 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %40, align 8
  %42 = icmp ne %"class.Lexer::Compound"* %41, null
  br i1 %42, label %43, label %55

; <label>:43:                                     ; preds = %37
  %44 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 13
  %45 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %44, align 8
  %46 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %45, i32 0, i32 14
  %47 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %6, align 8
  %48 = ptrtoint %"class.Lexer::Compound"* %47 to i64
  %49 = call i32 @_ZN5Lexer16add_element_typeERK6StringPFP7ElementmEmb(%class.Lexer* %10, %class.String* dereferenceable(24) %46, %class.Element* (i64)* @_ZN5Lexer24compound_element_factoryEm, i64 %48, i1 zeroext true)
  store i32 %49, i32* %7, align 4
  %50 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 13
  %51 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %50, align 8
  %52 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %51, i32 0, i32 18
  %53 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %52, align 8
  %54 = load i32, i32* %7, align 4
  call void @_ZN5Lexer8Compound17set_overload_typeEi(%"class.Lexer::Compound"* %53, i32 %54)
  br label %60

; <label>:55:                                     ; preds = %37
  %56 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %6, align 8
  %57 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 13
  %58 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %57, align 8
  %59 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %58, i32 0, i32 17
  store %"class.Lexer::Compound"* %56, %"class.Lexer::Compound"** %59, align 8
  br label %60

; <label>:60:                                     ; preds = %55, %43
  %61 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %6, align 8
  %62 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 13
  %63 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %62, align 8
  %64 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %63, i32 0, i32 18
  store %"class.Lexer::Compound"* %61, %"class.Lexer::Compound"** %64, align 8
  %65 = load %class.Lexeme*, %class.Lexeme** %4, align 8
  %66 = call zeroext i1 @_ZNK6Lexeme2isEi(%class.Lexeme* %65, i32 261)
  br i1 %66, label %67, label %68

; <label>:67:                                     ; preds = %60
  br label %130

; <label>:68:                                     ; preds = %60
  %69 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 13
  %70 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %69, align 8
  %71 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %70, i32 0, i32 18
  %72 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %71, align 8
  %73 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 13
  %74 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %73, align 8
  %75 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %74, i32 0, i32 19
  %76 = load i32, i32* %75, align 8
  call void @_ZN5Lexer8Compound17set_overload_typeEi(%"class.Lexer::Compound"* %72, i32 %76)
  %77 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 13
  %78 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %77, align 8
  %79 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %78, i32 0, i32 14
  %80 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 13
  %81 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %80, align 8
  %82 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %81, i32 0, i32 17
  %83 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %82, align 8
  %84 = ptrtoint %"class.Lexer::Compound"* %83 to i64
  %85 = call i32 @_ZN5Lexer16add_element_typeERK6StringPFP7ElementmEmb(%class.Lexer* %10, %class.String* dereferenceable(24) %79, %class.Element* (i64)* @_ZN5Lexer24compound_element_factoryEm, i64 %84, i1 zeroext true)
  store i32 %85, i32* %8, align 4
  %86 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 13
  %87 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %86, align 8
  %88 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %87, i32 0, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = icmp eq i32 %89, 6
  br i1 %90, label %91, label %101

; <label>:91:                                     ; preds = %68
  %92 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 8
  %93 = load i32, i32* %8, align 4
  %94 = call dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %92, i32 %93)
  %95 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %94, i32 0, i32 2
  %96 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 13
  %97 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %96, align 8
  %98 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %97, i32 0, i32 14
  %99 = call dereferenceable(24) %class.String* @_ZN6StringaSERKS_(%class.String* %98, %class.String* dereferenceable(24) %95)
  %100 = load i32, i32* %8, align 4
  call void @_ZN5Lexer13yelement_typeEibb(%class.Lexer* %10, i32 %100, i1 zeroext false, i1 zeroext false)
  br label %130

; <label>:101:                                    ; preds = %68
  %102 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 13
  %103 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %102, align 8
  %104 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %103, i32 0, i32 0
  %105 = load i32, i32* %104, align 8
  %106 = icmp eq i32 %105, 7
  br i1 %106, label %107, label %116

; <label>:107:                                    ; preds = %101
  %108 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 13
  %109 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %108, align 8
  %110 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %109, i32 0, i32 6
  %111 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %110, align 8
  store %"struct.Lexer::ElementState"* %111, %"struct.Lexer::ElementState"** %9, align 8
  %112 = load i32, i32* %8, align 4
  %113 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %9, align 8
  %114 = getelementptr inbounds %"struct.Lexer::ElementState", %"struct.Lexer::ElementState"* %113, i32 0, i32 2
  store i32 %112, i32* %114, align 4
  %115 = load %"struct.Lexer::ElementState"*, %"struct.Lexer::ElementState"** %9, align 8
  call void @_ZN5Lexer15yelement_configEPNS_12ElementStateEb(%class.Lexer* %10, %"struct.Lexer::ElementState"* %115, i1 zeroext false)
  br label %129

; <label>:116:                                    ; preds = %101
  %117 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 13
  %118 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %117, align 8
  %119 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %118, i32 0, i32 0
  %120 = load i32, i32* %119, align 8
  %121 = icmp eq i32 %120, 8
  br i1 %121, label %122, label %123

; <label>:122:                                    ; preds = %116
  br label %125

; <label>:123:                                    ; preds = %116
  call void @__assert_fail(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i32 1804, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__PRETTY_FUNCTION__._ZN5Lexer13ycompound_endERK6Lexeme, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %125

; <label>:125:                                    ; preds = %124, %122
  %126 = getelementptr inbounds %class.Lexer, %class.Lexer* %10, i32 0, i32 13
  %127 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %126, align 8
  %128 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %127, i32 0, i32 0
  store i32 0, i32* %128, align 8
  br label %129

; <label>:129:                                    ; preds = %125, %107
  br label %130

; <label>:130:                                    ; preds = %67, %129, %91
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN5Lexer8Compound17set_overload_typeEi(%"class.Lexer::Compound"*, i32) #0 comdat align 2 {
  %3 = alloca %"class.Lexer::Compound"*, align 8
  %4 = alloca i32, align 4
  store %"class.Lexer::Compound"* %0, %"class.Lexer::Compound"** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %5, i32 0, i32 3
  store i32 %6, i32* %7, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer10ygroup_endEv(%class.Lexer*) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Lexer*, align 8
  %3 = alloca %"struct.Lexer::ParseState"*, align 8
  %4 = alloca %class.LandmarkErrorHandler, align 8
  %5 = alloca %class.String, align 8
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca i8*, align 8
  %9 = alloca [2 x i32], align 4
  %10 = alloca %class.String, align 8
  %11 = alloca %class.String, align 8
  %12 = alloca %class.String, align 8
  %13 = alloca %class.String, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store %class.Lexer* %0, %class.Lexer** %2, align 8
  %16 = load %class.Lexer*, %class.Lexer** %2, align 8
  %17 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 13
  %18 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %17, align 8
  store %"struct.Lexer::ParseState"* %18, %"struct.Lexer::ParseState"** %3, align 8
  %19 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 13
  %20 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %19, align 8
  %21 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %20, i32 0, i32 21
  %22 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %21, align 8
  %23 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 13
  store %"struct.Lexer::ParseState"* %22, %"struct.Lexer::ParseState"** %23, align 8
  %24 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %3, align 8
  %25 = icmp eq %"struct.Lexer::ParseState"* %24, null
  br i1 %25, label %28, label %26

; <label>:26:                                     ; preds = %1
  call void @_ZN5Lexer10ParseStateD2Ev(%"struct.Lexer::ParseState"* %24) #9
  %27 = bitcast %"struct.Lexer::ParseState"* %24 to i8*
  call void @_ZdlPv(i8* %27) #14
  br label %28

; <label>:28:                                     ; preds = %26, %1
  %29 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 19
  %30 = load %class.ErrorHandler*, %class.ErrorHandler** %29, align 8
  %31 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 1
  call void @_ZNK5Lexer9FileState8landmarkEv(%class.String* sret %5, %"struct.Lexer::FileState"* %31)
  invoke void @_ZN20LandmarkErrorHandlerC1EP12ErrorHandlerRK6String(%class.LandmarkErrorHandler* %4, %class.ErrorHandler* %30, %class.String* dereferenceable(24) %5)
          to label %32 unwind label %174

; <label>:32:                                     ; preds = %28
  call void @_ZN6StringD2Ev(%class.String* %5) #9
  %33 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 13
  %34 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %33, align 8
  %35 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %34, i32 0, i32 14
  %36 = invoke signext i8 @_ZNK6StringixEi(%class.String* %35, i32 0)
          to label %37 unwind label %178

; <label>:37:                                     ; preds = %32
  %38 = sext i8 %36 to i32
  %39 = icmp eq i32 %38, 59
  br i1 %39, label %40, label %41

; <label>:40:                                     ; preds = %37
  br label %47

; <label>:41:                                     ; preds = %37
  %42 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 13
  %43 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %42, align 8
  %44 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %43, i32 0, i32 14
  %45 = invoke i8* @_ZNK6String5c_strEv(%class.String* %44)
          to label %46 unwind label %178

; <label>:46:                                     ; preds = %41
  br label %47

; <label>:47:                                     ; preds = %46, %40
  %48 = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.86, i32 0, i32 0), %40 ], [ %45, %46 ]
  store i8* %48, i8** %8, align 8
  %49 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 12
  %50 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %49, align 8
  %51 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 12
  %52 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %51, align 8
  %53 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %52, i32 0, i32 10
  invoke void @_ZN6StringC2EPKc(%class.String* %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0))
          to label %54 unwind label %178

; <label>:54:                                     ; preds = %47
  %55 = invoke dereferenceable(4) i32* @_ZN9HashTableI6StringiEixERKS0_(%class.HashTable* %53, %class.String* dereferenceable(24) %10)
          to label %56 unwind label %182

; <label>:56:                                     ; preds = %54
  %57 = load i32, i32* %55, align 4
  %58 = load i8*, i8** %8, align 8
  %59 = bitcast %class.LandmarkErrorHandler* %4 to %class.ErrorHandler*
  %60 = invoke i32 @_ZNK5Lexer8Compound19check_pseudoelementEibPKcP12ErrorHandler(%"class.Lexer::Compound"* %50, i32 %57, i1 zeroext false, i8* %58, %class.ErrorHandler* %59)
          to label %61 unwind label %182

; <label>:61:                                     ; preds = %56
  %62 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0
  store i32 %60, i32* %62, align 4
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  %63 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 12
  %64 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %63, align 8
  %65 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 12
  %66 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %65, align 8
  %67 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %66, i32 0, i32 10
  invoke void @_ZN6StringC2EPKc(%class.String* %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0))
          to label %68 unwind label %178

; <label>:68:                                     ; preds = %61
  %69 = invoke dereferenceable(4) i32* @_ZN9HashTableI6StringiEixERKS0_(%class.HashTable* %67, %class.String* dereferenceable(24) %11)
          to label %70 unwind label %186

; <label>:70:                                     ; preds = %68
  %71 = load i32, i32* %69, align 4
  %72 = load i8*, i8** %8, align 8
  %73 = bitcast %class.LandmarkErrorHandler* %4 to %class.ErrorHandler*
  %74 = invoke i32 @_ZNK5Lexer8Compound19check_pseudoelementEibPKcP12ErrorHandler(%"class.Lexer::Compound"* %64, i32 %71, i1 zeroext true, i8* %72, %class.ErrorHandler* %73)
          to label %75 unwind label %186

; <label>:75:                                     ; preds = %70
  %76 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 1
  store i32 %74, i32* %76, align 4
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  %77 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 13
  %78 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %77, align 8
  %79 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %78, i32 0, i32 11
  %80 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 13
  %81 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %80, align 8
  %82 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %81, i32 0, i32 11
  %83 = invoke i32 @_ZNK6VectorIiE4sizeEv(%class.Vector.5* %82)
          to label %84 unwind label %178

; <label>:84:                                     ; preds = %75
  %85 = sub nsw i32 %83, 2
  %86 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %79, i32 %85)
          to label %87 unwind label %178

; <label>:87:                                     ; preds = %84
  %88 = load i32, i32* %86, align 4
  %89 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 12
  %90 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %89, align 8
  %91 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %90, i32 0, i32 10
  invoke void @_ZN6StringC2EPKc(%class.String* %12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0))
          to label %92 unwind label %178

; <label>:92:                                     ; preds = %87
  %93 = invoke dereferenceable(4) i32* @_ZN9HashTableI6StringiEixERKS0_(%class.HashTable* %91, %class.String* dereferenceable(24) %12)
          to label %94 unwind label %190

; <label>:94:                                     ; preds = %92
  store i32 %88, i32* %93, align 4
  call void @_ZN6StringD2Ev(%class.String* %12) #9
  %95 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 13
  %96 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %95, align 8
  %97 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %96, i32 0, i32 11
  %98 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 13
  %99 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %98, align 8
  %100 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %99, i32 0, i32 11
  %101 = invoke i32 @_ZNK6VectorIiE4sizeEv(%class.Vector.5* %100)
          to label %102 unwind label %178

; <label>:102:                                    ; preds = %94
  %103 = sub nsw i32 %101, 1
  %104 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %97, i32 %103)
          to label %105 unwind label %178

; <label>:105:                                    ; preds = %102
  %106 = load i32, i32* %104, align 4
  %107 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 12
  %108 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %107, align 8
  %109 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %108, i32 0, i32 10
  invoke void @_ZN6StringC2EPKc(%class.String* %13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0))
          to label %110 unwind label %178

; <label>:110:                                    ; preds = %105
  %111 = invoke dereferenceable(4) i32* @_ZN9HashTableI6StringiEixERKS0_(%class.HashTable* %109, %class.String* dereferenceable(24) %13)
          to label %112 unwind label %194

; <label>:112:                                    ; preds = %110
  store i32 %106, i32* %111, align 4
  call void @_ZN6StringD2Ev(%class.String* %13) #9
  %113 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 13
  %114 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %113, align 8
  %115 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %114, i32 0, i32 11
  %116 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 13
  %117 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %116, align 8
  %118 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %117, i32 0, i32 11
  %119 = invoke i32 @_ZNK6VectorIiE4sizeEv(%class.Vector.5* %118)
          to label %120 unwind label %178

; <label>:120:                                    ; preds = %112
  %121 = sub nsw i32 %119, 2
  invoke void @_ZN6VectorIiE6resizeEii(%class.Vector.5* %115, i32 %121, i32 0)
          to label %122 unwind label %178

; <label>:122:                                    ; preds = %120
  store i32 0, i32* %14, align 4
  br label %123

; <label>:123:                                    ; preds = %200, %122
  %124 = load i32, i32* %14, align 4
  %125 = icmp slt i32 %124, 2
  br i1 %125, label %126, label %203

; <label>:126:                                    ; preds = %123
  %127 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 13
  %128 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %127, align 8
  %129 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %128, i32 0, i32 11
  %130 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 13
  %131 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %130, align 8
  %132 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %131, i32 0, i32 12
  %133 = load i32, i32* %132, align 8
  %134 = add nsw i32 %133, 1
  %135 = load i32, i32* %14, align 4
  %136 = add nsw i32 %134, %135
  %137 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %129, i32 %136)
          to label %138 unwind label %178

; <label>:138:                                    ; preds = %126
  %139 = load i32, i32* %137, align 4
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %199

; <label>:141:                                    ; preds = %138
  %142 = load i32, i32* %14, align 4
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 %143
  %145 = load i32, i32* %144, align 4
  %146 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 13
  %147 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %146, align 8
  %148 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %147, i32 0, i32 11
  %149 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 13
  %150 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %149, align 8
  %151 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %150, i32 0, i32 12
  %152 = load i32, i32* %151, align 8
  %153 = add nsw i32 %152, 1
  %154 = load i32, i32* %14, align 4
  %155 = add nsw i32 %153, %154
  %156 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %148, i32 %155)
          to label %157 unwind label %178

; <label>:157:                                    ; preds = %141
  store i32 %145, i32* %156, align 4
  store i32 0, i32* %15, align 4
  br label %158

; <label>:158:                                    ; preds = %171, %157
  %159 = load i32, i32* %15, align 4
  %160 = load i32, i32* %14, align 4
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 %161
  %163 = load i32, i32* %162, align 4
  %164 = icmp slt i32 %159, %163
  br i1 %164, label %165, label %198

; <label>:165:                                    ; preds = %158
  %166 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 13
  %167 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %166, align 8
  %168 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %167, i32 0, i32 11
  %169 = load i32, i32* %15, align 4
  invoke void @_ZN6VectorIiE9push_backEi(%class.Vector.5* %168, i32 %169)
          to label %170 unwind label %178

; <label>:170:                                    ; preds = %165
  br label %171

; <label>:171:                                    ; preds = %170
  %172 = load i32, i32* %15, align 4
  %173 = add nsw i32 %172, 1
  store i32 %173, i32* %15, align 4
  br label %158

; <label>:174:                                    ; preds = %28
  %175 = landingpad { i8*, i32 }
          cleanup
  %176 = extractvalue { i8*, i32 } %175, 0
  store i8* %176, i8** %6, align 8
  %177 = extractvalue { i8*, i32 } %175, 1
  store i32 %177, i32* %7, align 4
  call void @_ZN6StringD2Ev(%class.String* %5) #9
  br label %206

; <label>:178:                                    ; preds = %203, %165, %141, %126, %120, %112, %105, %102, %94, %87, %84, %75, %61, %47, %41, %32
  %179 = landingpad { i8*, i32 }
          cleanup
  %180 = extractvalue { i8*, i32 } %179, 0
  store i8* %180, i8** %6, align 8
  %181 = extractvalue { i8*, i32 } %179, 1
  store i32 %181, i32* %7, align 4
  br label %205

; <label>:182:                                    ; preds = %56, %54
  %183 = landingpad { i8*, i32 }
          cleanup
  %184 = extractvalue { i8*, i32 } %183, 0
  store i8* %184, i8** %6, align 8
  %185 = extractvalue { i8*, i32 } %183, 1
  store i32 %185, i32* %7, align 4
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  br label %205

; <label>:186:                                    ; preds = %70, %68
  %187 = landingpad { i8*, i32 }
          cleanup
  %188 = extractvalue { i8*, i32 } %187, 0
  store i8* %188, i8** %6, align 8
  %189 = extractvalue { i8*, i32 } %187, 1
  store i32 %189, i32* %7, align 4
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  br label %205

; <label>:190:                                    ; preds = %92
  %191 = landingpad { i8*, i32 }
          cleanup
  %192 = extractvalue { i8*, i32 } %191, 0
  store i8* %192, i8** %6, align 8
  %193 = extractvalue { i8*, i32 } %191, 1
  store i32 %193, i32* %7, align 4
  call void @_ZN6StringD2Ev(%class.String* %12) #9
  br label %205

; <label>:194:                                    ; preds = %110
  %195 = landingpad { i8*, i32 }
          cleanup
  %196 = extractvalue { i8*, i32 } %195, 0
  store i8* %196, i8** %6, align 8
  %197 = extractvalue { i8*, i32 } %195, 1
  store i32 %197, i32* %7, align 4
  call void @_ZN6StringD2Ev(%class.String* %13) #9
  br label %205

; <label>:198:                                    ; preds = %158
  br label %199

; <label>:199:                                    ; preds = %198, %138
  br label %200

; <label>:200:                                    ; preds = %199
  %201 = load i32, i32* %14, align 4
  %202 = add nsw i32 %201, 1
  store i32 %202, i32* %14, align 4
  br label %123

; <label>:203:                                    ; preds = %123
  invoke void @_ZN5Lexer13yelement_typeEibb(%class.Lexer* %16, i32 -1, i1 zeroext false, i1 zeroext false)
          to label %204 unwind label %178

; <label>:204:                                    ; preds = %203
  call void @_ZN20LandmarkErrorHandlerD2Ev(%class.LandmarkErrorHandler* %4) #9
  ret void

; <label>:205:                                    ; preds = %194, %190, %186, %182, %178
  call void @_ZN20LandmarkErrorHandlerD2Ev(%class.LandmarkErrorHandler* %4) #9
  br label %206

; <label>:206:                                    ; preds = %205, %174
  %207 = load i8*, i8** %6, align 8
  %208 = load i32, i32* %7, align 4
  %209 = insertvalue { i8*, i32 } undef, i8* %207, 0
  %210 = insertvalue { i8*, i32 } %209, i32 %208, 1
  resume { i8*, i32 } %210
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer16yrequire_libraryERK6String(%class.Lexer*, %class.String* dereferenceable(24)) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.Lexer*, align 8
  %4 = alloca %class.String*, align 8
  %5 = alloca %class.String, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*
  %8 = alloca i32
  %9 = alloca %class.String, align 8
  %10 = alloca %class.String, align 8
  %11 = alloca %class.String, align 8
  %12 = alloca i32
  %13 = alloca %class.String*, align 8
  %14 = alloca %class.LandmarkErrorHandler, align 8
  %15 = alloca %class.String, align 8
  %16 = alloca i32, align 4
  %17 = alloca %class.String, align 8
  %18 = alloca %class.String, align 8
  %19 = alloca %"struct.Lexer::FileState", align 8
  %20 = alloca %"struct.Lexer::FileState", align 8
  %21 = alloca %"struct.Lexer::ParseState"*, align 8
  store %class.Lexer* %0, %class.Lexer** %3, align 8
  store %class.String* %1, %class.String** %4, align 8
  %22 = load %class.Lexer*, %class.Lexer** %3, align 8
  %23 = getelementptr inbounds %class.Lexer, %class.Lexer* %22, i32 0, i32 5
  %24 = load i32, i32* %23, align 8
  %25 = icmp ne i32 %24, 0
  %26 = xor i1 %25, true
  br i1 %26, label %27, label %28

; <label>:27:                                     ; preds = %2
  br label %30

; <label>:28:                                     ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i32 1861, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__._ZN5Lexer16yrequire_libraryERK6String, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %30

; <label>:30:                                     ; preds = %29, %27
  %31 = getelementptr inbounds %class.Lexer, %class.Lexer* %22, i32 0, i32 12
  %32 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %31, align 8
  %33 = call i32 @_ZNK5Lexer8Compound5depthEv(%"class.Lexer::Compound"* %32)
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %37

; <label>:35:                                     ; preds = %30
  %36 = call i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %22, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.88, i32 0, i32 0))
  br label %176

; <label>:37:                                     ; preds = %30
  %38 = getelementptr inbounds %class.Lexer, %class.Lexer* %22, i32 0, i32 1
  %39 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %38, i32 0, i32 3
  call void @_ZN6StringC2ERKS_(%class.String* %5, %class.String* dereferenceable(24) %39)
  %40 = invoke i32 @_ZNK6String10find_rightEci(%class.String* %5, i8 signext 47, i32 2147483647)
          to label %41 unwind label %49

; <label>:41:                                     ; preds = %37
  store i32 %40, i32* %6, align 4
  %42 = load i32, i32* %6, align 4
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %57

; <label>:44:                                     ; preds = %41
  %45 = load i32, i32* %6, align 4
  invoke void @_ZNK6String9substringEii(%class.String* sret %9, %class.String* %5, i32 0, i32 %45)
          to label %46 unwind label %49

; <label>:46:                                     ; preds = %44
  %47 = invoke dereferenceable(24) %class.String* @_ZN6StringaSEOS_(%class.String* %5, %class.String* dereferenceable(24) %9)
          to label %48 unwind label %53

; <label>:48:                                     ; preds = %46
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  br label %60

; <label>:49:                                     ; preds = %60, %57, %44, %37
  %50 = landingpad { i8*, i32 }
          cleanup
  %51 = extractvalue { i8*, i32 } %50, 0
  store i8* %51, i8** %7, align 8
  %52 = extractvalue { i8*, i32 } %50, 1
  store i32 %52, i32* %8, align 4
  br label %181

; <label>:53:                                     ; preds = %46
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %7, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %8, align 4
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  br label %181

; <label>:57:                                     ; preds = %41
  %58 = invoke dereferenceable(24) %class.String* @_ZN6StringaSEPKc(%class.String* %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.89, i32 0, i32 0))
          to label %59 unwind label %49

; <label>:59:                                     ; preds = %57
  br label %60

; <label>:60:                                     ; preds = %59, %48
  %61 = load %class.String*, %class.String** %4, align 8
  invoke void @_ZN6StringC2ERKS_(%class.String* %11, %class.String* dereferenceable(24) %5)
          to label %62 unwind label %49

; <label>:62:                                     ; preds = %60
  invoke void @_Z19clickpath_find_fileRK6StringPKcS_P12ErrorHandler(%class.String* sret %10, %class.String* dereferenceable(24) %61, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.90, i32 0, i32 0), %class.String* %11, %class.ErrorHandler* null)
          to label %63 unwind label %72

; <label>:63:                                     ; preds = %62
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  %64 = invoke zeroext i1 @_ZNK6StringntEv(%class.String* %10)
          to label %65 unwind label %76

; <label>:65:                                     ; preds = %63
  br i1 %64, label %66, label %80

; <label>:66:                                     ; preds = %65
  %67 = load %class.String*, %class.String** %4, align 8
  %68 = invoke i8* @_ZNK6String5c_strEv(%class.String* %67)
          to label %69 unwind label %76

; <label>:69:                                     ; preds = %66
  %70 = invoke i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %22, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.91, i32 0, i32 0), i8* %68)
          to label %71 unwind label %76

; <label>:71:                                     ; preds = %69
  store i32 1, i32* %12, align 4
  br label %174

; <label>:72:                                     ; preds = %62
  %73 = landingpad { i8*, i32 }
          cleanup
  %74 = extractvalue { i8*, i32 } %73, 0
  store i8* %74, i8** %7, align 8
  %75 = extractvalue { i8*, i32 } %73, 1
  store i32 %75, i32* %8, align 4
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  br label %181

; <label>:76:                                     ; preds = %101, %99, %90, %84, %80, %69, %66, %63
  %77 = landingpad { i8*, i32 }
          cleanup
  %78 = extractvalue { i8*, i32 } %77, 0
  store i8* %78, i8** %7, align 8
  %79 = extractvalue { i8*, i32 } %77, 1
  store i32 %79, i32* %8, align 4
  br label %180

; <label>:80:                                     ; preds = %65
  %81 = getelementptr inbounds %class.Lexer, %class.Lexer* %22, i32 0, i32 18
  %82 = invoke %class.String* @_ZN6VectorI6StringE5beginEv(%class.Vector.0* %81)
          to label %83 unwind label %76

; <label>:83:                                     ; preds = %80
  store %class.String* %82, %class.String** %13, align 8
  br label %84

; <label>:84:                                     ; preds = %96, %83
  %85 = load %class.String*, %class.String** %13, align 8
  %86 = getelementptr inbounds %class.Lexer, %class.Lexer* %22, i32 0, i32 18
  %87 = invoke %class.String* @_ZN6VectorI6StringE3endEv(%class.Vector.0* %86)
          to label %88 unwind label %76

; <label>:88:                                     ; preds = %84
  %89 = icmp ne %class.String* %85, %87
  br i1 %89, label %90, label %99

; <label>:90:                                     ; preds = %88
  %91 = load %class.String*, %class.String** %13, align 8
  %92 = invoke zeroext i1 @_ZeqRK6StringS1_(%class.String* dereferenceable(24) %91, %class.String* dereferenceable(24) %10)
          to label %93 unwind label %76

; <label>:93:                                     ; preds = %90
  br i1 %92, label %94, label %95

; <label>:94:                                     ; preds = %93
  store i32 1, i32* %12, align 4
  br label %174

; <label>:95:                                     ; preds = %93
  br label %96

; <label>:96:                                     ; preds = %95
  %97 = load %class.String*, %class.String** %13, align 8
  %98 = getelementptr inbounds %class.String, %class.String* %97, i32 1
  store %class.String* %98, %class.String** %13, align 8
  br label %84

; <label>:99:                                     ; preds = %88
  %100 = getelementptr inbounds %class.Lexer, %class.Lexer* %22, i32 0, i32 18
  invoke void @_ZN6VectorI6StringE9push_backERKS0_(%class.Vector.0* %100, %class.String* dereferenceable(24) %10)
          to label %101 unwind label %76

; <label>:101:                                    ; preds = %99
  %102 = getelementptr inbounds %class.Lexer, %class.Lexer* %22, i32 0, i32 19
  %103 = load %class.ErrorHandler*, %class.ErrorHandler** %102, align 8
  %104 = getelementptr inbounds %class.Lexer, %class.Lexer* %22, i32 0, i32 1
  invoke void @_ZNK5Lexer9FileState8landmarkEv(%class.String* sret %15, %"struct.Lexer::FileState"* %104)
          to label %105 unwind label %76

; <label>:105:                                    ; preds = %101
  invoke void @_ZN20LandmarkErrorHandlerC1EP12ErrorHandlerRK6String(%class.LandmarkErrorHandler* %14, %class.ErrorHandler* %103, %class.String* dereferenceable(24) %15)
          to label %106 unwind label %119

; <label>:106:                                    ; preds = %105
  call void @_ZN6StringD2Ev(%class.String* %15) #9
  %107 = bitcast %class.LandmarkErrorHandler* %14 to %class.ErrorHandler*
  %108 = invoke i32 @_ZNK12ErrorHandler7nerrorsEv(%class.ErrorHandler* %107)
          to label %109 unwind label %123

; <label>:109:                                    ; preds = %106
  store i32 %108, i32* %16, align 4
  invoke void @_ZN6StringC2ERKS_(%class.String* %18, %class.String* dereferenceable(24) %10)
          to label %110 unwind label %123

; <label>:110:                                    ; preds = %109
  %111 = bitcast %class.LandmarkErrorHandler* %14 to %class.ErrorHandler*
  invoke void @_Z11file_string6StringP12ErrorHandler(%class.String* sret %17, %class.String* %18, %class.ErrorHandler* %111)
          to label %112 unwind label %127

; <label>:112:                                    ; preds = %110
  call void @_ZN6StringD2Ev(%class.String* %18) #9
  %113 = bitcast %class.LandmarkErrorHandler* %14 to %class.ErrorHandler*
  %114 = invoke i32 @_ZNK12ErrorHandler7nerrorsEv(%class.ErrorHandler* %113)
          to label %115 unwind label %131

; <label>:115:                                    ; preds = %112
  %116 = load i32, i32* %16, align 4
  %117 = icmp ne i32 %114, %116
  br i1 %117, label %118, label %135

; <label>:118:                                    ; preds = %115
  store i32 1, i32* %12, align 4
  br label %173

; <label>:119:                                    ; preds = %105
  %120 = landingpad { i8*, i32 }
          cleanup
  %121 = extractvalue { i8*, i32 } %120, 0
  store i8* %121, i8** %7, align 8
  %122 = extractvalue { i8*, i32 } %120, 1
  store i32 %122, i32* %8, align 4
  call void @_ZN6StringD2Ev(%class.String* %15) #9
  br label %180

; <label>:123:                                    ; preds = %109, %106
  %124 = landingpad { i8*, i32 }
          cleanup
  %125 = extractvalue { i8*, i32 } %124, 0
  store i8* %125, i8** %7, align 8
  %126 = extractvalue { i8*, i32 } %124, 1
  store i32 %126, i32* %8, align 4
  br label %179

; <label>:127:                                    ; preds = %110
  %128 = landingpad { i8*, i32 }
          cleanup
  %129 = extractvalue { i8*, i32 } %128, 0
  store i8* %129, i8** %7, align 8
  %130 = extractvalue { i8*, i32 } %128, 1
  store i32 %130, i32* %8, align 4
  call void @_ZN6StringD2Ev(%class.String* %18) #9
  br label %179

; <label>:131:                                    ; preds = %135, %112
  %132 = landingpad { i8*, i32 }
          cleanup
  %133 = extractvalue { i8*, i32 } %132, 0
  store i8* %133, i8** %7, align 8
  %134 = extractvalue { i8*, i32 } %132, 1
  store i32 %134, i32* %8, align 4
  br label %178

; <label>:135:                                    ; preds = %115
  %136 = getelementptr inbounds %class.Lexer, %class.Lexer* %22, i32 0, i32 1
  invoke void @_ZN5Lexer9FileStateC2ERKS0_(%"struct.Lexer::FileState"* %19, %"struct.Lexer::FileState"* dereferenceable(96) %136)
          to label %137 unwind label %131

; <label>:137:                                    ; preds = %135
  invoke void @_ZN5Lexer9FileStateC1ERK6StringS3_(%"struct.Lexer::FileState"* %20, %class.String* dereferenceable(24) %17, %class.String* dereferenceable(24) %10)
          to label %138 unwind label %155

; <label>:138:                                    ; preds = %137
  %139 = getelementptr inbounds %class.Lexer, %class.Lexer* %22, i32 0, i32 1
  %140 = invoke dereferenceable(96) %"struct.Lexer::FileState"* @_ZN5Lexer9FileStateaSEOS0_(%"struct.Lexer::FileState"* %139, %"struct.Lexer::FileState"* dereferenceable(96) %20)
          to label %141 unwind label %159

; <label>:141:                                    ; preds = %138
  call void @_ZN5Lexer9FileStateD2Ev(%"struct.Lexer::FileState"* %20) #9
  %142 = getelementptr inbounds %class.Lexer, %class.Lexer* %22, i32 0, i32 13
  %143 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %142, align 8
  store %"struct.Lexer::ParseState"* %143, %"struct.Lexer::ParseState"** %21, align 8
  %144 = invoke i8* @_Znwm(i64 216) #15
          to label %145 unwind label %155

; <label>:145:                                    ; preds = %141
  %146 = bitcast i8* %144 to %"struct.Lexer::ParseState"*
  invoke void @_ZN5Lexer10ParseStateC2EiPS0_(%"struct.Lexer::ParseState"* %146, i32 0, %"struct.Lexer::ParseState"* null)
          to label %147 unwind label %163

; <label>:147:                                    ; preds = %145
  %148 = getelementptr inbounds %class.Lexer, %class.Lexer* %22, i32 0, i32 13
  store %"struct.Lexer::ParseState"* %146, %"struct.Lexer::ParseState"** %148, align 8
  br label %149

; <label>:149:                                    ; preds = %154, %147
  %150 = invoke zeroext i1 @_ZNK5Lexer5ydoneEv(%class.Lexer* %22)
          to label %151 unwind label %155

; <label>:151:                                    ; preds = %149
  %152 = xor i1 %150, true
  br i1 %152, label %153, label %167

; <label>:153:                                    ; preds = %151
  invoke void @_ZN5Lexer5ystepEv(%class.Lexer* %22)
          to label %154 unwind label %155

; <label>:154:                                    ; preds = %153
  br label %149

; <label>:155:                                    ; preds = %167, %153, %149, %141, %137
  %156 = landingpad { i8*, i32 }
          cleanup
  %157 = extractvalue { i8*, i32 } %156, 0
  store i8* %157, i8** %7, align 8
  %158 = extractvalue { i8*, i32 } %156, 1
  store i32 %158, i32* %8, align 4
  br label %177

; <label>:159:                                    ; preds = %138
  %160 = landingpad { i8*, i32 }
          cleanup
  %161 = extractvalue { i8*, i32 } %160, 0
  store i8* %161, i8** %7, align 8
  %162 = extractvalue { i8*, i32 } %160, 1
  store i32 %162, i32* %8, align 4
  call void @_ZN5Lexer9FileStateD2Ev(%"struct.Lexer::FileState"* %20) #9
  br label %177

; <label>:163:                                    ; preds = %145
  %164 = landingpad { i8*, i32 }
          cleanup
  %165 = extractvalue { i8*, i32 } %164, 0
  store i8* %165, i8** %7, align 8
  %166 = extractvalue { i8*, i32 } %164, 1
  store i32 %166, i32* %8, align 4
  call void @_ZdlPv(i8* %144) #14
  br label %177

; <label>:167:                                    ; preds = %151
  %168 = getelementptr inbounds %class.Lexer, %class.Lexer* %22, i32 0, i32 1
  %169 = invoke dereferenceable(96) %"struct.Lexer::FileState"* @_ZN5Lexer9FileStateaSERKS0_(%"struct.Lexer::FileState"* %168, %"struct.Lexer::FileState"* dereferenceable(96) %19)
          to label %170 unwind label %155

; <label>:170:                                    ; preds = %167
  %171 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %21, align 8
  %172 = getelementptr inbounds %class.Lexer, %class.Lexer* %22, i32 0, i32 13
  store %"struct.Lexer::ParseState"* %171, %"struct.Lexer::ParseState"** %172, align 8
  call void @_ZN5Lexer9FileStateD2Ev(%"struct.Lexer::FileState"* %19) #9
  store i32 0, i32* %12, align 4
  br label %173

; <label>:173:                                    ; preds = %170, %118
  call void @_ZN6StringD2Ev(%class.String* %17) #9
  call void @_ZN20LandmarkErrorHandlerD2Ev(%class.LandmarkErrorHandler* %14) #9
  br label %174

; <label>:174:                                    ; preds = %173, %94, %71
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  call void @_ZN6StringD2Ev(%class.String* %5) #9
  %175 = load i32, i32* %12, align 4
  switch i32 %175, label %187 [
    i32 0, label %176
    i32 1, label %176
  ]

; <label>:176:                                    ; preds = %35, %174, %174
  ret void

; <label>:177:                                    ; preds = %163, %159, %155
  call void @_ZN5Lexer9FileStateD2Ev(%"struct.Lexer::FileState"* %19) #9
  br label %178

; <label>:178:                                    ; preds = %177, %131
  call void @_ZN6StringD2Ev(%class.String* %17) #9
  br label %179

; <label>:179:                                    ; preds = %178, %127, %123
  call void @_ZN20LandmarkErrorHandlerD2Ev(%class.LandmarkErrorHandler* %14) #9
  br label %180

; <label>:180:                                    ; preds = %179, %119, %76
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  br label %181

; <label>:181:                                    ; preds = %180, %72, %53, %49
  call void @_ZN6StringD2Ev(%class.String* %5) #9
  br label %182

; <label>:182:                                    ; preds = %181
  %183 = load i8*, i8** %7, align 8
  %184 = load i32, i32* %8, align 4
  %185 = insertvalue { i8*, i32 } undef, i8* %183, 0
  %186 = insertvalue { i8*, i32 } %185, i32 %184, 1
  resume { i8*, i32 } %186

; <label>:187:                                    ; preds = %174
  unreachable
}

declare void @_Z19clickpath_find_fileRK6StringPKcS_P12ErrorHandler(%class.String* sret, %class.String* dereferenceable(24), i8*, %class.String*, %class.ErrorHandler*) #3

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr %class.String* @_ZN6VectorI6StringE5beginEv(%class.Vector.0*) #0 comdat align 2 {
  %2 = alloca %class.Vector.0*, align 8
  store %class.Vector.0* %0, %class.Vector.0** %2, align 8
  %3 = load %class.Vector.0*, %class.Vector.0** %2, align 8
  %4 = getelementptr inbounds %class.Vector.0, %class.Vector.0* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %4, i32 0, i32 0
  %6 = load %class.String*, %class.String** %5, align 8
  ret %class.String* %6
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr %class.String* @_ZN6VectorI6StringE3endEv(%class.Vector.0*) #0 comdat align 2 {
  %2 = alloca %class.Vector.0*, align 8
  store %class.Vector.0* %0, %class.Vector.0** %2, align 8
  %3 = load %class.Vector.0*, %class.Vector.0** %2, align 8
  %4 = getelementptr inbounds %class.Vector.0, %class.Vector.0* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %4, i32 0, i32 0
  %6 = load %class.String*, %class.String** %5, align 8
  %7 = getelementptr inbounds %class.Vector.0, %class.Vector.0* %3, i32 0, i32 0
  %8 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %class.String, %class.String* %6, i64 %10
  ret %class.String* %11
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr zeroext i1 @_ZeqRK6StringS1_(%class.String* dereferenceable(24), %class.String* dereferenceable(24)) #2 comdat {
  %3 = alloca %class.String*, align 8
  %4 = alloca %class.String*, align 8
  store %class.String* %0, %class.String** %3, align 8
  store %class.String* %1, %class.String** %4, align 8
  %5 = load %class.String*, %class.String** %3, align 8
  %6 = load %class.String*, %class.String** %4, align 8
  %7 = call i8* @_ZNK6String4dataEv(%class.String* %6)
  %8 = load %class.String*, %class.String** %4, align 8
  %9 = call i32 @_ZNK6String6lengthEv(%class.String* %8)
  %10 = call zeroext i1 @_ZNK6String6equalsEPKci(%class.String* %5, i8* %7, i32 %9)
  ret i1 %10
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr i32 @_ZNK12ErrorHandler7nerrorsEv(%class.ErrorHandler*) #0 comdat align 2 {
  %2 = alloca %class.ErrorHandler*, align 8
  store %class.ErrorHandler* %0, %class.ErrorHandler** %2, align 8
  %3 = load %class.ErrorHandler*, %class.ErrorHandler** %2, align 8
  %4 = getelementptr inbounds %class.ErrorHandler, %class.ErrorHandler* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

declare void @_Z11file_string6StringP12ErrorHandler(%class.String* sret, %class.String*, %class.ErrorHandler*) #3

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN5Lexer9FileStateC2ERKS0_(%"struct.Lexer::FileState"*, %"struct.Lexer::FileState"* dereferenceable(96)) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.Lexer::FileState"*, align 8
  %4 = alloca %"struct.Lexer::FileState"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"struct.Lexer::FileState"* %0, %"struct.Lexer::FileState"** %3, align 8
  store %"struct.Lexer::FileState"* %1, %"struct.Lexer::FileState"** %4, align 8
  %7 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %3, align 8
  %8 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %7, i32 0, i32 0
  %9 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %4, align 8
  %10 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %9, i32 0, i32 0
  call void @_ZN6StringC2ERKS_(%class.String* %8, %class.String* dereferenceable(24) %10)
  %11 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %7, i32 0, i32 1
  %12 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %4, align 8
  %13 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %12, i32 0, i32 1
  %14 = bitcast i8** %11 to i8*
  %15 = bitcast i8** %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 16, i32 8, i1 false)
  %16 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %7, i32 0, i32 3
  %17 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %4, align 8
  %18 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %17, i32 0, i32 3
  invoke void @_ZN6StringC2ERKS_(%class.String* %16, %class.String* dereferenceable(24) %18)
          to label %19 unwind label %28

; <label>:19:                                     ; preds = %2
  %20 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %7, i32 0, i32 4
  %21 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %4, align 8
  %22 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %21, i32 0, i32 4
  invoke void @_ZN6StringC2ERKS_(%class.String* %20, %class.String* dereferenceable(24) %22)
          to label %23 unwind label %32

; <label>:23:                                     ; preds = %19
  %24 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %7, i32 0, i32 5
  %25 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %4, align 8
  %26 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %25, i32 0, i32 5
  %27 = load i32, i32* %26, align 8
  store i32 %27, i32* %24, align 8
  ret void

; <label>:28:                                     ; preds = %2
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %5, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %6, align 4
  br label %36

; <label>:32:                                     ; preds = %19
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  store i8* %34, i8** %5, align 8
  %35 = extractvalue { i8*, i32 } %33, 1
  store i32 %35, i32* %6, align 4
  call void @_ZN6StringD2Ev(%class.String* %16) #9
  br label %36

; <label>:36:                                     ; preds = %32, %28
  call void @_ZN6StringD2Ev(%class.String* %8) #9
  br label %37

; <label>:37:                                     ; preds = %36
  %38 = load i8*, i8** %5, align 8
  %39 = load i32, i32* %6, align 4
  %40 = insertvalue { i8*, i32 } undef, i8* %38, 0
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1
  resume { i8*, i32 } %41
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr zeroext i1 @_ZNK5Lexer5ydoneEv(%class.Lexer*) #0 comdat align 2 {
  %2 = alloca %class.Lexer*, align 8
  store %class.Lexer* %0, %class.Lexer** %2, align 8
  %3 = load %class.Lexer*, %class.Lexer** %2, align 8
  %4 = getelementptr inbounds %class.Lexer, %class.Lexer* %3, i32 0, i32 13
  %5 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %4, align 8
  %6 = icmp ne %"struct.Lexer::ParseState"* %5, null
  %7 = xor i1 %6, true
  ret i1 %7
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer5ystepEv(%class.Lexer*) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Lexer*, align 8
  %3 = alloca %class.String, align 8
  %4 = alloca i1, align 1
  %5 = alloca i8*
  %6 = alloca i32
  store %class.Lexer* %0, %class.Lexer** %2, align 8
  %7 = load %class.Lexer*, %class.Lexer** %2, align 8
  %8 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 13
  %9 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %8, align 8
  %10 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %9, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %82 [
    i32 0, label %12
    i32 1, label %13
    i32 2, label %16
    i32 3, label %17
    i32 4, label %18
    i32 5, label %19
    i32 6, label %81
    i32 7, label %81
    i32 8, label %81
  ]

; <label>:12:                                     ; preds = %1
  call void @_ZN5Lexer10ystatementEv(%class.Lexer* %7)
  br label %82

; <label>:13:                                     ; preds = %1
  %14 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 13
  %15 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %14, align 8
  call void @_ZN5Lexer10ParseState19enter_element_stateEv(%"struct.Lexer::ParseState"* %15)
  br label %82

; <label>:16:                                     ; preds = %1
  call void @_ZN5Lexer13yelement_nameEv(%class.Lexer* %7)
  br label %82

; <label>:17:                                     ; preds = %1
  call void @_ZN5Lexer13yelement_nextEv(%class.Lexer* %7)
  br label %82

; <label>:18:                                     ; preds = %1
  call void @_ZN5Lexer21yconnection_connectorEv(%class.Lexer* %7)
  br label %82

; <label>:19:                                     ; preds = %1
  %20 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 13
  %21 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %20, align 8
  %22 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %21, i32 0, i32 2
  call void @_ZN5Lexer25yconnection_check_uselessERK6VectorIiEb(%class.Lexer* %7, %class.Vector.5* dereferenceable(16) %22, i1 zeroext true)
  %23 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 13
  %24 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %23, align 8
  %25 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %24, i32 0, i32 2
  %26 = call i32 @_ZNK6VectorIiE4sizeEv(%class.Vector.5* %25)
  %27 = icmp sgt i32 %26, 0
  store i1 false, i1* %4, align 1
  br i1 %27, label %28, label %59

; <label>:28:                                     ; preds = %19
  %29 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 13
  %30 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %29, align 8
  %31 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %30, i32 0, i32 2
  %32 = call i32 @_ZNK6VectorIiE4sizeEv(%class.Vector.5* %31)
  %33 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 13
  %34 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %33, align 8
  %35 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %34, i32 0, i32 2
  %36 = call dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %35, i32 1)
  %37 = load i32, i32* %36, align 4
  %38 = add nsw i32 3, %37
  %39 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 13
  %40 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %39, align 8
  %41 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %40, i32 0, i32 2
  %42 = call dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %41, i32 2)
  %43 = load i32, i32* %42, align 4
  %44 = add nsw i32 %38, %43
  %45 = icmp eq i32 %32, %44
  br i1 %45, label %46, label %59

; <label>:46:                                     ; preds = %28
  %47 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 13
  %48 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %47, align 8
  %49 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %48, i32 0, i32 2
  %50 = call dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %49, i32 0)
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 12
  %53 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %52, align 8
  %54 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %53, i32 0, i32 10
  call void @_ZN6StringC2EPKc(%class.String* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0))
  store i1 true, i1* %4, align 1
  %55 = invoke dereferenceable(4) i32* @_ZN9HashTableI6StringiEixERKS0_(%class.HashTable* %54, %class.String* dereferenceable(24) %3)
          to label %56 unwind label %74

; <label>:56:                                     ; preds = %46
  %57 = load i32, i32* %55, align 4
  %58 = icmp eq i32 %51, %57
  br label %59

; <label>:59:                                     ; preds = %56, %28, %19
  %60 = phi i1 [ false, %28 ], [ false, %19 ], [ %58, %56 ]
  %61 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 13
  %62 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %61, align 8
  %63 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %62, i32 0, i32 9
  %64 = zext i1 %60 to i8
  store i8 %64, i8* %63, align 2
  %65 = load i1, i1* %4, align 1
  br i1 %65, label %66, label %67

; <label>:66:                                     ; preds = %59
  call void @_ZN6StringD2Ev(%class.String* %3) #9
  br label %67

; <label>:67:                                     ; preds = %66, %59
  %68 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 13
  %69 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %68, align 8
  %70 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %69, i32 0, i32 2
  call void @_ZN6VectorIiE5clearEv(%class.Vector.5* %70)
  %71 = getelementptr inbounds %class.Lexer, %class.Lexer* %7, i32 0, i32 13
  %72 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %71, align 8
  %73 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %72, i32 0, i32 0
  store i32 0, i32* %73, align 8
  br label %82

; <label>:74:                                     ; preds = %46
  %75 = landingpad { i8*, i32 }
          cleanup
  %76 = extractvalue { i8*, i32 } %75, 0
  store i8* %76, i8** %5, align 8
  %77 = extractvalue { i8*, i32 } %75, 1
  store i32 %77, i32* %6, align 4
  %78 = load i1, i1* %4, align 1
  br i1 %78, label %79, label %80

; <label>:79:                                     ; preds = %74
  call void @_ZN6StringD2Ev(%class.String* %3) #9
  br label %80

; <label>:80:                                     ; preds = %79, %74
  br label %83

; <label>:81:                                     ; preds = %1, %1, %1
  call void @_ZN5Lexer14ycompound_nextEv(%class.Lexer* %7)
  br label %82

; <label>:82:                                     ; preds = %1, %81, %67, %18, %17, %16, %13, %12
  ret void

; <label>:83:                                     ; preds = %80
  %84 = load i8*, i8** %5, align 8
  %85 = load i32, i32* %6, align 4
  %86 = insertvalue { i8*, i32 } undef, i8* %84, 0
  %87 = insertvalue { i8*, i32 } %86, i32 %85, 1
  resume { i8*, i32 } %87
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dereferenceable(96) %"struct.Lexer::FileState"* @_ZN5Lexer9FileStateaSERKS0_(%"struct.Lexer::FileState"*, %"struct.Lexer::FileState"* dereferenceable(96)) #2 comdat align 2 {
  %3 = alloca %"struct.Lexer::FileState"*, align 8
  %4 = alloca %"struct.Lexer::FileState"*, align 8
  store %"struct.Lexer::FileState"* %0, %"struct.Lexer::FileState"** %3, align 8
  store %"struct.Lexer::FileState"* %1, %"struct.Lexer::FileState"** %4, align 8
  %5 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %3, align 8
  %6 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %5, i32 0, i32 0
  %7 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %4, align 8
  %8 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %7, i32 0, i32 0
  %9 = call dereferenceable(24) %class.String* @_ZN6StringaSERKS_(%class.String* %6, %class.String* dereferenceable(24) %8)
  %10 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %5, i32 0, i32 1
  %11 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %4, align 8
  %12 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %11, i32 0, i32 1
  %13 = bitcast i8** %10 to i8*
  %14 = bitcast i8** %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 16, i32 8, i1 false)
  %15 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %5, i32 0, i32 3
  %16 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %4, align 8
  %17 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %16, i32 0, i32 3
  %18 = call dereferenceable(24) %class.String* @_ZN6StringaSERKS_(%class.String* %15, %class.String* dereferenceable(24) %17)
  %19 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %5, i32 0, i32 4
  %20 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %4, align 8
  %21 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %20, i32 0, i32 4
  %22 = call dereferenceable(24) %class.String* @_ZN6StringaSERKS_(%class.String* %19, %class.String* dereferenceable(24) %21)
  %23 = load %"struct.Lexer::FileState"*, %"struct.Lexer::FileState"** %4, align 8
  %24 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %23, i32 0, i32 5
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %5, i32 0, i32 5
  store i32 %25, i32* %26, align 8
  ret %"struct.Lexer::FileState"* %5
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer8yrequireEv(%class.Lexer*) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Lexer*, align 8
  %3 = alloca %class.String, align 8
  %4 = alloca i8*
  %5 = alloca i32
  %6 = alloca %class.Vector.0, align 8
  %7 = alloca %class.String, align 8
  %8 = alloca %class.String, align 8
  %9 = alloca %class.String, align 8
  %10 = alloca i32, align 4
  %11 = alloca %class.Vector.0, align 8
  %12 = alloca i32
  %13 = alloca %class.String, align 8
  %14 = alloca %class.String, align 8
  %15 = alloca %class.String, align 8
  %16 = alloca %class.String, align 8
  store %class.Lexer* %0, %class.Lexer** %2, align 8
  %17 = load %class.Lexer*, %class.Lexer** %2, align 8
  %18 = call zeroext i1 @_ZN5Lexer6expectEib(%class.Lexer* %17, i32 40, i1 zeroext false)
  br i1 %18, label %20, label %19

; <label>:19:                                     ; preds = %1
  br label %188

; <label>:20:                                     ; preds = %1
  call void @_ZN5Lexer10lex_configEv(%class.String* sret %3, %class.Lexer* %17)
  %21 = invoke zeroext i1 @_ZN5Lexer6expectEib(%class.Lexer* %17, i32 41, i1 zeroext false)
          to label %22 unwind label %45

; <label>:22:                                     ; preds = %20
  %23 = invoke zeroext i1 @_ZN5Lexer6expectEib(%class.Lexer* %17, i32 59, i1 zeroext true)
          to label %24 unwind label %45

; <label>:24:                                     ; preds = %22
  invoke void @_ZN6VectorI6StringEC2Ev(%class.Vector.0* %6)
          to label %25 unwind label %45

; <label>:25:                                     ; preds = %24
  invoke void @_Z9cp_argvecRK6StringR6VectorIS_E(%class.String* dereferenceable(24) %3, %class.Vector.0* dereferenceable(16) %6)
          to label %26 unwind label %49

; <label>:26:                                     ; preds = %25
  invoke void @_ZN6String11make_stableEPKci(%class.String* sret %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.92, i32 0, i32 0), i32 14)
          to label %27 unwind label %49

; <label>:27:                                     ; preds = %26
  invoke void @_ZN6String11make_stableEPKci(%class.String* sret %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.93, i32 0, i32 0), i32 7)
          to label %28 unwind label %53

; <label>:28:                                     ; preds = %27
  invoke void @_ZN6String11make_stableEPKci(%class.String* sret %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.94, i32 0, i32 0), i32 7)
          to label %29 unwind label %57

; <label>:29:                                     ; preds = %28
  store i32 0, i32* %10, align 4
  br label %30

; <label>:30:                                     ; preds = %181, %29
  %31 = load i32, i32* %10, align 4
  %32 = invoke i32 @_ZNK6VectorI6StringE4sizeEv(%class.Vector.0* %6)
          to label %33 unwind label %61

; <label>:33:                                     ; preds = %30
  %34 = icmp slt i32 %31, %32
  br i1 %34, label %35, label %187

; <label>:35:                                     ; preds = %33
  invoke void @_ZN6VectorI6StringEC2Ev(%class.Vector.0* %11)
          to label %36 unwind label %61

; <label>:36:                                     ; preds = %35
  %37 = load i32, i32* %10, align 4
  %38 = invoke dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %6, i32 %37)
          to label %39 unwind label %65

; <label>:39:                                     ; preds = %36
  invoke void @_Z11cp_spacevecRK6StringR6VectorIS_E(%class.String* dereferenceable(24) %38, %class.Vector.0* dereferenceable(16) %11)
          to label %40 unwind label %65

; <label>:40:                                     ; preds = %39
  %41 = invoke i32 @_ZNK6VectorI6StringE4sizeEv(%class.Vector.0* %11)
          to label %42 unwind label %65

; <label>:42:                                     ; preds = %40
  %43 = icmp eq i32 %41, 0
  br i1 %43, label %44, label %69

; <label>:44:                                     ; preds = %42
  store i32 4, i32* %12, align 4
  br label %178

; <label>:45:                                     ; preds = %24, %22, %20
  %46 = landingpad { i8*, i32 }
          cleanup
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %4, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %5, align 4
  br label %193

; <label>:49:                                     ; preds = %26, %25
  %50 = landingpad { i8*, i32 }
          cleanup
  %51 = extractvalue { i8*, i32 } %50, 0
  store i8* %51, i8** %4, align 8
  %52 = extractvalue { i8*, i32 } %50, 1
  store i32 %52, i32* %5, align 4
  br label %192

; <label>:53:                                     ; preds = %27
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %4, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %5, align 4
  br label %191

; <label>:57:                                     ; preds = %28
  %58 = landingpad { i8*, i32 }
          cleanup
  %59 = extractvalue { i8*, i32 } %58, 0
  store i8* %59, i8** %4, align 8
  %60 = extractvalue { i8*, i32 } %58, 1
  store i32 %60, i32* %5, align 4
  br label %190

; <label>:61:                                     ; preds = %35, %30
  %62 = landingpad { i8*, i32 }
          cleanup
  %63 = extractvalue { i8*, i32 } %62, 0
  store i8* %63, i8** %4, align 8
  %64 = extractvalue { i8*, i32 } %62, 1
  store i32 %64, i32* %5, align 4
  br label %189

; <label>:65:                                     ; preds = %69, %40, %39, %36
  %66 = landingpad { i8*, i32 }
          cleanup
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %4, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %5, align 4
  br label %186

; <label>:69:                                     ; preds = %42
  invoke void @_ZN6StringC2Ev(%class.String* %13)
          to label %70 unwind label %65

; <label>:70:                                     ; preds = %69
  invoke void @_ZN6StringC2Ev(%class.String* %14)
          to label %71 unwind label %97

; <label>:71:                                     ; preds = %70
  %72 = invoke dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %11, i32 0)
          to label %73 unwind label %101

; <label>:73:                                     ; preds = %71
  %74 = invoke zeroext i1 @_ZN7WordArg5parseERK6StringRS0_RK10ArgContext(%class.String* dereferenceable(24) %72, %class.String* dereferenceable(24) %13, %class.ArgContext* dereferenceable(32) @blank_args)
          to label %75 unwind label %101

; <label>:75:                                     ; preds = %73
  %76 = invoke { i64, i64 } @_ZNK6StringcvMS_KFivEEv(%class.String* %13)
          to label %77 unwind label %101

; <label>:77:                                     ; preds = %75
  %78 = extractvalue { i64, i64 } %76, 0
  %79 = icmp ne i64 %78, 0
  br i1 %79, label %80, label %105

; <label>:80:                                     ; preds = %77
  %81 = invoke zeroext i1 @_ZneRK6StringS1_(%class.String* dereferenceable(24) %13, %class.String* dereferenceable(24) %7)
          to label %82 unwind label %101

; <label>:82:                                     ; preds = %80
  br i1 %81, label %83, label %105

; <label>:83:                                     ; preds = %82
  %84 = invoke zeroext i1 @_ZneRK6StringS1_(%class.String* dereferenceable(24) %13, %class.String* dereferenceable(24) %8)
          to label %85 unwind label %101

; <label>:85:                                     ; preds = %83
  br i1 %84, label %86, label %105

; <label>:86:                                     ; preds = %85
  %87 = invoke zeroext i1 @_ZneRK6StringS1_(%class.String* dereferenceable(24) %13, %class.String* dereferenceable(24) %9)
          to label %88 unwind label %101

; <label>:88:                                     ; preds = %86
  br i1 %87, label %89, label %105

; <label>:89:                                     ; preds = %88
  %90 = invoke i32 @_ZNK6VectorI6StringE4sizeEv(%class.Vector.0* %11)
          to label %91 unwind label %101

; <label>:91:                                     ; preds = %89
  %92 = icmp eq i32 %90, 1
  br i1 %92, label %93, label %105

; <label>:93:                                     ; preds = %91
  invoke void @_ZN6VectorI6StringE9push_backERKS0_(%class.Vector.0* %11, %class.String* dereferenceable(24) %13)
          to label %94 unwind label %101

; <label>:94:                                     ; preds = %93
  %95 = invoke dereferenceable(24) %class.String* @_ZN6StringaSERKS_(%class.String* %13, %class.String* dereferenceable(24) %8)
          to label %96 unwind label %101

; <label>:96:                                     ; preds = %94
  br label %105

; <label>:97:                                     ; preds = %70
  %98 = landingpad { i8*, i32 }
          cleanup
  %99 = extractvalue { i8*, i32 } %98, 0
  store i8* %99, i8** %4, align 8
  %100 = extractvalue { i8*, i32 } %98, 1
  store i32 %100, i32* %5, align 4
  br label %185

; <label>:101:                                    ; preds = %174, %172, %151, %143, %141, %138, %136, %132, %129, %125, %123, %119, %116, %112, %108, %105, %94, %93, %89, %86, %83, %80, %75, %73, %71
  %102 = landingpad { i8*, i32 }
          cleanup
  %103 = extractvalue { i8*, i32 } %102, 0
  store i8* %103, i8** %4, align 8
  %104 = extractvalue { i8*, i32 } %102, 1
  store i32 %104, i32* %5, align 4
  br label %184

; <label>:105:                                    ; preds = %96, %91, %88, %85, %82, %77
  %106 = invoke zeroext i1 @_ZeqRK6StringS1_(%class.String* dereferenceable(24) %13, %class.String* dereferenceable(24) %7)
          to label %107 unwind label %101

; <label>:107:                                    ; preds = %105
  br i1 %106, label %108, label %116

; <label>:108:                                    ; preds = %107
  %109 = invoke i32 @_ZNK6VectorI6StringE4sizeEv(%class.Vector.0* %11)
          to label %110 unwind label %101

; <label>:110:                                    ; preds = %108
  %111 = icmp eq i32 %109, 1
  br i1 %111, label %112, label %116

; <label>:112:                                    ; preds = %110
  %113 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 2
  store i8 1, i8* %113, align 8
  %114 = invoke dereferenceable(24) %class.String* @_ZN6StringaSERKS_(%class.String* %13, %class.String* dereferenceable(24) %7)
          to label %115 unwind label %101

; <label>:115:                                    ; preds = %112
  br label %147

; <label>:116:                                    ; preds = %110, %107
  %117 = invoke zeroext i1 @_ZeqRK6StringS1_(%class.String* dereferenceable(24) %13, %class.String* dereferenceable(24) %8)
          to label %118 unwind label %101

; <label>:118:                                    ; preds = %116
  br i1 %117, label %119, label %129

; <label>:119:                                    ; preds = %118
  %120 = invoke i32 @_ZNK6VectorI6StringE4sizeEv(%class.Vector.0* %11)
          to label %121 unwind label %101

; <label>:121:                                    ; preds = %119
  %122 = icmp eq i32 %120, 2
  br i1 %122, label %123, label %129

; <label>:123:                                    ; preds = %121
  %124 = invoke dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %11, i32 1)
          to label %125 unwind label %101

; <label>:125:                                    ; preds = %123
  %126 = invoke zeroext i1 @_ZN9StringArg5parseERK6StringRS0_RK10ArgContext(%class.String* dereferenceable(24) %124, %class.String* dereferenceable(24) %14, %class.ArgContext* dereferenceable(32) @blank_args)
          to label %127 unwind label %101

; <label>:127:                                    ; preds = %125
  br i1 %126, label %128, label %129

; <label>:128:                                    ; preds = %127
  br label %146

; <label>:129:                                    ; preds = %127, %121, %118
  %130 = invoke zeroext i1 @_ZeqRK6StringS1_(%class.String* dereferenceable(24) %13, %class.String* dereferenceable(24) %9)
          to label %131 unwind label %101

; <label>:131:                                    ; preds = %129
  br i1 %130, label %132, label %143

; <label>:132:                                    ; preds = %131
  %133 = invoke i32 @_ZNK6VectorI6StringE4sizeEv(%class.Vector.0* %11)
          to label %134 unwind label %101

; <label>:134:                                    ; preds = %132
  %135 = icmp eq i32 %133, 2
  br i1 %135, label %136, label %143

; <label>:136:                                    ; preds = %134
  %137 = invoke dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %11, i32 1)
          to label %138 unwind label %101

; <label>:138:                                    ; preds = %136
  %139 = invoke zeroext i1 @_ZN9StringArg5parseERK6StringRS0_RK10ArgContext(%class.String* dereferenceable(24) %137, %class.String* dereferenceable(24) %14, %class.ArgContext* dereferenceable(32) @blank_args)
          to label %140 unwind label %101

; <label>:140:                                    ; preds = %138
  br i1 %139, label %141, label %143

; <label>:141:                                    ; preds = %140
  invoke void @_ZN5Lexer16yrequire_libraryERK6String(%class.Lexer* %17, %class.String* dereferenceable(24) %14)
          to label %142 unwind label %101

; <label>:142:                                    ; preds = %141
  store i32 4, i32* %12, align 4
  br label %177

; <label>:143:                                    ; preds = %140, %134, %131
  %144 = invoke i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %17, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.95, i32 0, i32 0))
          to label %145 unwind label %101

; <label>:145:                                    ; preds = %143
  store i32 4, i32* %12, align 4
  br label %177

; <label>:146:                                    ; preds = %128
  br label %147

; <label>:147:                                    ; preds = %146, %115
  %148 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 3
  %149 = load %class.LexerExtra*, %class.LexerExtra** %148, align 8
  %150 = icmp ne %class.LexerExtra* %149, null
  br i1 %150, label %151, label %172

; <label>:151:                                    ; preds = %147
  %152 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 3
  %153 = load %class.LexerExtra*, %class.LexerExtra** %152, align 8
  %154 = bitcast %class.LexerExtra* %153 to void (%class.LexerExtra*, %class.String*, %class.String*, %class.ErrorHandler*)***
  %155 = load void (%class.LexerExtra*, %class.String*, %class.String*, %class.ErrorHandler*)**, void (%class.LexerExtra*, %class.String*, %class.String*, %class.ErrorHandler*)*** %154, align 8
  %156 = getelementptr inbounds void (%class.LexerExtra*, %class.String*, %class.String*, %class.ErrorHandler*)*, void (%class.LexerExtra*, %class.String*, %class.String*, %class.ErrorHandler*)** %155, i64 2
  %157 = load void (%class.LexerExtra*, %class.String*, %class.String*, %class.ErrorHandler*)*, void (%class.LexerExtra*, %class.String*, %class.String*, %class.ErrorHandler*)** %156, align 8
  invoke void @_ZN6StringC2ERKS_(%class.String* %15, %class.String* dereferenceable(24) %13)
          to label %158 unwind label %101

; <label>:158:                                    ; preds = %151
  invoke void @_ZN6StringC2ERKS_(%class.String* %16, %class.String* dereferenceable(24) %14)
          to label %159 unwind label %163

; <label>:159:                                    ; preds = %158
  %160 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 19
  %161 = load %class.ErrorHandler*, %class.ErrorHandler** %160, align 8
  invoke void %157(%class.LexerExtra* %153, %class.String* %15, %class.String* %16, %class.ErrorHandler* %161)
          to label %162 unwind label %167

; <label>:162:                                    ; preds = %159
  call void @_ZN6StringD2Ev(%class.String* %16) #9
  call void @_ZN6StringD2Ev(%class.String* %15) #9
  br label %172

; <label>:163:                                    ; preds = %158
  %164 = landingpad { i8*, i32 }
          cleanup
  %165 = extractvalue { i8*, i32 } %164, 0
  store i8* %165, i8** %4, align 8
  %166 = extractvalue { i8*, i32 } %164, 1
  store i32 %166, i32* %5, align 4
  br label %171

; <label>:167:                                    ; preds = %159
  %168 = landingpad { i8*, i32 }
          cleanup
  %169 = extractvalue { i8*, i32 } %168, 0
  store i8* %169, i8** %4, align 8
  %170 = extractvalue { i8*, i32 } %168, 1
  store i32 %170, i32* %5, align 4
  call void @_ZN6StringD2Ev(%class.String* %16) #9
  br label %171

; <label>:171:                                    ; preds = %167, %163
  call void @_ZN6StringD2Ev(%class.String* %15) #9
  br label %184

; <label>:172:                                    ; preds = %162, %147
  %173 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 17
  invoke void @_ZN6VectorI6StringE9push_backERKS0_(%class.Vector.0* %173, %class.String* dereferenceable(24) %13)
          to label %174 unwind label %101

; <label>:174:                                    ; preds = %172
  %175 = getelementptr inbounds %class.Lexer, %class.Lexer* %17, i32 0, i32 17
  invoke void @_ZN6VectorI6StringE9push_backERKS0_(%class.Vector.0* %175, %class.String* dereferenceable(24) %14)
          to label %176 unwind label %101

; <label>:176:                                    ; preds = %174
  store i32 0, i32* %12, align 4
  br label %177

; <label>:177:                                    ; preds = %176, %145, %142
  call void @_ZN6StringD2Ev(%class.String* %14) #9
  call void @_ZN6StringD2Ev(%class.String* %13) #9
  br label %178

; <label>:178:                                    ; preds = %177, %44
  call void @_ZN6VectorI6StringED2Ev(%class.Vector.0* %11) #9
  %179 = load i32, i32* %12, align 4
  switch i32 %179, label %199 [
    i32 0, label %180
    i32 4, label %181
  ]

; <label>:180:                                    ; preds = %178
  br label %181

; <label>:181:                                    ; preds = %180, %178
  %182 = load i32, i32* %10, align 4
  %183 = add nsw i32 %182, 1
  store i32 %183, i32* %10, align 4
  br label %30

; <label>:184:                                    ; preds = %171, %101
  call void @_ZN6StringD2Ev(%class.String* %14) #9
  br label %185

; <label>:185:                                    ; preds = %184, %97
  call void @_ZN6StringD2Ev(%class.String* %13) #9
  br label %186

; <label>:186:                                    ; preds = %185, %65
  call void @_ZN6VectorI6StringED2Ev(%class.Vector.0* %11) #9
  br label %189

; <label>:187:                                    ; preds = %33
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  call void @_ZN6StringD2Ev(%class.String* %8) #9
  call void @_ZN6StringD2Ev(%class.String* %7) #9
  call void @_ZN6VectorI6StringED2Ev(%class.Vector.0* %6) #9
  call void @_ZN6StringD2Ev(%class.String* %3) #9
  br label %188

; <label>:188:                                    ; preds = %187, %19
  ret void

; <label>:189:                                    ; preds = %186, %61
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  br label %190

; <label>:190:                                    ; preds = %189, %57
  call void @_ZN6StringD2Ev(%class.String* %8) #9
  br label %191

; <label>:191:                                    ; preds = %190, %53
  call void @_ZN6StringD2Ev(%class.String* %7) #9
  br label %192

; <label>:192:                                    ; preds = %191, %49
  call void @_ZN6VectorI6StringED2Ev(%class.Vector.0* %6) #9
  br label %193

; <label>:193:                                    ; preds = %192, %45
  call void @_ZN6StringD2Ev(%class.String* %3) #9
  br label %194

; <label>:194:                                    ; preds = %193
  %195 = load i8*, i8** %4, align 8
  %196 = load i32, i32* %5, align 4
  %197 = insertvalue { i8*, i32 } undef, i8* %195, 0
  %198 = insertvalue { i8*, i32 } %197, i32 %196, 1
  resume { i8*, i32 } %198

; <label>:199:                                    ; preds = %178
  unreachable
}

declare void @_Z9cp_argvecRK6StringR6VectorIS_E(%class.String* dereferenceable(24), %class.Vector.0* dereferenceable(16)) #3

declare void @_Z11cp_spacevecRK6StringR6VectorIS_E(%class.String* dereferenceable(24), %class.Vector.0* dereferenceable(16)) #3

; Function Attrs: noinline optnone uwtable
define linkonce_odr zeroext i1 @_ZN7WordArg5parseERK6StringRS0_RK10ArgContext(%class.String* dereferenceable(24), %class.String* dereferenceable(24), %class.ArgContext* dereferenceable(32)) #2 comdat align 2 {
  %4 = alloca %class.String*, align 8
  %5 = alloca %class.String*, align 8
  %6 = alloca %class.ArgContext*, align 8
  store %class.String* %0, %class.String** %4, align 8
  store %class.String* %1, %class.String** %5, align 8
  store %class.ArgContext* %2, %class.ArgContext** %6, align 8
  %7 = load %class.String*, %class.String** %4, align 8
  %8 = load %class.String*, %class.String** %5, align 8
  %9 = call zeroext i1 @_Z7cp_wordRK6StringPS_S2_(%class.String* dereferenceable(24) %7, %class.String* %8, %class.String* null)
  ret i1 %9
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr zeroext i1 @_ZN9StringArg5parseERK6StringRS0_RK10ArgContext(%class.String* dereferenceable(24), %class.String* dereferenceable(24), %class.ArgContext* dereferenceable(32)) #2 comdat align 2 {
  %4 = alloca %class.String*, align 8
  %5 = alloca %class.String*, align 8
  %6 = alloca %class.ArgContext*, align 8
  store %class.String* %0, %class.String** %4, align 8
  store %class.String* %1, %class.String** %5, align 8
  store %class.ArgContext* %2, %class.ArgContext** %6, align 8
  %7 = load %class.String*, %class.String** %4, align 8
  %8 = load %class.String*, %class.String** %5, align 8
  %9 = call zeroext i1 @_Z9cp_stringRK6StringPS_S2_(%class.String* dereferenceable(24) %7, %class.String* %8, %class.String* null)
  ret i1 %9
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer4yvarEv(%class.Lexer*) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Lexer*, align 8
  %3 = alloca %class.String, align 8
  %4 = alloca i8*
  %5 = alloca i32
  %6 = alloca %class.Vector.0, align 8
  %7 = alloca %class.String, align 8
  %8 = alloca i32, align 4
  %9 = alloca %class.String, align 8
  %10 = alloca i8*, align 8
  %11 = alloca %class.String, align 8
  store %class.Lexer* %0, %class.Lexer** %2, align 8
  %12 = load %class.Lexer*, %class.Lexer** %2, align 8
  %13 = call zeroext i1 @_ZN5Lexer6expectEib(%class.Lexer* %12, i32 40, i1 zeroext false)
  br i1 %13, label %14, label %129

; <label>:14:                                     ; preds = %1
  call void @_ZN5Lexer10lex_configEv(%class.String* sret %3, %class.Lexer* %12)
  %15 = invoke zeroext i1 @_ZN5Lexer6expectEib(%class.Lexer* %12, i32 41, i1 zeroext false)
          to label %16 unwind label %76

; <label>:16:                                     ; preds = %14
  invoke void @_ZN6VectorI6StringEC2Ev(%class.Vector.0* %6)
          to label %17 unwind label %76

; <label>:17:                                     ; preds = %16
  invoke void @_ZN6StringC2Ev(%class.String* %7)
          to label %18 unwind label %80

; <label>:18:                                     ; preds = %17
  invoke void @_Z9cp_argvecRK6StringR6VectorIS_E(%class.String* dereferenceable(24) %3, %class.Vector.0* dereferenceable(16) %6)
          to label %19 unwind label %84

; <label>:19:                                     ; preds = %18
  store i32 0, i32* %8, align 4
  br label %20

; <label>:20:                                     ; preds = %122, %19
  %21 = load i32, i32* %8, align 4
  %22 = invoke i32 @_ZNK6VectorI6StringE4sizeEv(%class.Vector.0* %6)
          to label %23 unwind label %84

; <label>:23:                                     ; preds = %20
  %24 = icmp slt i32 %21, %22
  br i1 %24, label %25, label %125

; <label>:25:                                     ; preds = %23
  %26 = load i32, i32* %8, align 4
  %27 = invoke dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %6, i32 %26)
          to label %28 unwind label %84

; <label>:28:                                     ; preds = %25
  %29 = invoke { i64, i64 } @_ZNK6StringcvMS_KFivEEv(%class.String* %27)
          to label %30 unwind label %84

; <label>:30:                                     ; preds = %28
  %31 = extractvalue { i64, i64 } %29, 0
  %32 = icmp ne i64 %31, 0
  br i1 %32, label %33, label %121

; <label>:33:                                     ; preds = %30
  %34 = load i32, i32* %8, align 4
  %35 = invoke dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %6, i32 %34)
          to label %36 unwind label %84

; <label>:36:                                     ; preds = %33
  invoke void @_Z17cp_shift_spacevecR6String(%class.String* sret %9, %class.String* dereferenceable(24) %35)
          to label %37 unwind label %84

; <label>:37:                                     ; preds = %36
  %38 = invoke i8* @_ZNK6String5beginEv(%class.String* %9)
          to label %39 unwind label %88

; <label>:39:                                     ; preds = %37
  store i8* %38, i8** %10, align 8
  %40 = load i8*, i8** %10, align 8
  %41 = invoke i8* @_ZNK6String3endEv(%class.String* %9)
          to label %42 unwind label %88

; <label>:42:                                     ; preds = %39
  %43 = icmp ne i8* %40, %41
  br i1 %43, label %44, label %93

; <label>:44:                                     ; preds = %42
  %45 = load i8*, i8** %10, align 8
  %46 = load i8, i8* %45, align 1
  %47 = sext i8 %46 to i32
  %48 = icmp eq i32 %47, 36
  br i1 %48, label %49, label %93

; <label>:49:                                     ; preds = %44
  %50 = load i8*, i8** %10, align 8
  %51 = getelementptr inbounds i8, i8* %50, i32 1
  store i8* %51, i8** %10, align 8
  br label %52

; <label>:52:                                     ; preds = %73, %49
  %53 = load i8*, i8** %10, align 8
  %54 = invoke i8* @_ZNK6String3endEv(%class.String* %9)
          to label %55 unwind label %88

; <label>:55:                                     ; preds = %52
  %56 = icmp ne i8* %53, %54
  br i1 %56, label %57, label %70

; <label>:57:                                     ; preds = %55
  %58 = load i8*, i8** %10, align 8
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = call i32 @isalnum(i32 %60) #13
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %68, label %63

; <label>:63:                                     ; preds = %57
  %64 = load i8*, i8** %10, align 8
  %65 = load i8, i8* %64, align 1
  %66 = sext i8 %65 to i32
  %67 = icmp eq i32 %66, 95
  br label %68

; <label>:68:                                     ; preds = %63, %57
  %69 = phi i1 [ true, %57 ], [ %67, %63 ]
  br label %70

; <label>:70:                                     ; preds = %68, %55
  %71 = phi i1 [ false, %55 ], [ %69, %68 ]
  br i1 %71, label %72, label %92

; <label>:72:                                     ; preds = %70
  br label %73

; <label>:73:                                     ; preds = %72
  %74 = load i8*, i8** %10, align 8
  %75 = getelementptr inbounds i8, i8* %74, i32 1
  store i8* %75, i8** %10, align 8
  br label %52

; <label>:76:                                     ; preds = %16, %14
  %77 = landingpad { i8*, i32 }
          cleanup
  %78 = extractvalue { i8*, i32 } %77, 0
  store i8* %78, i8** %4, align 8
  %79 = extractvalue { i8*, i32 } %77, 1
  store i32 %79, i32* %5, align 4
  br label %128

; <label>:80:                                     ; preds = %17
  %81 = landingpad { i8*, i32 }
          cleanup
  %82 = extractvalue { i8*, i32 } %81, 0
  store i8* %82, i8** %4, align 8
  %83 = extractvalue { i8*, i32 } %81, 1
  store i32 %83, i32* %5, align 4
  br label %127

; <label>:84:                                     ; preds = %36, %33, %28, %25, %20, %18
  %85 = landingpad { i8*, i32 }
          cleanup
  %86 = extractvalue { i8*, i32 } %85, 0
  store i8* %86, i8** %4, align 8
  %87 = extractvalue { i8*, i32 } %85, 1
  store i32 %87, i32* %5, align 4
  br label %126

; <label>:88:                                     ; preds = %113, %108, %105, %102, %97, %93, %52, %39, %37
  %89 = landingpad { i8*, i32 }
          cleanup
  %90 = extractvalue { i8*, i32 } %89, 0
  store i8* %90, i8** %4, align 8
  %91 = extractvalue { i8*, i32 } %89, 1
  store i32 %91, i32* %5, align 4
  br label %120

; <label>:92:                                     ; preds = %70
  br label %93

; <label>:93:                                     ; preds = %92, %44, %42
  %94 = invoke i32 @_ZNK6String6lengthEv(%class.String* %9)
          to label %95 unwind label %88

; <label>:95:                                     ; preds = %93
  %96 = icmp slt i32 %94, 2
  br i1 %96, label %102, label %97

; <label>:97:                                     ; preds = %95
  %98 = load i8*, i8** %10, align 8
  %99 = invoke i8* @_ZNK6String3endEv(%class.String* %9)
          to label %100 unwind label %88

; <label>:100:                                    ; preds = %97
  %101 = icmp ne i8* %98, %99
  br i1 %101, label %102, label %105

; <label>:102:                                    ; preds = %100, %95
  %103 = invoke i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %12, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.96, i32 0, i32 0))
          to label %104 unwind label %88

; <label>:104:                                    ; preds = %102
  br label %119

; <label>:105:                                    ; preds = %100
  invoke void @_ZNK6String9substringEi(%class.String* sret %11, %class.String* %9, i32 1)
          to label %106 unwind label %88

; <label>:106:                                    ; preds = %105
  %107 = invoke dereferenceable(24) %class.String* @_ZN6StringaSEOS_(%class.String* %9, %class.String* dereferenceable(24) %11)
          to label %108 unwind label %115

; <label>:108:                                    ; preds = %106
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  %109 = getelementptr inbounds %class.Lexer, %class.Lexer* %12, i32 0, i32 12
  %110 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %109, align 8
  %111 = load i32, i32* %8, align 4
  %112 = invoke dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %6, i32 %111)
          to label %113 unwind label %88

; <label>:113:                                    ; preds = %108
  invoke void @_ZN5Lexer8Compound6defineERK6StringS3_bPS_(%"class.Lexer::Compound"* %110, %class.String* dereferenceable(24) %9, %class.String* dereferenceable(24) %112, i1 zeroext false, %class.Lexer* %12)
          to label %114 unwind label %88

; <label>:114:                                    ; preds = %113
  br label %119

; <label>:115:                                    ; preds = %106
  %116 = landingpad { i8*, i32 }
          cleanup
  %117 = extractvalue { i8*, i32 } %116, 0
  store i8* %117, i8** %4, align 8
  %118 = extractvalue { i8*, i32 } %116, 1
  store i32 %118, i32* %5, align 4
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  br label %120

; <label>:119:                                    ; preds = %114, %104
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  br label %121

; <label>:120:                                    ; preds = %115, %88
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  br label %126

; <label>:121:                                    ; preds = %119, %30
  br label %122

; <label>:122:                                    ; preds = %121
  %123 = load i32, i32* %8, align 4
  %124 = add nsw i32 %123, 1
  store i32 %124, i32* %8, align 4
  br label %20

; <label>:125:                                    ; preds = %23
  call void @_ZN6StringD2Ev(%class.String* %7) #9
  call void @_ZN6VectorI6StringED2Ev(%class.Vector.0* %6) #9
  call void @_ZN6StringD2Ev(%class.String* %3) #9
  br label %129

; <label>:126:                                    ; preds = %120, %84
  call void @_ZN6StringD2Ev(%class.String* %7) #9
  br label %127

; <label>:127:                                    ; preds = %126, %80
  call void @_ZN6VectorI6StringED2Ev(%class.Vector.0* %6) #9
  br label %128

; <label>:128:                                    ; preds = %127, %76
  call void @_ZN6StringD2Ev(%class.String* %3) #9
  br label %130

; <label>:129:                                    ; preds = %125, %1
  ret void

; <label>:130:                                    ; preds = %128
  %131 = load i8*, i8** %4, align 8
  %132 = load i32, i32* %5, align 4
  %133 = insertvalue { i8*, i32 } undef, i8* %131, 0
  %134 = insertvalue { i8*, i32 } %133, i32 %132, 1
  resume { i8*, i32 } %134
}

declare void @_Z17cp_shift_spacevecR6String(%class.String* sret, %class.String* dereferenceable(24)) #3

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer10ystatementEv(%class.Lexer*) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.Lexer*, align 8
  %3 = alloca %class.Lexeme, align 8
  %4 = alloca i8*
  %5 = alloca i32
  store %class.Lexer* %0, %class.Lexer** %2, align 8
  %6 = load %class.Lexer*, %class.Lexer** %2, align 8
  call void @_ZN5Lexer3lexEv(%class.Lexeme* sret %3, %class.Lexer* %6)
  %7 = invoke i32 @_ZNK6Lexeme4kindEv(%class.Lexeme* %3)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %1
  switch i32 %7, label %106 [
    i32 256, label %13
    i32 91, label %13
    i32 123, label %13
    i32 40, label %13
    i32 258, label %13
    i32 259, label %13
    i32 263, label %20
    i32 264, label %22
    i32 266, label %24
    i32 59, label %26
    i32 125, label %27
    i32 261, label %27
    i32 41, label %48
    i32 0, label %58
  ]

; <label>:9:                                      ; preds = %107, %76, %74, %66, %64, %54, %44, %43, %35, %33, %24, %22, %20, %13, %1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  store i8* %11, i8** %4, align 8
  %12 = extractvalue { i8*, i32 } %10, 1
  store i32 %12, i32* %5, align 4
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %3) #9
  br label %111

; <label>:13:                                     ; preds = %8, %8, %8, %8, %8, %8
  invoke void @_ZN5Lexer5unlexERK6Lexeme(%class.Lexer* %6, %class.Lexeme* dereferenceable(32) %3)
          to label %14 unwind label %9

; <label>:14:                                     ; preds = %13
  %15 = getelementptr inbounds %class.Lexer, %class.Lexer* %6, i32 0, i32 13
  %16 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %15, align 8
  %17 = getelementptr inbounds %class.Lexer, %class.Lexer* %6, i32 0, i32 13
  %18 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %17, align 8
  %19 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %18, i32 0, i32 0
  store i32 1, i32* %19, align 8
  br label %110

; <label>:20:                                     ; preds = %8
  invoke void @_ZN5Lexer13yelementclassEv(%class.Lexer* %6)
          to label %21 unwind label %9

; <label>:21:                                     ; preds = %20
  br label %110

; <label>:22:                                     ; preds = %8
  invoke void @_ZN5Lexer8yrequireEv(%class.Lexer* %6)
          to label %23 unwind label %9

; <label>:23:                                     ; preds = %22
  br label %110

; <label>:24:                                     ; preds = %8
  invoke void @_ZN5Lexer4yvarEv(%class.Lexer* %6)
          to label %25 unwind label %9

; <label>:25:                                     ; preds = %24
  br label %110

; <label>:26:                                     ; preds = %8
  br label %110

; <label>:27:                                     ; preds = %8, %8
  %28 = getelementptr inbounds %class.Lexer, %class.Lexer* %6, i32 0, i32 13
  %29 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %28, align 8
  %30 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %29, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %35

; <label>:33:                                     ; preds = %27
  invoke void @_ZN5Lexer13ycompound_endERK6Lexeme(%class.Lexer* %6, %class.Lexeme* dereferenceable(32) %3)
          to label %34 unwind label %9

; <label>:34:                                     ; preds = %33
  br label %47

; <label>:35:                                     ; preds = %27
  %36 = invoke i32 @_ZN5Lexer13lerror_syntaxERK6Lexeme(%class.Lexer* %6, %class.Lexeme* dereferenceable(32) %3)
          to label %37 unwind label %9

; <label>:37:                                     ; preds = %35
  %38 = getelementptr inbounds %class.Lexer, %class.Lexer* %6, i32 0, i32 13
  %39 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %38, align 8
  %40 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %39, i32 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 2
  br i1 %42, label %43, label %46

; <label>:43:                                     ; preds = %37
  invoke void @_ZN5Lexer5unlexERK6Lexeme(%class.Lexer* %6, %class.Lexeme* dereferenceable(32) %3)
          to label %44 unwind label %9

; <label>:44:                                     ; preds = %43
  invoke void @_ZN5Lexer10ygroup_endEv(%class.Lexer* %6)
          to label %45 unwind label %9

; <label>:45:                                     ; preds = %44
  br label %46

; <label>:46:                                     ; preds = %45, %37
  br label %47

; <label>:47:                                     ; preds = %46, %34
  br label %110

; <label>:48:                                     ; preds = %8
  %49 = getelementptr inbounds %class.Lexer, %class.Lexer* %6, i32 0, i32 13
  %50 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %49, align 8
  %51 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %50, i32 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 2
  br i1 %53, label %54, label %56

; <label>:54:                                     ; preds = %48
  invoke void @_ZN5Lexer10ygroup_endEv(%class.Lexer* %6)
          to label %55 unwind label %9

; <label>:55:                                     ; preds = %54
  br label %57

; <label>:56:                                     ; preds = %48
  br label %107

; <label>:57:                                     ; preds = %55
  br label %110

; <label>:58:                                     ; preds = %8
  %59 = getelementptr inbounds %class.Lexer, %class.Lexer* %6, i32 0, i32 13
  %60 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %59, align 8
  %61 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %60, i32 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 2
  br i1 %63, label %64, label %68

; <label>:64:                                     ; preds = %58
  %65 = invoke i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.97, i32 0, i32 0))
          to label %66 unwind label %9

; <label>:66:                                     ; preds = %64
  invoke void @_ZN5Lexer10ygroup_endEv(%class.Lexer* %6)
          to label %67 unwind label %9

; <label>:67:                                     ; preds = %66
  br label %105

; <label>:68:                                     ; preds = %58
  %69 = getelementptr inbounds %class.Lexer, %class.Lexer* %6, i32 0, i32 13
  %70 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %69, align 8
  %71 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %70, i32 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %78

; <label>:74:                                     ; preds = %68
  %75 = invoke i32 (%class.Lexer*, i8*, ...) @_ZN5Lexer6lerrorEPKcz(%class.Lexer* %6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.98, i32 0, i32 0))
          to label %76 unwind label %9

; <label>:76:                                     ; preds = %74
  invoke void @_ZN5Lexer13ycompound_endERK6Lexeme(%class.Lexer* %6, %class.Lexeme* dereferenceable(32) %3)
          to label %77 unwind label %9

; <label>:77:                                     ; preds = %76
  br label %104

; <label>:78:                                     ; preds = %68
  %79 = getelementptr inbounds %class.Lexer, %class.Lexer* %6, i32 0, i32 13
  %80 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %79, align 8
  %81 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %80, i32 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %91

; <label>:84:                                     ; preds = %78
  %85 = getelementptr inbounds %class.Lexer, %class.Lexer* %6, i32 0, i32 13
  %86 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %85, align 8
  %87 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %86, i32 0, i32 21
  %88 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %87, align 8
  %89 = icmp ne %"struct.Lexer::ParseState"* %88, null
  %90 = xor i1 %89, true
  br label %91

; <label>:91:                                     ; preds = %84, %78
  %92 = phi i1 [ false, %78 ], [ %90, %84 ]
  br i1 %92, label %93, label %94

; <label>:93:                                     ; preds = %91
  br label %96

; <label>:94:                                     ; preds = %91
  call void @__assert_fail(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i32 2047, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__PRETTY_FUNCTION__._ZN5Lexer10ystatementEv, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %96

; <label>:96:                                     ; preds = %95, %93
  %97 = getelementptr inbounds %class.Lexer, %class.Lexer* %6, i32 0, i32 13
  %98 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %97, align 8
  %99 = icmp eq %"struct.Lexer::ParseState"* %98, null
  br i1 %99, label %102, label %100

; <label>:100:                                    ; preds = %96
  call void @_ZN5Lexer10ParseStateD2Ev(%"struct.Lexer::ParseState"* %98) #9
  %101 = bitcast %"struct.Lexer::ParseState"* %98 to i8*
  call void @_ZdlPv(i8* %101) #14
  br label %102

; <label>:102:                                    ; preds = %100, %96
  %103 = getelementptr inbounds %class.Lexer, %class.Lexer* %6, i32 0, i32 13
  store %"struct.Lexer::ParseState"* null, %"struct.Lexer::ParseState"** %103, align 8
  br label %104

; <label>:104:                                    ; preds = %102, %77
  br label %105

; <label>:105:                                    ; preds = %104, %67
  br label %110

; <label>:106:                                    ; preds = %8
  br label %107

; <label>:107:                                    ; preds = %106, %56
  %108 = invoke i32 @_ZN5Lexer13lerror_syntaxERK6Lexeme(%class.Lexer* %6, %class.Lexeme* dereferenceable(32) %3)
          to label %109 unwind label %9

; <label>:109:                                    ; preds = %107
  br label %110

; <label>:110:                                    ; preds = %109, %105, %57, %47, %26, %25, %23, %21, %14
  call void @_ZN6LexemeD2Ev(%class.Lexeme* %3) #9
  ret void

; <label>:111:                                    ; preds = %9
  %112 = load i8*, i8** %4, align 8
  %113 = load i32, i32* %5, align 4
  %114 = insertvalue { i8*, i32 } undef, i8* %112, 0
  %115 = insertvalue { i8*, i32 } %114, i32 %113, 1
  resume { i8*, i32 } %115
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN5Lexer10ParseState19enter_element_stateEv(%"struct.Lexer::ParseState"*) #2 comdat align 2 {
  %2 = alloca %"struct.Lexer::ParseState"*, align 8
  store %"struct.Lexer::ParseState"* %0, %"struct.Lexer::ParseState"** %2, align 8
  %3 = load %"struct.Lexer::ParseState"*, %"struct.Lexer::ParseState"** %2, align 8
  %4 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %3, i32 0, i32 6
  store %"struct.Lexer::ElementState"* null, %"struct.Lexer::ElementState"** %4, align 8
  %5 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %3, i32 0, i32 5
  store %"struct.Lexer::ElementState"* null, %"struct.Lexer::ElementState"** %5, align 8
  %6 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %3, i32 0, i32 8
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %3, i32 0, i32 7
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %3, i32 0, i32 11
  call void @_ZN6VectorIiE5clearEv(%class.Vector.5* %8)
  %9 = getelementptr inbounds %"struct.Lexer::ParseState", %"struct.Lexer::ParseState"* %3, i32 0, i32 0
  store i32 2, i32* %9, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6VectorIiE5clearEv(%class.Vector.5*) #2 comdat align 2 {
  %2 = alloca %class.Vector.5*, align 8
  store %class.Vector.5* %0, %class.Vector.5** %2, align 8
  %3 = load %class.Vector.5*, %class.Vector.5** %2, align 8
  %4 = getelementptr inbounds %class.Vector.5, %class.Vector.5* %3, i32 0, i32 0
  call void @_ZN13vector_memoryI18sized_array_memoryILm4EEE5clearEv(%class.vector_memory.3* %4)
  ret void
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer22add_router_connectionsEiRK6VectorIiE(%class.Lexer*, i32, %class.Vector.5* dereferenceable(16)) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.Lexer*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %class.Vector.5*, align 8
  %7 = alloca %class.Vector.17, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = alloca %class.Vector.17, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %class.Lexer* %0, %class.Lexer** %4, align 8
  store i32 %1, i32* %5, align 4
  store %class.Vector.5* %2, %class.Vector.5** %6, align 8
  %15 = load %class.Lexer*, %class.Lexer** %4, align 8
  call void @_ZN6VectorIN6Router4PortEEC2Ev(%class.Vector.17* %7)
  %16 = getelementptr inbounds %class.Lexer, %class.Lexer* %15, i32 0, i32 12
  %17 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %16, align 8
  %18 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %17, i32 0, i32 19
  %19 = load i32, i32* %5, align 4
  %20 = invoke dereferenceable(16) %"struct.Router::Connection"* @_ZN6VectorIN6Router10ConnectionEEixEi(%class.Vector.8* %18, i32 %19)
          to label %21 unwind label %94

; <label>:21:                                     ; preds = %3
  %22 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZN6Router10ConnectionixEi(%"struct.Router::Connection"* %20, i32 1)
          to label %23 unwind label %94

; <label>:23:                                     ; preds = %21
  invoke void @_ZN5Lexer17expand_connectionERKN6Router4PortEbR6VectorIS1_E(%class.Lexer* %15, %"struct.Router::Port"* dereferenceable(8) %22, i1 zeroext true, %class.Vector.17* dereferenceable(16) %7)
          to label %24 unwind label %94

; <label>:24:                                     ; preds = %23
  invoke void @_ZN6VectorIN6Router4PortEEC2Ev(%class.Vector.17* %10)
          to label %25 unwind label %94

; <label>:25:                                     ; preds = %24
  %26 = getelementptr inbounds %class.Lexer, %class.Lexer* %15, i32 0, i32 12
  %27 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %26, align 8
  %28 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %27, i32 0, i32 19
  %29 = load i32, i32* %5, align 4
  %30 = invoke dereferenceable(16) %"struct.Router::Connection"* @_ZN6VectorIN6Router10ConnectionEEixEi(%class.Vector.8* %28, i32 %29)
          to label %31 unwind label %98

; <label>:31:                                     ; preds = %25
  %32 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZN6Router10ConnectionixEi(%"struct.Router::Connection"* %30, i32 0)
          to label %33 unwind label %98

; <label>:33:                                     ; preds = %31
  invoke void @_ZN5Lexer17expand_connectionERKN6Router4PortEbR6VectorIS1_E(%class.Lexer* %15, %"struct.Router::Port"* dereferenceable(8) %32, i1 zeroext false, %class.Vector.17* dereferenceable(16) %10)
          to label %34 unwind label %98

; <label>:34:                                     ; preds = %33
  store i32 0, i32* %11, align 4
  br label %35

; <label>:35:                                     ; preds = %108, %34
  %36 = load i32, i32* %11, align 4
  %37 = invoke i32 @_ZNK6VectorIN6Router4PortEE4sizeEv(%class.Vector.17* %7)
          to label %38 unwind label %98

; <label>:38:                                     ; preds = %35
  %39 = icmp slt i32 %36, %37
  br i1 %39, label %40, label %111

; <label>:40:                                     ; preds = %38
  %41 = load %class.Vector.5*, %class.Vector.5** %6, align 8
  %42 = load i32, i32* %11, align 4
  %43 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZN6VectorIN6Router4PortEEixEi(%class.Vector.17* %7, i32 %42)
          to label %44 unwind label %98

; <label>:44:                                     ; preds = %40
  %45 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %43, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = invoke dereferenceable(4) i32* @_ZNK6VectorIiEixEi(%class.Vector.5* %41, i32 %46)
          to label %48 unwind label %98

; <label>:48:                                     ; preds = %44
  %49 = load i32, i32* %47, align 4
  store i32 %49, i32* %12, align 4
  %50 = load i32, i32* %12, align 4
  %51 = icmp sge i32 %50, 0
  br i1 %51, label %52, label %107

; <label>:52:                                     ; preds = %48
  store i32 0, i32* %13, align 4
  br label %53

; <label>:53:                                     ; preds = %103, %52
  %54 = load i32, i32* %13, align 4
  %55 = invoke i32 @_ZNK6VectorIN6Router4PortEE4sizeEv(%class.Vector.17* %10)
          to label %56 unwind label %98

; <label>:56:                                     ; preds = %53
  %57 = icmp slt i32 %54, %55
  br i1 %57, label %58, label %106

; <label>:58:                                     ; preds = %56
  %59 = load %class.Vector.5*, %class.Vector.5** %6, align 8
  %60 = load i32, i32* %13, align 4
  %61 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZN6VectorIN6Router4PortEEixEi(%class.Vector.17* %10, i32 %60)
          to label %62 unwind label %98

; <label>:62:                                     ; preds = %58
  %63 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %61, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = invoke dereferenceable(4) i32* @_ZNK6VectorIiEixEi(%class.Vector.5* %59, i32 %64)
          to label %66 unwind label %98

; <label>:66:                                     ; preds = %62
  %67 = load i32, i32* %65, align 4
  store i32 %67, i32* %14, align 4
  %68 = load i32, i32* %14, align 4
  %69 = icmp sge i32 %68, 0
  br i1 %69, label %70, label %102

; <label>:70:                                     ; preds = %66
  %71 = getelementptr inbounds %class.Lexer, %class.Lexer* %15, i32 0, i32 12
  %72 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %71, align 8
  %73 = load i32, i32* %11, align 4
  %74 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZN6VectorIN6Router4PortEEixEi(%class.Vector.17* %7, i32 %73)
          to label %75 unwind label %98

; <label>:75:                                     ; preds = %70
  %76 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %74, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = load i32, i32* %11, align 4
  %79 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZN6VectorIN6Router4PortEEixEi(%class.Vector.17* %7, i32 %78)
          to label %80 unwind label %98

; <label>:80:                                     ; preds = %75
  %81 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %79, i32 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = load i32, i32* %13, align 4
  %84 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZN6VectorIN6Router4PortEEixEi(%class.Vector.17* %10, i32 %83)
          to label %85 unwind label %98

; <label>:85:                                     ; preds = %80
  %86 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %84, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = load i32, i32* %13, align 4
  %89 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZN6VectorIN6Router4PortEEixEi(%class.Vector.17* %10, i32 %88)
          to label %90 unwind label %98

; <label>:90:                                     ; preds = %85
  %91 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %89, i32 0, i32 1
  %92 = load i32, i32* %91, align 4
  invoke void @_ZN5Lexer8Compound7connectEiiii(%"class.Lexer::Compound"* %72, i32 %77, i32 %82, i32 %87, i32 %92)
          to label %93 unwind label %98

; <label>:93:                                     ; preds = %90
  br label %102

; <label>:94:                                     ; preds = %24, %23, %21, %3
  %95 = landingpad { i8*, i32 }
          cleanup
  %96 = extractvalue { i8*, i32 } %95, 0
  store i8* %96, i8** %8, align 8
  %97 = extractvalue { i8*, i32 } %95, 1
  store i32 %97, i32* %9, align 4
  br label %112

; <label>:98:                                     ; preds = %90, %85, %80, %75, %70, %62, %58, %53, %44, %40, %35, %33, %31, %25
  %99 = landingpad { i8*, i32 }
          cleanup
  %100 = extractvalue { i8*, i32 } %99, 0
  store i8* %100, i8** %8, align 8
  %101 = extractvalue { i8*, i32 } %99, 1
  store i32 %101, i32* %9, align 4
  call void @_ZN6VectorIN6Router4PortEED2Ev(%class.Vector.17* %10) #9
  br label %112

; <label>:102:                                    ; preds = %93, %66
  br label %103

; <label>:103:                                    ; preds = %102
  %104 = load i32, i32* %13, align 4
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* %13, align 4
  br label %53

; <label>:106:                                    ; preds = %56
  br label %107

; <label>:107:                                    ; preds = %106, %48
  br label %108

; <label>:108:                                    ; preds = %107
  %109 = load i32, i32* %11, align 4
  %110 = add nsw i32 %109, 1
  store i32 %110, i32* %11, align 4
  br label %35

; <label>:111:                                    ; preds = %38
  call void @_ZN6VectorIN6Router4PortEED2Ev(%class.Vector.17* %10) #9
  call void @_ZN6VectorIN6Router4PortEED2Ev(%class.Vector.17* %7) #9
  ret void

; <label>:112:                                    ; preds = %98, %94
  call void @_ZN6VectorIN6Router4PortEED2Ev(%class.Vector.17* %7) #9
  br label %113

; <label>:113:                                    ; preds = %112
  %114 = load i8*, i8** %8, align 8
  %115 = load i32, i32* %9, align 4
  %116 = insertvalue { i8*, i32 } undef, i8* %114, 0
  %117 = insertvalue { i8*, i32 } %116, i32 %115, 1
  resume { i8*, i32 } %117
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6VectorIN6Router4PortEEC2Ev(%class.Vector.17*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %class.Vector.17*, align 8
  store %class.Vector.17* %0, %class.Vector.17** %2, align 8
  %3 = load %class.Vector.17*, %class.Vector.17** %2, align 8
  %4 = getelementptr inbounds %class.Vector.17, %class.Vector.17* %3, i32 0, i32 0
  call void @_ZN13vector_memoryI18sized_array_memoryILm8EEEC2Ev(%class.vector_memory* %4)
  ret void
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer17expand_connectionERKN6Router4PortEbR6VectorIS1_E(%class.Lexer*, %"struct.Router::Port"* dereferenceable(8), i1 zeroext, %class.Vector.17* dereferenceable(16)) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %class.Lexer*, align 8
  %6 = alloca %"struct.Router::Port"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %class.Vector.17*, align 8
  %9 = alloca %"struct.Router::Port", align 4
  %10 = alloca %"class.Lexer::TunnelEnd"*, align 8
  %11 = alloca %class.String, align 8
  %12 = alloca %class.String, align 8
  %13 = alloca i8*
  %14 = alloca i32
  store %class.Lexer* %0, %class.Lexer** %5, align 8
  store %"struct.Router::Port"* %1, %"struct.Router::Port"** %6, align 8
  %15 = zext i1 %2 to i8
  store i8 %15, i8* %7, align 1
  store %class.Vector.17* %3, %class.Vector.17** %8, align 8
  %16 = load %class.Lexer*, %class.Lexer** %5, align 8
  %17 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 12
  %18 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %17, align 8
  %19 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %18, i32 0, i32 11
  %20 = load %"struct.Router::Port"*, %"struct.Router::Port"** %6, align 8
  %21 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %20, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = call dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %19, i32 %22)
  %24 = load i32, i32* %23, align 4
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %33

; <label>:26:                                     ; preds = %4
  %27 = load %class.Vector.17*, %class.Vector.17** %8, align 8
  %28 = load %"struct.Router::Port"*, %"struct.Router::Port"** %6, align 8
  %29 = bitcast %"struct.Router::Port"* %9 to i8*
  %30 = bitcast %"struct.Router::Port"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 8, i32 4, i1 false)
  %31 = bitcast %"struct.Router::Port"* %9 to i64*
  %32 = load i64, i64* %31, align 4
  call void @_ZN6VectorIN6Router4PortEE9push_backES1_(%class.Vector.17* %27, i64 %32)
  br label %82

; <label>:33:                                     ; preds = %4
  %34 = load %"struct.Router::Port"*, %"struct.Router::Port"** %6, align 8
  %35 = load i8, i8* %7, align 1
  %36 = trunc i8 %35 to i1
  %37 = call %"class.Lexer::TunnelEnd"* @_ZN5Lexer11find_tunnelERKN6Router4PortEbb(%class.Lexer* %16, %"struct.Router::Port"* dereferenceable(8) %34, i1 zeroext %36, i1 zeroext false)
  store %"class.Lexer::TunnelEnd"* %37, %"class.Lexer::TunnelEnd"** %10, align 8
  %38 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %10, align 8
  %39 = icmp ne %"class.Lexer::TunnelEnd"* %38, null
  br i1 %39, label %40, label %43

; <label>:40:                                     ; preds = %33
  %41 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %10, align 8
  %42 = load %class.Vector.17*, %class.Vector.17** %8, align 8
  call void @_ZN5Lexer9TunnelEnd6expandEPS_R6VectorIN6Router4PortEE(%"class.Lexer::TunnelEnd"* %41, %class.Lexer* %16, %class.Vector.17* dereferenceable(16) %42)
  br label %81

; <label>:43:                                     ; preds = %33
  %44 = load %"struct.Router::Port"*, %"struct.Router::Port"** %6, align 8
  %45 = load i8, i8* %7, align 1
  %46 = trunc i8 %45 to i1
  %47 = xor i1 %46, true
  %48 = call %"class.Lexer::TunnelEnd"* @_ZN5Lexer11find_tunnelERKN6Router4PortEbb(%class.Lexer* %16, %"struct.Router::Port"* dereferenceable(8) %44, i1 zeroext %47, i1 zeroext false)
  %49 = icmp ne %"class.Lexer::TunnelEnd"* %48, null
  br i1 %49, label %50, label %80

; <label>:50:                                     ; preds = %43
  %51 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 19
  %52 = load %class.ErrorHandler*, %class.ErrorHandler** %51, align 8
  %53 = getelementptr inbounds %class.Lexer, %class.Lexer* %16, i32 0, i32 12
  %54 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %53, align 8
  %55 = load %"struct.Router::Port"*, %"struct.Router::Port"** %6, align 8
  %56 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %55, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  call void @_ZNK5Lexer8Compound16element_landmarkEi(%class.String* sret %11, %"class.Lexer::Compound"* %54, i32 %57)
  %58 = load %"struct.Router::Port"*, %"struct.Router::Port"** %6, align 8
  %59 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  invoke void @_ZNK5Lexer12element_nameEi(%class.String* sret %12, %class.Lexer* %16, i32 %60)
          to label %61 unwind label %71

; <label>:61:                                     ; preds = %50
  %62 = invoke i8* @_ZNK6String5c_strEv(%class.String* %12)
          to label %63 unwind label %75

; <label>:63:                                     ; preds = %61
  %64 = load i8, i8* %7, align 1
  %65 = trunc i8 %64 to i1
  %66 = zext i1 %65 to i64
  %67 = getelementptr inbounds [2 x i8*], [2 x i8*]* @_ZL10port_names, i64 0, i64 %66
  %68 = load i8*, i8** %67, align 8
  %69 = invoke i32 (%class.ErrorHandler*, %class.String*, i8*, ...) @_ZN12ErrorHandler6lerrorERK6StringPKcz(%class.ErrorHandler* %52, %class.String* dereferenceable(24) %11, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.109, i32 0, i32 0), i8* %62, i8* %68)
          to label %70 unwind label %75

; <label>:70:                                     ; preds = %63
  call void @_ZN6StringD2Ev(%class.String* %12) #9
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  br label %80

; <label>:71:                                     ; preds = %50
  %72 = landingpad { i8*, i32 }
          cleanup
  %73 = extractvalue { i8*, i32 } %72, 0
  store i8* %73, i8** %13, align 8
  %74 = extractvalue { i8*, i32 } %72, 1
  store i32 %74, i32* %14, align 4
  br label %79

; <label>:75:                                     ; preds = %63, %61
  %76 = landingpad { i8*, i32 }
          cleanup
  %77 = extractvalue { i8*, i32 } %76, 0
  store i8* %77, i8** %13, align 8
  %78 = extractvalue { i8*, i32 } %76, 1
  store i32 %78, i32* %14, align 4
  call void @_ZN6StringD2Ev(%class.String* %12) #9
  br label %79

; <label>:79:                                     ; preds = %75, %71
  call void @_ZN6StringD2Ev(%class.String* %11) #9
  br label %83

; <label>:80:                                     ; preds = %70, %43
  br label %81

; <label>:81:                                     ; preds = %80, %40
  br label %82

; <label>:82:                                     ; preds = %81, %26
  ret void

; <label>:83:                                     ; preds = %79
  %84 = load i8*, i8** %13, align 8
  %85 = load i32, i32* %14, align 4
  %86 = insertvalue { i8*, i32 } undef, i8* %84, 0
  %87 = insertvalue { i8*, i32 } %86, i32 %85, 1
  resume { i8*, i32 } %87
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(16) %"struct.Router::Connection"* @_ZN6VectorIN6Router10ConnectionEEixEi(%class.Vector.8*, i32) #0 comdat align 2 {
  %3 = alloca %class.Vector.8*, align 8
  %4 = alloca i32, align 4
  store %class.Vector.8* %0, %class.Vector.8** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Vector.8*, %class.Vector.8** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = getelementptr inbounds %class.Vector.8, %class.Vector.8* %5, i32 0, i32 0
  %8 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp ult i32 %6, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %2
  br label %14

; <label>:12:                                     ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.128, i32 0, i32 0), i32 288, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__._ZN6VectorIN6Router10ConnectionEEixEi, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %14

; <label>:14:                                     ; preds = %13, %11
  %15 = getelementptr inbounds %class.Vector.8, %class.Vector.8* %5, i32 0, i32 0
  %16 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %15, i32 0, i32 0
  %17 = load %struct.char_array.10*, %struct.char_array.10** %16, align 8
  %18 = load i32, i32* %4, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %struct.char_array.10, %struct.char_array.10* %17, i64 %19
  %21 = bitcast %struct.char_array.10* %20 to %"struct.Router::Connection"*
  ret %"struct.Router::Connection"* %21
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(8) %"struct.Router::Port"* @_ZN6Router10ConnectionixEi(%"struct.Router::Connection"*, i32) #0 comdat align 2 {
  %3 = alloca %"struct.Router::Connection"*, align 8
  %4 = alloca i32, align 4
  store %"struct.Router::Connection"* %0, %"struct.Router::Connection"** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = icmp sge i32 %6, 0
  br i1 %7, label %8, label %11

; <label>:8:                                      ; preds = %2
  %9 = load i32, i32* %4, align 4
  %10 = icmp slt i32 %9, 2
  br label %11

; <label>:11:                                     ; preds = %8, %2
  %12 = phi i1 [ false, %2 ], [ %10, %8 ]
  br i1 %12, label %13, label %14

; <label>:13:                                     ; preds = %11
  br label %16

; <label>:14:                                     ; preds = %11
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.115, i32 0, i32 0), i32 184, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__._ZN6Router10ConnectionixEi, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %16

; <label>:16:                                     ; preds = %15, %13
  %17 = getelementptr inbounds %"struct.Router::Connection", %"struct.Router::Connection"* %5, i32 0, i32 0
  %18 = load i32, i32* %4, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [2 x %"struct.Router::Port"], [2 x %"struct.Router::Port"]* %17, i64 0, i64 %19
  ret %"struct.Router::Port"* %20
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr i32 @_ZNK6VectorIN6Router4PortEE4sizeEv(%class.Vector.17*) #0 comdat align 2 {
  %2 = alloca %class.Vector.17*, align 8
  store %class.Vector.17* %0, %class.Vector.17** %2, align 8
  %3 = load %class.Vector.17*, %class.Vector.17** %2, align 8
  %4 = getelementptr inbounds %class.Vector.17, %class.Vector.17* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %4, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  ret i32 %6
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(8) %"struct.Router::Port"* @_ZN6VectorIN6Router4PortEEixEi(%class.Vector.17*, i32) #0 comdat align 2 {
  %3 = alloca %class.Vector.17*, align 8
  %4 = alloca i32, align 4
  store %class.Vector.17* %0, %class.Vector.17** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Vector.17*, %class.Vector.17** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = getelementptr inbounds %class.Vector.17, %class.Vector.17* %5, i32 0, i32 0
  %8 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp ult i32 %6, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %2
  br label %14

; <label>:12:                                     ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.128, i32 0, i32 0), i32 288, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN6VectorIN6Router4PortEEixEi, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %14

; <label>:14:                                     ; preds = %13, %11
  %15 = getelementptr inbounds %class.Vector.17, %class.Vector.17* %5, i32 0, i32 0
  %16 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %15, i32 0, i32 0
  %17 = load %struct.char_array*, %struct.char_array** %16, align 8
  %18 = load i32, i32* %4, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %struct.char_array, %struct.char_array* %17, i64 %19
  %21 = bitcast %struct.char_array* %20 to %"struct.Router::Port"*
  ret %"struct.Router::Port"* %21
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN6VectorIN6Router4PortEED2Ev(%class.Vector.17*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.Vector.17*, align 8
  store %class.Vector.17* %0, %class.Vector.17** %2, align 8
  %3 = load %class.Vector.17*, %class.Vector.17** %2, align 8
  %4 = getelementptr inbounds %class.Vector.17, %class.Vector.17* %3, i32 0, i32 0
  call void @_ZN13vector_memoryI18sized_array_memoryILm8EEED2Ev(%class.vector_memory* %4) #9
  ret void
}

declare %class.VariableEnvironment* @_ZNK19VariableEnvironment9parent_ofEi(%class.VariableEnvironment*, i32) #3

declare zeroext i1 @_ZN19VariableEnvironment6defineERK6StringS2_b(%class.VariableEnvironment*, %class.String* dereferenceable(24), %class.String* dereferenceable(24), i1 zeroext) #3

; Function Attrs: noinline optnone uwtable
define linkonce_odr dereferenceable(24) %class.String* @_ZNK19VariableEnvironment4nameEi(%class.VariableEnvironment*, i32) #2 comdat align 2 {
  %3 = alloca %class.VariableEnvironment*, align 8
  %4 = alloca i32, align 4
  store %class.VariableEnvironment* %0, %class.VariableEnvironment** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.VariableEnvironment*, %class.VariableEnvironment** %3, align 8
  %6 = getelementptr inbounds %class.VariableEnvironment, %class.VariableEnvironment* %5, i32 0, i32 1
  %7 = load i32, i32* %4, align 4
  %8 = call dereferenceable(24) %class.String* @_ZNK6VectorI6StringEixEi(%class.Vector.0* %6, i32 %7)
  ret %class.String* %8
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dereferenceable(24) %class.String* @_ZNK19VariableEnvironment5valueEi(%class.VariableEnvironment*, i32) #2 comdat align 2 {
  %3 = alloca %class.VariableEnvironment*, align 8
  %4 = alloca i32, align 4
  store %class.VariableEnvironment* %0, %class.VariableEnvironment** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.VariableEnvironment*, %class.VariableEnvironment** %3, align 8
  %6 = getelementptr inbounds %class.VariableEnvironment, %class.VariableEnvironment* %5, i32 0, i32 2
  %7 = load i32, i32* %4, align 4
  %8 = call dereferenceable(24) %class.String* @_ZNK6VectorI6StringEixEi(%class.Vector.0* %6, i32 %7)
  ret %class.String* %8
}

; Function Attrs: noinline optnone uwtable
define %class.Router* @_ZN5Lexer13create_routerEP6Master(%class.Lexer*, %class.Master*) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %class.Router*, align 8
  %4 = alloca %class.Lexer*, align 8
  %5 = alloca %class.Master*, align 8
  %6 = alloca %class.Router*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %class.Vector.5, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %class.Element*, align 8
  %16 = alloca i32, align 4
  %17 = alloca %class.String, align 8
  %18 = alloca %"struct.Router::Connection"*, align 8
  %19 = alloca i32, align 4
  %20 = alloca %"class.Lexer::TunnelEnd"*, align 8
  %21 = alloca %"struct.Router::Port", align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca %"struct.Router::Connection"*, align 8
  %27 = alloca %"struct.Router::Connection"*, align 8
  %28 = alloca i32, align 4
  store %class.Lexer* %0, %class.Lexer** %4, align 8
  store %class.Master* %1, %class.Master** %5, align 8
  %29 = load %class.Lexer*, %class.Lexer** %4, align 8
  %30 = call i8* @_Znwm(i64 472) #15
  %31 = bitcast i8* %30 to %class.Router*
  %32 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 1
  %33 = getelementptr inbounds %"struct.Lexer::FileState", %"struct.Lexer::FileState"* %32, i32 0, i32 0
  %34 = load %class.Master*, %class.Master** %5, align 8
  invoke void @_ZN6RouterC1ERK6StringP6Master(%class.Router* %31, %class.String* dereferenceable(24) %33, %class.Master* %34)
          to label %35 unwind label %39

; <label>:35:                                     ; preds = %2
  store %class.Router* %31, %class.Router** %6, align 8
  %36 = load %class.Router*, %class.Router** %6, align 8
  %37 = icmp ne %class.Router* %36, null
  br i1 %37, label %43, label %38

; <label>:38:                                     ; preds = %35
  store %class.Router* null, %class.Router** %3, align 8
  br label %438

; <label>:39:                                     ; preds = %2
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %7, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %8, align 4
  call void @_ZdlPv(i8* %30) #14
  br label %440

; <label>:43:                                     ; preds = %35
  store i32 0, i32* %9, align 4
  br label %44

; <label>:44:                                     ; preds = %60, %43
  %45 = load i32, i32* %9, align 4
  %46 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 11
  %47 = call i32 @_ZNK19VariableEnvironment4sizeEv(%class.VariableEnvironment* %46)
  %48 = icmp slt i32 %45, %47
  br i1 %48, label %49, label %63

; <label>:49:                                     ; preds = %44
  %50 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 12
  %51 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %50, align 8
  %52 = call dereferenceable(56) %class.VariableEnvironment* @_ZN5Lexer8Compound5scopeEv(%"class.Lexer::Compound"* %51)
  %53 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 11
  %54 = load i32, i32* %9, align 4
  %55 = call dereferenceable(24) %class.String* @_ZNK19VariableEnvironment4nameEi(%class.VariableEnvironment* %53, i32 %54)
  %56 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 11
  %57 = load i32, i32* %9, align 4
  %58 = call dereferenceable(24) %class.String* @_ZNK19VariableEnvironment5valueEi(%class.VariableEnvironment* %56, i32 %57)
  %59 = call zeroext i1 @_ZN19VariableEnvironment6defineERK6StringS2_b(%class.VariableEnvironment* %52, %class.String* dereferenceable(24) %55, %class.String* dereferenceable(24) %58, i1 zeroext true)
  br label %60

; <label>:60:                                     ; preds = %49
  %61 = load i32, i32* %9, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %9, align 4
  br label %44

; <label>:63:                                     ; preds = %44
  %64 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 12
  %65 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %64, align 8
  %66 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %65, i32 0, i32 11
  %67 = call i32 @_ZNK6VectorIiE4sizeEv(%class.Vector.5* %66)
  store i32 %67, i32* %10, align 4
  store i32 0, i32* %11, align 4
  br label %68

; <label>:68:                                     ; preds = %77, %63
  %69 = load i32, i32* %11, align 4
  %70 = load i32, i32* %10, align 4
  %71 = icmp slt i32 %69, %70
  br i1 %71, label %72, label %80

; <label>:72:                                     ; preds = %68
  %73 = load i32, i32* %11, align 4
  %74 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 12
  %75 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %74, align 8
  %76 = call dereferenceable(56) %class.VariableEnvironment* @_ZN5Lexer8Compound5scopeEv(%"class.Lexer::Compound"* %75)
  call void @_ZN5Lexer23expand_compound_elementEiR19VariableEnvironment(%class.Lexer* %29, i32 %73, %class.VariableEnvironment* dereferenceable(56) %76)
  br label %77

; <label>:77:                                     ; preds = %72
  %78 = load i32, i32* %11, align 4
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %11, align 4
  br label %68

; <label>:80:                                     ; preds = %68
  call void @_ZN6VectorIiEC2Ev(%class.Vector.5* %12)
  store i32 0, i32* %13, align 4
  br label %81

; <label>:81:                                     ; preds = %178, %80
  %82 = load i32, i32* %13, align 4
  %83 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 12
  %84 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %83, align 8
  %85 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %84, i32 0, i32 11
  %86 = invoke i32 @_ZNK6VectorIiE4sizeEv(%class.Vector.5* %85)
          to label %87 unwind label %101

; <label>:87:                                     ; preds = %81
  %88 = icmp slt i32 %82, %86
  br i1 %88, label %89, label %181

; <label>:89:                                     ; preds = %87
  %90 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 12
  %91 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %90, align 8
  %92 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %91, i32 0, i32 11
  %93 = load i32, i32* %13, align 4
  %94 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %92, i32 %93)
          to label %95 unwind label %101

; <label>:95:                                     ; preds = %89
  %96 = load i32, i32* %94, align 4
  store i32 %96, i32* %14, align 4
  %97 = load i32, i32* %14, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %105

; <label>:99:                                     ; preds = %95
  invoke void @_ZN6VectorIiE9push_backEi(%class.Vector.5* %12, i32 -1)
          to label %100 unwind label %101

; <label>:100:                                    ; preds = %99
  br label %177

; <label>:101:                                    ; preds = %430, %425, %420, %414, %404, %399, %394, %389, %385, %378, %371, %363, %357, %354, %349, %344, %335, %331, %327, %323, %319, %316, %308, %302, %295, %284, %282, %275, %271, %269, %263, %253, %237, %229, %226, %219, %215, %208, %204, %192, %186, %181, %170, %154, %151, %148, %142, %136, %130, %122, %115, %109, %105, %99, %89, %81
  %102 = landingpad { i8*, i32 }
          cleanup
  %103 = extractvalue { i8*, i32 } %102, 0
  store i8* %103, i8** %7, align 8
  %104 = extractvalue { i8*, i32 } %102, 1
  store i32 %104, i32* %8, align 4
  br label %437

; <label>:105:                                    ; preds = %95
  %106 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 8
  %107 = load i32, i32* %14, align 4
  %108 = invoke dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %106, i32 %107)
          to label %109 unwind label %101

; <label>:109:                                    ; preds = %105
  %110 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %108, i32 0, i32 0
  %111 = load %class.Element* (i64)*, %class.Element* (i64)** %110, align 8
  %112 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 8
  %113 = load i32, i32* %14, align 4
  %114 = invoke dereferenceable(48) %"struct.Lexer::ElementType"* @_ZN6VectorIN5Lexer11ElementTypeEEixEi(%class.Vector.14* %112, i32 %113)
          to label %115 unwind label %101

; <label>:115:                                    ; preds = %109
  %116 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %114, i32 0, i32 1
  %117 = load i64, i64* %116, align 8
  %118 = invoke %class.Element* %111(i64 %117)
          to label %119 unwind label %101

; <label>:119:                                    ; preds = %115
  store %class.Element* %118, %class.Element** %15, align 8
  %120 = load %class.Element*, %class.Element** %15, align 8
  %121 = icmp ne %class.Element* %120, null
  br i1 %121, label %122, label %154

; <label>:122:                                    ; preds = %119
  %123 = load %class.Router*, %class.Router** %6, align 8
  %124 = load %class.Element*, %class.Element** %15, align 8
  %125 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 12
  %126 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %125, align 8
  %127 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %126, i32 0, i32 12
  %128 = load i32, i32* %13, align 4
  %129 = invoke dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %127, i32 %128)
          to label %130 unwind label %101

; <label>:130:                                    ; preds = %122
  %131 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 12
  %132 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %131, align 8
  %133 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %132, i32 0, i32 13
  %134 = load i32, i32* %13, align 4
  %135 = invoke dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %133, i32 %134)
          to label %136 unwind label %101

; <label>:136:                                    ; preds = %130
  %137 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 12
  %138 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %137, align 8
  %139 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %138, i32 0, i32 14
  %140 = load i32, i32* %13, align 4
  %141 = invoke dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %139, i32 %140)
          to label %142 unwind label %101

; <label>:142:                                    ; preds = %136
  %143 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 12
  %144 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %143, align 8
  %145 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %144, i32 0, i32 15
  %146 = load i32, i32* %13, align 4
  %147 = invoke dereferenceable(4) i32* @_ZN6VectorIjEixEi(%class.Vector.2* %145, i32 %146)
          to label %148 unwind label %101

; <label>:148:                                    ; preds = %142
  %149 = load i32, i32* %147, align 4
  %150 = invoke i32 @_ZN6Router11add_elementEP7ElementRK6StringS4_S4_j(%class.Router* %123, %class.Element* %124, %class.String* dereferenceable(24) %129, %class.String* dereferenceable(24) %135, %class.String* dereferenceable(24) %141, i32 %149)
          to label %151 unwind label %101

; <label>:151:                                    ; preds = %148
  store i32 %150, i32* %16, align 4
  %152 = load i32, i32* %16, align 4
  invoke void @_ZN6VectorIiE9push_backEi(%class.Vector.5* %12, i32 %152)
          to label %153 unwind label %101

; <label>:153:                                    ; preds = %151
  br label %176

; <label>:154:                                    ; preds = %119
  %155 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 19
  %156 = load %class.ErrorHandler*, %class.ErrorHandler** %155, align 8
  %157 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 12
  %158 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %157, align 8
  %159 = load i32, i32* %13, align 4
  invoke void @_ZNK5Lexer8Compound16element_landmarkEi(%class.String* sret %17, %"class.Lexer::Compound"* %158, i32 %159)
          to label %160 unwind label %101

; <label>:160:                                    ; preds = %154
  %161 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 12
  %162 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %161, align 8
  %163 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %162, i32 0, i32 12
  %164 = load i32, i32* %13, align 4
  %165 = invoke dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %163, i32 %164)
          to label %166 unwind label %172

; <label>:166:                                    ; preds = %160
  %167 = invoke i8* @_ZNK6String5c_strEv(%class.String* %165)
          to label %168 unwind label %172

; <label>:168:                                    ; preds = %166
  %169 = invoke i32 (%class.ErrorHandler*, %class.String*, i8*, ...) @_ZN12ErrorHandler6lerrorERK6StringPKcz(%class.ErrorHandler* %156, %class.String* dereferenceable(24) %17, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.101, i32 0, i32 0), i8* %167)
          to label %170 unwind label %172

; <label>:170:                                    ; preds = %168
  call void @_ZN6StringD2Ev(%class.String* %17) #9
  invoke void @_ZN6VectorIiE9push_backEi(%class.Vector.5* %12, i32 -1)
          to label %171 unwind label %101

; <label>:171:                                    ; preds = %170
  br label %176

; <label>:172:                                    ; preds = %168, %166, %160
  %173 = landingpad { i8*, i32 }
          cleanup
  %174 = extractvalue { i8*, i32 } %173, 0
  store i8* %174, i8** %7, align 8
  %175 = extractvalue { i8*, i32 } %173, 1
  store i32 %175, i32* %8, align 4
  call void @_ZN6StringD2Ev(%class.String* %17) #9
  br label %437

; <label>:176:                                    ; preds = %171, %153
  br label %177

; <label>:177:                                    ; preds = %176, %100
  br label %178

; <label>:178:                                    ; preds = %177
  %179 = load i32, i32* %13, align 4
  %180 = add nsw i32 %179, 1
  store i32 %180, i32* %13, align 4
  br label %81

; <label>:181:                                    ; preds = %87
  %182 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 15
  %183 = invoke i32 @_ZNK6VectorIPN5Lexer9TunnelEndEE4sizeEv(%class.Vector.16* %182)
          to label %184 unwind label %101

; <label>:184:                                    ; preds = %181
  %185 = icmp ne i32 %183, 0
  br i1 %185, label %186, label %253

; <label>:186:                                    ; preds = %184
  %187 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 12
  %188 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %187, align 8
  %189 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %188, i32 0, i32 19
  %190 = invoke %"struct.Router::Connection"* @_ZN6VectorIN6Router10ConnectionEE5beginEv(%class.Vector.8* %189)
          to label %191 unwind label %101

; <label>:191:                                    ; preds = %186
  store %"struct.Router::Connection"* %190, %"struct.Router::Connection"** %18, align 8
  br label %192

; <label>:192:                                    ; preds = %249, %191
  %193 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %18, align 8
  %194 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 12
  %195 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %194, align 8
  %196 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %195, i32 0, i32 19
  %197 = invoke %"struct.Router::Connection"* @_ZN6VectorIN6Router10ConnectionEE3endEv(%class.Vector.8* %196)
          to label %198 unwind label %101

; <label>:198:                                    ; preds = %192
  %199 = icmp ne %"struct.Router::Connection"* %193, %197
  br i1 %199, label %200, label %252

; <label>:200:                                    ; preds = %198
  store i32 0, i32* %19, align 4
  br label %201

; <label>:201:                                    ; preds = %245, %200
  %202 = load i32, i32* %19, align 4
  %203 = icmp slt i32 %202, 2
  br i1 %203, label %204, label %248

; <label>:204:                                    ; preds = %201
  %205 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %18, align 8
  %206 = load i32, i32* %19, align 4
  %207 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZNK6Router10ConnectionixEi(%"struct.Router::Connection"* %205, i32 %206)
          to label %208 unwind label %101

; <label>:208:                                    ; preds = %204
  %209 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %207, i32 0, i32 0
  %210 = load i32, i32* %209, align 4
  %211 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %12, i32 %210)
          to label %212 unwind label %101

; <label>:212:                                    ; preds = %208
  %213 = load i32, i32* %211, align 4
  %214 = icmp slt i32 %213, 0
  br i1 %214, label %215, label %244

; <label>:215:                                    ; preds = %212
  %216 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %18, align 8
  %217 = load i32, i32* %19, align 4
  %218 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZNK6Router10ConnectionixEi(%"struct.Router::Connection"* %216, i32 %217)
          to label %219 unwind label %101

; <label>:219:                                    ; preds = %215
  %220 = load i32, i32* %19, align 4
  %221 = icmp ne i32 %220, 0
  %222 = invoke %"class.Lexer::TunnelEnd"* @_ZN5Lexer11find_tunnelERKN6Router4PortEbb(%class.Lexer* %29, %"struct.Router::Port"* dereferenceable(8) %218, i1 zeroext %221, i1 zeroext false)
          to label %223 unwind label %101

; <label>:223:                                    ; preds = %219
  store %"class.Lexer::TunnelEnd"* %222, %"class.Lexer::TunnelEnd"** %20, align 8
  %224 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %20, align 8
  %225 = icmp ne %"class.Lexer::TunnelEnd"* %224, null
  br i1 %225, label %226, label %243

; <label>:226:                                    ; preds = %223
  %227 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %20, align 8
  %228 = invoke %"class.Lexer::TunnelEnd"* @_ZNK5Lexer9TunnelEnd5otherEv(%"class.Lexer::TunnelEnd"* %227)
          to label %229 unwind label %101

; <label>:229:                                    ; preds = %226
  %230 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %228, i32 0, i32 1
  %231 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %18, align 8
  %232 = load i32, i32* %19, align 4
  %233 = icmp ne i32 %232, 0
  %234 = xor i1 %233, true
  %235 = zext i1 %234 to i32
  %236 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZNK6Router10ConnectionixEi(%"struct.Router::Connection"* %231, i32 %235)
          to label %237 unwind label %101

; <label>:237:                                    ; preds = %229
  %238 = bitcast %"struct.Router::Port"* %21 to i8*
  %239 = bitcast %"struct.Router::Port"* %236 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %238, i8* %239, i64 8, i32 4, i1 false)
  %240 = bitcast %"struct.Router::Port"* %21 to i64*
  %241 = load i64, i64* %240, align 4
  invoke void @_ZN6VectorIN6Router4PortEE9push_backES1_(%class.Vector.17* %230, i64 %241)
          to label %242 unwind label %101

; <label>:242:                                    ; preds = %237
  br label %243

; <label>:243:                                    ; preds = %242, %223
  br label %244

; <label>:244:                                    ; preds = %243, %212
  br label %245

; <label>:245:                                    ; preds = %244
  %246 = load i32, i32* %19, align 4
  %247 = add nsw i32 %246, 1
  store i32 %247, i32* %19, align 4
  br label %201

; <label>:248:                                    ; preds = %201
  br label %249

; <label>:249:                                    ; preds = %248
  %250 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %18, align 8
  %251 = getelementptr inbounds %"struct.Router::Connection", %"struct.Router::Connection"* %250, i32 1
  store %"struct.Router::Connection"* %251, %"struct.Router::Connection"** %18, align 8
  br label %192

; <label>:252:                                    ; preds = %198
  br label %253

; <label>:253:                                    ; preds = %252, %184
  %254 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 12
  %255 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %254, align 8
  %256 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %255, i32 0, i32 19
  %257 = invoke i32 @_ZNK6VectorIN6Router10ConnectionEE4sizeEv(%class.Vector.8* %256)
          to label %258 unwind label %101

; <label>:258:                                    ; preds = %253
  store i32 %257, i32* %22, align 4
  store i32 0, i32* %23, align 4
  br label %259

; <label>:259:                                    ; preds = %299, %258
  %260 = load i32, i32* %23, align 4
  %261 = load i32, i32* %22, align 4
  %262 = icmp slt i32 %260, %261
  br i1 %262, label %263, label %302

; <label>:263:                                    ; preds = %259
  %264 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 12
  %265 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %264, align 8
  %266 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %265, i32 0, i32 19
  %267 = load i32, i32* %23, align 4
  %268 = invoke dereferenceable(16) %"struct.Router::Connection"* @_ZN6VectorIN6Router10ConnectionEEixEi(%class.Vector.8* %266, i32 %267)
          to label %269 unwind label %101

; <label>:269:                                    ; preds = %263
  %270 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZN6Router10ConnectionixEi(%"struct.Router::Connection"* %268, i32 1)
          to label %271 unwind label %101

; <label>:271:                                    ; preds = %269
  %272 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %270, i32 0, i32 0
  %273 = load i32, i32* %272, align 4
  %274 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %12, i32 %273)
          to label %275 unwind label %101

; <label>:275:                                    ; preds = %271
  %276 = load i32, i32* %274, align 4
  store i32 %276, i32* %24, align 4
  %277 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 12
  %278 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %277, align 8
  %279 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %278, i32 0, i32 19
  %280 = load i32, i32* %23, align 4
  %281 = invoke dereferenceable(16) %"struct.Router::Connection"* @_ZN6VectorIN6Router10ConnectionEEixEi(%class.Vector.8* %279, i32 %280)
          to label %282 unwind label %101

; <label>:282:                                    ; preds = %275
  %283 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZN6Router10ConnectionixEi(%"struct.Router::Connection"* %281, i32 0)
          to label %284 unwind label %101

; <label>:284:                                    ; preds = %282
  %285 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %283, i32 0, i32 0
  %286 = load i32, i32* %285, align 4
  %287 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %12, i32 %286)
          to label %288 unwind label %101

; <label>:288:                                    ; preds = %284
  %289 = load i32, i32* %287, align 4
  store i32 %289, i32* %25, align 4
  %290 = load i32, i32* %24, align 4
  %291 = icmp slt i32 %290, 0
  br i1 %291, label %295, label %292

; <label>:292:                                    ; preds = %288
  %293 = load i32, i32* %25, align 4
  %294 = icmp slt i32 %293, 0
  br i1 %294, label %295, label %298

; <label>:295:                                    ; preds = %292, %288
  %296 = load i32, i32* %23, align 4
  invoke void @_ZN5Lexer22add_router_connectionsEiRK6VectorIiE(%class.Lexer* %29, i32 %296, %class.Vector.5* dereferenceable(16) %12)
          to label %297 unwind label %101

; <label>:297:                                    ; preds = %295
  br label %298

; <label>:298:                                    ; preds = %297, %292
  br label %299

; <label>:299:                                    ; preds = %298
  %300 = load i32, i32* %23, align 4
  %301 = add nsw i32 %300, 1
  store i32 %301, i32* %23, align 4
  br label %259

; <label>:302:                                    ; preds = %259
  %303 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 12
  %304 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %303, align 8
  %305 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %304, i32 0, i32 19
  %306 = invoke %"struct.Router::Connection"* @_ZN6VectorIN6Router10ConnectionEE5beginEv(%class.Vector.8* %305)
          to label %307 unwind label %101

; <label>:307:                                    ; preds = %302
  store %"struct.Router::Connection"* %306, %"struct.Router::Connection"** %26, align 8
  br label %308

; <label>:308:                                    ; preds = %341, %307
  %309 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %26, align 8
  %310 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 12
  %311 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %310, align 8
  %312 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %311, i32 0, i32 19
  %313 = invoke %"struct.Router::Connection"* @_ZN6VectorIN6Router10ConnectionEE3endEv(%class.Vector.8* %312)
          to label %314 unwind label %101

; <label>:314:                                    ; preds = %308
  %315 = icmp ne %"struct.Router::Connection"* %309, %313
  br i1 %315, label %316, label %344

; <label>:316:                                    ; preds = %314
  %317 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %26, align 8
  %318 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZN6Router10ConnectionixEi(%"struct.Router::Connection"* %317, i32 0)
          to label %319 unwind label %101

; <label>:319:                                    ; preds = %316
  %320 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %318, i32 0, i32 0
  %321 = load i32, i32* %320, align 4
  %322 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %12, i32 %321)
          to label %323 unwind label %101

; <label>:323:                                    ; preds = %319
  %324 = load i32, i32* %322, align 4
  %325 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %26, align 8
  %326 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZN6Router10ConnectionixEi(%"struct.Router::Connection"* %325, i32 0)
          to label %327 unwind label %101

; <label>:327:                                    ; preds = %323
  %328 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %326, i32 0, i32 0
  store i32 %324, i32* %328, align 4
  %329 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %26, align 8
  %330 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZN6Router10ConnectionixEi(%"struct.Router::Connection"* %329, i32 1)
          to label %331 unwind label %101

; <label>:331:                                    ; preds = %327
  %332 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %330, i32 0, i32 0
  %333 = load i32, i32* %332, align 4
  %334 = invoke dereferenceable(4) i32* @_ZN6VectorIiEixEi(%class.Vector.5* %12, i32 %333)
          to label %335 unwind label %101

; <label>:335:                                    ; preds = %331
  %336 = load i32, i32* %334, align 4
  %337 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %26, align 8
  %338 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZN6Router10ConnectionixEi(%"struct.Router::Connection"* %337, i32 1)
          to label %339 unwind label %101

; <label>:339:                                    ; preds = %335
  %340 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %338, i32 0, i32 0
  store i32 %336, i32* %340, align 4
  br label %341

; <label>:341:                                    ; preds = %339
  %342 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %26, align 8
  %343 = getelementptr inbounds %"struct.Router::Connection", %"struct.Router::Connection"* %342, i32 1
  store %"struct.Router::Connection"* %343, %"struct.Router::Connection"** %26, align 8
  br label %308

; <label>:344:                                    ; preds = %314
  %345 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 12
  %346 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %345, align 8
  %347 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %346, i32 0, i32 19
  %348 = invoke %"struct.Router::Connection"* @_ZN6VectorIN6Router10ConnectionEE5beginEv(%class.Vector.8* %347)
          to label %349 unwind label %101

; <label>:349:                                    ; preds = %344
  %350 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 12
  %351 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %350, align 8
  %352 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %351, i32 0, i32 19
  %353 = invoke i32 @_ZNK6VectorIN6Router10ConnectionEE4sizeEv(%class.Vector.8* %352)
          to label %354 unwind label %101

; <label>:354:                                    ; preds = %349
  %355 = sext i32 %353 to i64
  %356 = invoke i32 @_Z11click_qsortIN6Router10ConnectionEEiPT_m(%"struct.Router::Connection"* %348, i64 %355)
          to label %357 unwind label %101

; <label>:357:                                    ; preds = %354
  %358 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 12
  %359 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %358, align 8
  %360 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %359, i32 0, i32 19
  %361 = invoke %"struct.Router::Connection"* @_ZN6VectorIN6Router10ConnectionEE5beginEv(%class.Vector.8* %360)
          to label %362 unwind label %101

; <label>:362:                                    ; preds = %357
  store %"struct.Router::Connection"* %361, %"struct.Router::Connection"** %27, align 8
  br label %363

; <label>:363:                                    ; preds = %410, %362
  %364 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %27, align 8
  %365 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 12
  %366 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %365, align 8
  %367 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %366, i32 0, i32 19
  %368 = invoke %"struct.Router::Connection"* @_ZN6VectorIN6Router10ConnectionEE3endEv(%class.Vector.8* %367)
          to label %369 unwind label %101

; <label>:369:                                    ; preds = %363
  %370 = icmp ne %"struct.Router::Connection"* %364, %368
  br i1 %370, label %371, label %413

; <label>:371:                                    ; preds = %369
  %372 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %27, align 8
  %373 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZN6Router10ConnectionixEi(%"struct.Router::Connection"* %372, i32 0)
          to label %374 unwind label %101

; <label>:374:                                    ; preds = %371
  %375 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %373, i32 0, i32 0
  %376 = load i32, i32* %375, align 4
  %377 = icmp sge i32 %376, 0
  br i1 %377, label %378, label %409

; <label>:378:                                    ; preds = %374
  %379 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %27, align 8
  %380 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZN6Router10ConnectionixEi(%"struct.Router::Connection"* %379, i32 1)
          to label %381 unwind label %101

; <label>:381:                                    ; preds = %378
  %382 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %380, i32 0, i32 0
  %383 = load i32, i32* %382, align 4
  %384 = icmp sge i32 %383, 0
  br i1 %384, label %385, label %409

; <label>:385:                                    ; preds = %381
  %386 = load %class.Router*, %class.Router** %6, align 8
  %387 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %27, align 8
  %388 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZN6Router10ConnectionixEi(%"struct.Router::Connection"* %387, i32 1)
          to label %389 unwind label %101

; <label>:389:                                    ; preds = %385
  %390 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %388, i32 0, i32 0
  %391 = load i32, i32* %390, align 4
  %392 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %27, align 8
  %393 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZN6Router10ConnectionixEi(%"struct.Router::Connection"* %392, i32 1)
          to label %394 unwind label %101

; <label>:394:                                    ; preds = %389
  %395 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %393, i32 0, i32 1
  %396 = load i32, i32* %395, align 4
  %397 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %27, align 8
  %398 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZN6Router10ConnectionixEi(%"struct.Router::Connection"* %397, i32 0)
          to label %399 unwind label %101

; <label>:399:                                    ; preds = %394
  %400 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %398, i32 0, i32 0
  %401 = load i32, i32* %400, align 4
  %402 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %27, align 8
  %403 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZN6Router10ConnectionixEi(%"struct.Router::Connection"* %402, i32 0)
          to label %404 unwind label %101

; <label>:404:                                    ; preds = %399
  %405 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %403, i32 0, i32 1
  %406 = load i32, i32* %405, align 4
  %407 = invoke i32 @_ZN6Router14add_connectionEiiii(%class.Router* %386, i32 %391, i32 %396, i32 %401, i32 %406)
          to label %408 unwind label %101

; <label>:408:                                    ; preds = %404
  br label %409

; <label>:409:                                    ; preds = %408, %381, %374
  br label %410

; <label>:410:                                    ; preds = %409
  %411 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %27, align 8
  %412 = getelementptr inbounds %"struct.Router::Connection", %"struct.Router::Connection"* %411, i32 1
  store %"struct.Router::Connection"* %412, %"struct.Router::Connection"** %27, align 8
  br label %363

; <label>:413:                                    ; preds = %369
  store i32 0, i32* %28, align 4
  br label %414

; <label>:414:                                    ; preds = %432, %413
  %415 = load i32, i32* %28, align 4
  %416 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 17
  %417 = invoke i32 @_ZNK6VectorI6StringE4sizeEv(%class.Vector.0* %416)
          to label %418 unwind label %101

; <label>:418:                                    ; preds = %414
  %419 = icmp slt i32 %415, %417
  br i1 %419, label %420, label %435

; <label>:420:                                    ; preds = %418
  %421 = load %class.Router*, %class.Router** %6, align 8
  %422 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 17
  %423 = load i32, i32* %28, align 4
  %424 = invoke dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %422, i32 %423)
          to label %425 unwind label %101

; <label>:425:                                    ; preds = %420
  %426 = getelementptr inbounds %class.Lexer, %class.Lexer* %29, i32 0, i32 17
  %427 = load i32, i32* %28, align 4
  %428 = add nsw i32 %427, 1
  %429 = invoke dereferenceable(24) %class.String* @_ZN6VectorI6StringEixEi(%class.Vector.0* %426, i32 %428)
          to label %430 unwind label %101

; <label>:430:                                    ; preds = %425
  invoke void @_ZN6Router15add_requirementERK6StringS2_(%class.Router* %421, %class.String* dereferenceable(24) %424, %class.String* dereferenceable(24) %429)
          to label %431 unwind label %101

; <label>:431:                                    ; preds = %430
  br label %432

; <label>:432:                                    ; preds = %431
  %433 = load i32, i32* %28, align 4
  %434 = add nsw i32 %433, 2
  store i32 %434, i32* %28, align 4
  br label %414

; <label>:435:                                    ; preds = %418
  %436 = load %class.Router*, %class.Router** %6, align 8
  store %class.Router* %436, %class.Router** %3, align 8
  call void @_ZN6VectorIiED2Ev(%class.Vector.5* %12) #9
  br label %438

; <label>:437:                                    ; preds = %172, %101
  call void @_ZN6VectorIiED2Ev(%class.Vector.5* %12) #9
  br label %440

; <label>:438:                                    ; preds = %435, %38
  %439 = load %class.Router*, %class.Router** %3, align 8
  ret %class.Router* %439

; <label>:440:                                    ; preds = %437, %39
  %441 = load i8*, i8** %7, align 8
  %442 = load i32, i32* %8, align 4
  %443 = insertvalue { i8*, i32 } undef, i8* %441, 0
  %444 = insertvalue { i8*, i32 } %443, i32 %442, 1
  resume { i8*, i32 } %444
}

declare void @_ZN6RouterC1ERK6StringP6Master(%class.Router*, %class.String* dereferenceable(24), %class.Master*) unnamed_addr #3

declare i32 @_ZN6Router11add_elementEP7ElementRK6StringS4_S4_j(%class.Router*, %class.Element*, %class.String* dereferenceable(24), %class.String* dereferenceable(24), %class.String* dereferenceable(24), i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr i32 @_ZNK6VectorIPN5Lexer9TunnelEndEE4sizeEv(%class.Vector.16*) #0 comdat align 2 {
  %2 = alloca %class.Vector.16*, align 8
  store %class.Vector.16* %0, %class.Vector.16** %2, align 8
  %3 = load %class.Vector.16*, %class.Vector.16** %2, align 8
  %4 = getelementptr inbounds %class.Vector.16, %class.Vector.16* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %4, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  ret i32 %6
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6VectorIN6Router4PortEE9push_backES1_(%class.Vector.17*, i64) #2 comdat align 2 {
  %3 = alloca %"struct.Router::Port", align 4
  %4 = alloca %class.Vector.17*, align 8
  %5 = bitcast %"struct.Router::Port"* %3 to i64*
  store i64 %1, i64* %5, align 4
  store %class.Vector.17* %0, %class.Vector.17** %4, align 8
  %6 = load %class.Vector.17*, %class.Vector.17** %4, align 8
  %7 = getelementptr inbounds %class.Vector.17, %class.Vector.17* %6, i32 0, i32 0
  %8 = call %struct.char_array* @_ZN18sized_array_memoryILm8EE4castIN6Router4PortEEEP10char_arrayILm8EEPT_(%"struct.Router::Port"* %3)
  call void @_ZN13vector_memoryI18sized_array_memoryILm8EEE9push_backEPK10char_arrayILm8EE(%class.vector_memory* %7, %struct.char_array* %8)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr i32 @_ZNK6VectorIN6Router10ConnectionEE4sizeEv(%class.Vector.8*) #0 comdat align 2 {
  %2 = alloca %class.Vector.8*, align 8
  store %class.Vector.8* %0, %class.Vector.8** %2, align 8
  %3 = load %class.Vector.8*, %class.Vector.8** %2, align 8
  %4 = getelementptr inbounds %class.Vector.8, %class.Vector.8* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %4, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  ret i32 %6
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr i32 @_Z11click_qsortIN6Router10ConnectionEEiPT_m(%"struct.Router::Connection"*, i64) #2 comdat {
  %3 = alloca %"struct.Router::Connection"*, align 8
  %4 = alloca i64, align 8
  store %"struct.Router::Connection"* %0, %"struct.Router::Connection"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %3, align 8
  %6 = bitcast %"struct.Router::Connection"* %5 to i8*
  %7 = load i64, i64* %4, align 8
  %8 = call i32 @_Z11click_qsortPvmmPFiPKvS1_S_ES_(i8* %6, i64 %7, i64 16, i32 (i8*, i8*, i8*)* @_Z13click_compareIN6Router10ConnectionEEiPKvS3_Pv, i8* null)
  ret i32 %8
}

declare i32 @_ZN6Router14add_connectionEiiii(%class.Router*, i32, i32, i32, i32) #3

declare void @_ZN6Router15add_requirementERK6StringS2_(%class.Router*, %class.String* dereferenceable(24), %class.String* dereferenceable(24)) #3

; Function Attrs: noinline nounwind optnone uwtable
define void @_ZN10LexerExtra7requireE6StringS0_P12ErrorHandler(%class.LexerExtra*, %class.String*, %class.String*, %class.ErrorHandler*) unnamed_addr #0 align 2 {
  %5 = alloca %class.LexerExtra*, align 8
  %6 = alloca %class.ErrorHandler*, align 8
  store %class.LexerExtra* %0, %class.LexerExtra** %5, align 8
  store %class.ErrorHandler* %3, %class.ErrorHandler** %6, align 8
  %7 = load %class.LexerExtra*, %class.LexerExtra** %5, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(8) %"class.Lexer::TunnelEnd"** @_ZN6VectorIPN5Lexer9TunnelEndEEixEi(%class.Vector.16*, i32) #0 comdat align 2 {
  %3 = alloca %class.Vector.16*, align 8
  %4 = alloca i32, align 4
  store %class.Vector.16* %0, %class.Vector.16** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Vector.16*, %class.Vector.16** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = getelementptr inbounds %class.Vector.16, %class.Vector.16* %5, i32 0, i32 0
  %8 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp ult i32 %6, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %2
  br label %14

; <label>:12:                                     ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.128, i32 0, i32 0), i32 288, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__._ZN6VectorIPN5Lexer9TunnelEndEEixEi, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %14

; <label>:14:                                     ; preds = %13, %11
  %15 = getelementptr inbounds %class.Vector.16, %class.Vector.16* %5, i32 0, i32 0
  %16 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %15, i32 0, i32 0
  %17 = load %struct.char_array*, %struct.char_array** %16, align 8
  %18 = load i32, i32* %4, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %struct.char_array, %struct.char_array* %17, i64 %19
  %21 = bitcast %struct.char_array* %20 to %"class.Lexer::TunnelEnd"**
  ret %"class.Lexer::TunnelEnd"** %21
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr %"class.Lexer::TunnelEnd"** @_ZN6VectorIPN5Lexer9TunnelEndEE6insertEPS2_S2_(%class.Vector.16*, %"class.Lexer::TunnelEnd"**, %"class.Lexer::TunnelEnd"*) #2 comdat align 2 {
  %4 = alloca %class.Vector.16*, align 8
  %5 = alloca %"class.Lexer::TunnelEnd"**, align 8
  %6 = alloca %"class.Lexer::TunnelEnd"*, align 8
  store %class.Vector.16* %0, %class.Vector.16** %4, align 8
  store %"class.Lexer::TunnelEnd"** %1, %"class.Lexer::TunnelEnd"*** %5, align 8
  store %"class.Lexer::TunnelEnd"* %2, %"class.Lexer::TunnelEnd"** %6, align 8
  %7 = load %class.Vector.16*, %class.Vector.16** %4, align 8
  %8 = getelementptr inbounds %class.Vector.16, %class.Vector.16* %7, i32 0, i32 0
  %9 = load %"class.Lexer::TunnelEnd"**, %"class.Lexer::TunnelEnd"*** %5, align 8
  %10 = call %struct.char_array* @_ZN18sized_array_memoryILm8EE4castIPN5Lexer9TunnelEndEEEP10char_arrayILm8EEPT_(%"class.Lexer::TunnelEnd"** %9)
  %11 = call %struct.char_array* @_ZN18sized_array_memoryILm8EE4castIPN5Lexer9TunnelEndEEEP10char_arrayILm8EEPT_(%"class.Lexer::TunnelEnd"** %6)
  %12 = call %struct.char_array* @_ZN13vector_memoryI18sized_array_memoryILm8EEE6insertEP10char_arrayILm8EEPKS4_(%class.vector_memory* %8, %struct.char_array* %10, %struct.char_array* %11)
  %13 = bitcast %struct.char_array* %12 to %"class.Lexer::TunnelEnd"**
  ret %"class.Lexer::TunnelEnd"** %13
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr zeroext i1 @_ZNK5Lexer9TunnelEnd8isoutputEv(%"class.Lexer::TunnelEnd"*) #0 comdat align 2 {
  %2 = alloca %"class.Lexer::TunnelEnd"*, align 8
  store %"class.Lexer::TunnelEnd"* %0, %"class.Lexer::TunnelEnd"** %2, align 8
  %3 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %2, align 8
  %4 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %3, i32 0, i32 3
  %5 = load i8, i8* %4, align 1
  %6 = trunc i8 %5 to i1
  ret i1 %6
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(8) %"struct.Router::Port"* @_ZNK5Lexer9TunnelEnd4portEv(%"class.Lexer::TunnelEnd"*) #0 comdat align 2 {
  %2 = alloca %"class.Lexer::TunnelEnd"*, align 8
  store %"class.Lexer::TunnelEnd"* %0, %"class.Lexer::TunnelEnd"** %2, align 8
  %3 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %2, align 8
  %4 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %3, i32 0, i32 0
  ret %"struct.Router::Port"* %4
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN5Lexer9TunnelEndC2ERKN6Router4PortEbPS0_(%"class.Lexer::TunnelEnd"*, %"struct.Router::Port"* dereferenceable(8), i1 zeroext, %"class.Lexer::TunnelEnd"*) unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.Lexer::TunnelEnd"*, align 8
  %6 = alloca %"struct.Router::Port"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.Lexer::TunnelEnd"*, align 8
  store %"class.Lexer::TunnelEnd"* %0, %"class.Lexer::TunnelEnd"** %5, align 8
  store %"struct.Router::Port"* %1, %"struct.Router::Port"** %6, align 8
  %9 = zext i1 %2 to i8
  store i8 %9, i8* %7, align 1
  store %"class.Lexer::TunnelEnd"* %3, %"class.Lexer::TunnelEnd"** %8, align 8
  %10 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %5, align 8
  %11 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %10, i32 0, i32 0
  %12 = load %"struct.Router::Port"*, %"struct.Router::Port"** %6, align 8
  %13 = bitcast %"struct.Router::Port"* %11 to i8*
  %14 = bitcast %"struct.Router::Port"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 4, i1 false)
  %15 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %10, i32 0, i32 1
  call void @_ZN6VectorIN6Router4PortEEC2Ev(%class.Vector.17* %15)
  %16 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %10, i32 0, i32 2
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %10, i32 0, i32 3
  %18 = load i8, i8* %7, align 1
  %19 = trunc i8 %18 to i1
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %17, align 1
  %21 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %10, i32 0, i32 4
  store %"class.Lexer::TunnelEnd"* null, %"class.Lexer::TunnelEnd"** %21, align 8
  %22 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %10, i32 0, i32 5
  %23 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %8, align 8
  store %"class.Lexer::TunnelEnd"* %23, %"class.Lexer::TunnelEnd"** %22, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN6Router4PortC2Eii(%"struct.Router::Port"*, i32, i32) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.Router::Port"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %"struct.Router::Port"* %0, %"struct.Router::Port"** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load %"struct.Router::Port"*, %"struct.Router::Port"** %4, align 8
  %8 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %7, i32 0, i32 0
  %9 = load i32, i32* %5, align 4
  store i32 %9, i32* %8, align 4
  %10 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %7, i32 0, i32 1
  %11 = load i32, i32* %6, align 4
  store i32 %11, i32* %10, align 4
  ret void
}

; Function Attrs: noinline optnone uwtable
define void @_ZN5Lexer9TunnelEnd6expandEPS_R6VectorIN6Router4PortEE(%"class.Lexer::TunnelEnd"*, %class.Lexer*, %class.Vector.17* dereferenceable(16)) #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.Lexer::TunnelEnd"*, align 8
  %5 = alloca %class.Lexer*, align 8
  %6 = alloca %class.Vector.17*, align 8
  %7 = alloca %class.Vector.17, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = alloca %"struct.Router::Port", align 4
  %11 = alloca %"struct.Router::Port", align 4
  %12 = alloca %class.String, align 8
  %13 = alloca %class.String, align 8
  %14 = alloca %class.String, align 8
  %15 = alloca %class.String, align 8
  %16 = alloca i8*, align 8
  %17 = alloca %class.String, align 8
  %18 = alloca %class.String, align 8
  %19 = alloca %class.String, align 8
  %20 = alloca i8*, align 8
  %21 = alloca %class.String, align 8
  %22 = alloca %class.String, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca %"struct.Router::Port", align 4
  store %"class.Lexer::TunnelEnd"* %0, %"class.Lexer::TunnelEnd"** %4, align 8
  store %class.Lexer* %1, %class.Lexer** %5, align 8
  store %class.Vector.17* %2, %class.Vector.17** %6, align 8
  %26 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %4, align 8
  %27 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %26, i32 0, i32 2
  %28 = load i8, i8* %27, align 8
  %29 = sext i8 %28 to i32
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %32

; <label>:31:                                     ; preds = %3
  br label %246

; <label>:32:                                     ; preds = %3
  %33 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %26, i32 0, i32 2
  %34 = load i8, i8* %33, align 8
  %35 = sext i8 %34 to i32
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %228

; <label>:37:                                     ; preds = %32
  %38 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %26, i32 0, i32 2
  store i8 1, i8* %38, align 8
  call void @_ZN6VectorIN6Router4PortEEC2Ev(%class.Vector.17* %7)
  %39 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %26, i32 0, i32 1
  invoke void @_ZN6VectorIN6Router4PortEE4swapERS2_(%class.Vector.17* %7, %class.Vector.17* dereferenceable(16) %39)
          to label %40 unwind label %106

; <label>:40:                                     ; preds = %37
  %41 = invoke i32 @_ZNK6VectorIN6Router4PortEE4sizeEv(%class.Vector.17* %7)
          to label %42 unwind label %106

; <label>:42:                                     ; preds = %40
  %43 = icmp ne i32 %41, 0
  br i1 %43, label %206, label %44

; <label>:44:                                     ; preds = %42
  %45 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %26, i32 0, i32 3
  %46 = load i8, i8* %45, align 1
  %47 = trunc i8 %46 to i1
  br i1 %47, label %48, label %52

; <label>:48:                                     ; preds = %44
  %49 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %26, i32 0, i32 4
  %50 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %49, align 8
  %51 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %50, i32 0, i32 0
  br label %54

; <label>:52:                                     ; preds = %44
  %53 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %26, i32 0, i32 0
  br label %54

; <label>:54:                                     ; preds = %52, %48
  %55 = phi %"struct.Router::Port"* [ %51, %48 ], [ %53, %52 ]
  %56 = bitcast %"struct.Router::Port"* %10 to i8*
  %57 = bitcast %"struct.Router::Port"* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 8, i32 4, i1 false)
  %58 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %26, i32 0, i32 3
  %59 = load i8, i8* %58, align 1
  %60 = trunc i8 %59 to i1
  br i1 %60, label %61, label %63

; <label>:61:                                     ; preds = %54
  %62 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %26, i32 0, i32 0
  br label %67

; <label>:63:                                     ; preds = %54
  %64 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %26, i32 0, i32 4
  %65 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %64, align 8
  %66 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %65, i32 0, i32 0
  br label %67

; <label>:67:                                     ; preds = %63, %61
  %68 = phi %"struct.Router::Port"* [ %62, %61 ], [ %66, %63 ]
  %69 = bitcast %"struct.Router::Port"* %11 to i8*
  %70 = bitcast %"struct.Router::Port"* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %70, i64 8, i32 4, i1 false)
  %71 = load %class.Lexer*, %class.Lexer** %5, align 8
  %72 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %10, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  invoke void @_ZNK5Lexer12element_nameEi(%class.String* sret %12, %class.Lexer* %71, i32 %73)
          to label %74 unwind label %106

; <label>:74:                                     ; preds = %67
  %75 = load %class.Lexer*, %class.Lexer** %5, align 8
  %76 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %11, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  invoke void @_ZNK5Lexer12element_nameEi(%class.String* sret %13, %class.Lexer* %75, i32 %77)
          to label %78 unwind label %110

; <label>:78:                                     ; preds = %74
  invoke void @_ZN6StringC2ERKS_(%class.String* %15, %class.String* dereferenceable(24) %12)
          to label %79 unwind label %114

; <label>:79:                                     ; preds = %78
  invoke void @_Zpl6StringPKc(%class.String* sret %14, %class.String* %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.102, i32 0, i32 0))
          to label %80 unwind label %118

; <label>:80:                                     ; preds = %79
  %81 = invoke zeroext i1 @_ZeqRK6StringS1_(%class.String* dereferenceable(24) %14, %class.String* dereferenceable(24) %13)
          to label %82 unwind label %122

; <label>:82:                                     ; preds = %80
  call void @_ZN6StringD2Ev(%class.String* %14) #9
  call void @_ZN6StringD2Ev(%class.String* %15) #9
  br i1 %81, label %83, label %131

; <label>:83:                                     ; preds = %82
  %84 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %26, i32 0, i32 3
  %85 = load i8, i8* %84, align 1
  %86 = trunc i8 %85 to i1
  br i1 %86, label %87, label %88

; <label>:87:                                     ; preds = %83
  br label %89

; <label>:88:                                     ; preds = %83
  br label %89

; <label>:89:                                     ; preds = %88, %87
  %90 = phi [23 x i8]* [ @.str.103, %87 ], [ @.str.104, %88 ]
  %91 = getelementptr inbounds [23 x i8], [23 x i8]* %90, i32 0, i32 0
  store i8* %91, i8** %16, align 8
  %92 = load %class.Lexer*, %class.Lexer** %5, align 8
  %93 = invoke %class.ErrorHandler* @_ZNK5Lexer4errhEv(%class.Lexer* %92)
          to label %94 unwind label %114

; <label>:94:                                     ; preds = %89
  %95 = load %class.Lexer*, %class.Lexer** %5, align 8
  %96 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %10, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  invoke void @_ZNK5Lexer16element_landmarkEi(%class.String* sret %17, %class.Lexer* %95, i32 %97)
          to label %98 unwind label %114

; <label>:98:                                     ; preds = %94
  %99 = load i8*, i8** %16, align 8
  %100 = invoke i8* @_ZNK6String5c_strEv(%class.String* %12)
          to label %101 unwind label %127

; <label>:101:                                    ; preds = %98
  %102 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %10, i32 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = invoke i32 (%class.ErrorHandler*, %class.String*, i8*, ...) @_ZN12ErrorHandler6lerrorERK6StringPKcz(%class.ErrorHandler* %93, %class.String* dereferenceable(24) %17, i8* %99, i8* %100, i32 %103)
          to label %105 unwind label %127

; <label>:105:                                    ; preds = %101
  call void @_ZN6StringD2Ev(%class.String* %17) #9
  br label %203

; <label>:106:                                    ; preds = %216, %212, %207, %67, %40, %37
  %107 = landingpad { i8*, i32 }
          cleanup
  %108 = extractvalue { i8*, i32 } %107, 0
  store i8* %108, i8** %8, align 8
  %109 = extractvalue { i8*, i32 } %107, 1
  store i32 %109, i32* %9, align 4
  br label %227

; <label>:110:                                    ; preds = %74
  %111 = landingpad { i8*, i32 }
          cleanup
  %112 = extractvalue { i8*, i32 } %111, 0
  store i8* %112, i8** %8, align 8
  %113 = extractvalue { i8*, i32 } %111, 1
  store i32 %113, i32* %9, align 4
  br label %205

; <label>:114:                                    ; preds = %175, %172, %147, %142, %131, %94, %89, %78
  %115 = landingpad { i8*, i32 }
          cleanup
  %116 = extractvalue { i8*, i32 } %115, 0
  store i8* %116, i8** %8, align 8
  %117 = extractvalue { i8*, i32 } %115, 1
  store i32 %117, i32* %9, align 4
  br label %204

; <label>:118:                                    ; preds = %79
  %119 = landingpad { i8*, i32 }
          cleanup
  %120 = extractvalue { i8*, i32 } %119, 0
  store i8* %120, i8** %8, align 8
  %121 = extractvalue { i8*, i32 } %119, 1
  store i32 %121, i32* %9, align 4
  br label %126

; <label>:122:                                    ; preds = %80
  %123 = landingpad { i8*, i32 }
          cleanup
  %124 = extractvalue { i8*, i32 } %123, 0
  store i8* %124, i8** %8, align 8
  %125 = extractvalue { i8*, i32 } %123, 1
  store i32 %125, i32* %9, align 4
  call void @_ZN6StringD2Ev(%class.String* %14) #9
  br label %126

; <label>:126:                                    ; preds = %122, %118
  call void @_ZN6StringD2Ev(%class.String* %15) #9
  br label %204

; <label>:127:                                    ; preds = %101, %98
  %128 = landingpad { i8*, i32 }
          cleanup
  %129 = extractvalue { i8*, i32 } %128, 0
  store i8* %129, i8** %8, align 8
  %130 = extractvalue { i8*, i32 } %128, 1
  store i32 %130, i32* %9, align 4
  call void @_ZN6StringD2Ev(%class.String* %17) #9
  br label %204

; <label>:131:                                    ; preds = %82
  invoke void @_ZN6StringC2ERKS_(%class.String* %19, %class.String* dereferenceable(24) %13)
          to label %132 unwind label %114

; <label>:132:                                    ; preds = %131
  invoke void @_Zpl6StringPKc(%class.String* sret %18, %class.String* %19, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.105, i32 0, i32 0))
          to label %133 unwind label %159

; <label>:133:                                    ; preds = %132
  %134 = invoke zeroext i1 @_ZeqRK6StringS1_(%class.String* dereferenceable(24) %12, %class.String* dereferenceable(24) %18)
          to label %135 unwind label %163

; <label>:135:                                    ; preds = %133
  call void @_ZN6StringD2Ev(%class.String* %18) #9
  call void @_ZN6StringD2Ev(%class.String* %19) #9
  br i1 %134, label %136, label %172

; <label>:136:                                    ; preds = %135
  %137 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %26, i32 0, i32 3
  %138 = load i8, i8* %137, align 1
  %139 = trunc i8 %138 to i1
  br i1 %139, label %140, label %141

; <label>:140:                                    ; preds = %136
  br label %142

; <label>:141:                                    ; preds = %136
  br label %142

; <label>:142:                                    ; preds = %141, %140
  %143 = phi [24 x i8]* [ @.str.106, %140 ], [ @.str.107, %141 ]
  %144 = getelementptr inbounds [24 x i8], [24 x i8]* %143, i32 0, i32 0
  store i8* %144, i8** %20, align 8
  %145 = load %class.Lexer*, %class.Lexer** %5, align 8
  %146 = invoke %class.ErrorHandler* @_ZNK5Lexer4errhEv(%class.Lexer* %145)
          to label %147 unwind label %114

; <label>:147:                                    ; preds = %142
  %148 = load %class.Lexer*, %class.Lexer** %5, align 8
  %149 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %11, i32 0, i32 0
  %150 = load i32, i32* %149, align 4
  invoke void @_ZNK5Lexer16element_landmarkEi(%class.String* sret %21, %class.Lexer* %148, i32 %150)
          to label %151 unwind label %114

; <label>:151:                                    ; preds = %147
  %152 = load i8*, i8** %20, align 8
  %153 = invoke i8* @_ZNK6String5c_strEv(%class.String* %13)
          to label %154 unwind label %168

; <label>:154:                                    ; preds = %151
  %155 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %11, i32 0, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = invoke i32 (%class.ErrorHandler*, %class.String*, i8*, ...) @_ZN12ErrorHandler6lerrorERK6StringPKcz(%class.ErrorHandler* %146, %class.String* dereferenceable(24) %21, i8* %152, i8* %153, i32 %156)
          to label %158 unwind label %168

; <label>:158:                                    ; preds = %154
  call void @_ZN6StringD2Ev(%class.String* %21) #9
  br label %202

; <label>:159:                                    ; preds = %132
  %160 = landingpad { i8*, i32 }
          cleanup
  %161 = extractvalue { i8*, i32 } %160, 0
  store i8* %161, i8** %8, align 8
  %162 = extractvalue { i8*, i32 } %160, 1
  store i32 %162, i32* %9, align 4
  br label %167

; <label>:163:                                    ; preds = %133
  %164 = landingpad { i8*, i32 }
          cleanup
  %165 = extractvalue { i8*, i32 } %164, 0
  store i8* %165, i8** %8, align 8
  %166 = extractvalue { i8*, i32 } %164, 1
  store i32 %166, i32* %9, align 4
  call void @_ZN6StringD2Ev(%class.String* %18) #9
  br label %167

; <label>:167:                                    ; preds = %163, %159
  call void @_ZN6StringD2Ev(%class.String* %19) #9
  br label %204

; <label>:168:                                    ; preds = %154, %151
  %169 = landingpad { i8*, i32 }
          cleanup
  %170 = extractvalue { i8*, i32 } %169, 0
  store i8* %170, i8** %8, align 8
  %171 = extractvalue { i8*, i32 } %169, 1
  store i32 %171, i32* %9, align 4
  call void @_ZN6StringD2Ev(%class.String* %21) #9
  br label %204

; <label>:172:                                    ; preds = %135
  %173 = load %class.Lexer*, %class.Lexer** %5, align 8
  %174 = invoke %class.ErrorHandler* @_ZNK5Lexer4errhEv(%class.Lexer* %173)
          to label %175 unwind label %114

; <label>:175:                                    ; preds = %172
  %176 = load %class.Lexer*, %class.Lexer** %5, align 8
  %177 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %26, i32 0, i32 4
  %178 = load %"class.Lexer::TunnelEnd"*, %"class.Lexer::TunnelEnd"** %177, align 8
  %179 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %178, i32 0, i32 0
  %180 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %179, i32 0, i32 0
  %181 = load i32, i32* %180, align 8
  invoke void @_ZNK5Lexer16element_landmarkEi(%class.String* sret %22, %class.Lexer* %176, i32 %181)
          to label %182 unwind label %114

; <label>:182:                                    ; preds = %175
  %183 = invoke i8* @_ZNK6String5c_strEv(%class.String* %12)
          to label %184 unwind label %198

; <label>:184:                                    ; preds = %182
  %185 = invoke i8* @_ZNK6String5c_strEv(%class.String* %13)
          to label %186 unwind label %198

; <label>:186:                                    ; preds = %184
  %187 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %26, i32 0, i32 3
  %188 = load i8, i8* %187, align 1
  %189 = trunc i8 %188 to i1
  %190 = zext i1 %189 to i64
  %191 = getelementptr inbounds [2 x i8*], [2 x i8*]* @_ZL10port_names, i64 0, i64 %190
  %192 = load i8*, i8** %191, align 8
  %193 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %26, i32 0, i32 0
  %194 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %193, i32 0, i32 0
  %195 = load i32, i32* %194, align 8
  %196 = invoke i32 (%class.ErrorHandler*, %class.String*, i8*, ...) @_ZN12ErrorHandler6lerrorERK6StringPKcz(%class.ErrorHandler* %174, %class.String* dereferenceable(24) %22, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.108, i32 0, i32 0), i8* %183, i8* %185, i8* %192, i32 %195)
          to label %197 unwind label %198

; <label>:197:                                    ; preds = %186
  call void @_ZN6StringD2Ev(%class.String* %22) #9
  br label %202

; <label>:198:                                    ; preds = %186, %184, %182
  %199 = landingpad { i8*, i32 }
          cleanup
  %200 = extractvalue { i8*, i32 } %199, 0
  store i8* %200, i8** %8, align 8
  %201 = extractvalue { i8*, i32 } %199, 1
  store i32 %201, i32* %9, align 4
  call void @_ZN6StringD2Ev(%class.String* %22) #9
  br label %204

; <label>:202:                                    ; preds = %197, %158
  br label %203

; <label>:203:                                    ; preds = %202, %105
  call void @_ZN6StringD2Ev(%class.String* %13) #9
  call void @_ZN6StringD2Ev(%class.String* %12) #9
  br label %206

; <label>:204:                                    ; preds = %198, %168, %167, %127, %126, %114
  call void @_ZN6StringD2Ev(%class.String* %13) #9
  br label %205

; <label>:205:                                    ; preds = %204, %110
  call void @_ZN6StringD2Ev(%class.String* %12) #9
  br label %227

; <label>:206:                                    ; preds = %203, %42
  store i32 0, i32* %23, align 4
  br label %207

; <label>:207:                                    ; preds = %222, %206
  %208 = load i32, i32* %23, align 4
  %209 = invoke i32 @_ZNK6VectorIN6Router4PortEE4sizeEv(%class.Vector.17* %7)
          to label %210 unwind label %106

; <label>:210:                                    ; preds = %207
  %211 = icmp slt i32 %208, %209
  br i1 %211, label %212, label %225

; <label>:212:                                    ; preds = %210
  %213 = load %class.Lexer*, %class.Lexer** %5, align 8
  %214 = load i32, i32* %23, align 4
  %215 = invoke dereferenceable(8) %"struct.Router::Port"* @_ZN6VectorIN6Router4PortEEixEi(%class.Vector.17* %7, i32 %214)
          to label %216 unwind label %106

; <label>:216:                                    ; preds = %212
  %217 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %26, i32 0, i32 3
  %218 = load i8, i8* %217, align 1
  %219 = trunc i8 %218 to i1
  %220 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %26, i32 0, i32 1
  invoke void @_ZN5Lexer17expand_connectionERKN6Router4PortEbR6VectorIS1_E(%class.Lexer* %213, %"struct.Router::Port"* dereferenceable(8) %215, i1 zeroext %219, %class.Vector.17* dereferenceable(16) %220)
          to label %221 unwind label %106

; <label>:221:                                    ; preds = %216
  br label %222

; <label>:222:                                    ; preds = %221
  %223 = load i32, i32* %23, align 4
  %224 = add nsw i32 %223, 1
  store i32 %224, i32* %23, align 4
  br label %207

; <label>:225:                                    ; preds = %210
  %226 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %26, i32 0, i32 2
  store i8 2, i8* %226, align 8
  call void @_ZN6VectorIN6Router4PortEED2Ev(%class.Vector.17* %7) #9
  br label %228

; <label>:227:                                    ; preds = %205, %106
  call void @_ZN6VectorIN6Router4PortEED2Ev(%class.Vector.17* %7) #9
  br label %247

; <label>:228:                                    ; preds = %225, %32
  store i32 0, i32* %24, align 4
  br label %229

; <label>:229:                                    ; preds = %243, %228
  %230 = load i32, i32* %24, align 4
  %231 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %26, i32 0, i32 1
  %232 = call i32 @_ZNK6VectorIN6Router4PortEE4sizeEv(%class.Vector.17* %231)
  %233 = icmp slt i32 %230, %232
  br i1 %233, label %234, label %246

; <label>:234:                                    ; preds = %229
  %235 = load %class.Vector.17*, %class.Vector.17** %6, align 8
  %236 = getelementptr inbounds %"class.Lexer::TunnelEnd", %"class.Lexer::TunnelEnd"* %26, i32 0, i32 1
  %237 = load i32, i32* %24, align 4
  %238 = call dereferenceable(8) %"struct.Router::Port"* @_ZN6VectorIN6Router4PortEEixEi(%class.Vector.17* %236, i32 %237)
  %239 = bitcast %"struct.Router::Port"* %25 to i8*
  %240 = bitcast %"struct.Router::Port"* %238 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %239, i8* %240, i64 8, i32 4, i1 false)
  %241 = bitcast %"struct.Router::Port"* %25 to i64*
  %242 = load i64, i64* %241, align 4
  call void @_ZN6VectorIN6Router4PortEE9push_backES1_(%class.Vector.17* %235, i64 %242)
  br label %243

; <label>:243:                                    ; preds = %234
  %244 = load i32, i32* %24, align 4
  %245 = add nsw i32 %244, 1
  store i32 %245, i32* %24, align 4
  br label %229

; <label>:246:                                    ; preds = %31, %229
  ret void

; <label>:247:                                    ; preds = %227
  %248 = load i8*, i8** %8, align 8
  %249 = load i32, i32* %9, align 4
  %250 = insertvalue { i8*, i32 } undef, i8* %248, 0
  %251 = insertvalue { i8*, i32 } %250, i32 %249, 1
  resume { i8*, i32 } %251
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6VectorIN6Router4PortEE4swapERS2_(%class.Vector.17*, %class.Vector.17* dereferenceable(16)) #2 comdat align 2 {
  %3 = alloca %class.Vector.17*, align 8
  %4 = alloca %class.Vector.17*, align 8
  store %class.Vector.17* %0, %class.Vector.17** %3, align 8
  store %class.Vector.17* %1, %class.Vector.17** %4, align 8
  %5 = load %class.Vector.17*, %class.Vector.17** %3, align 8
  %6 = getelementptr inbounds %class.Vector.17, %class.Vector.17* %5, i32 0, i32 0
  %7 = load %class.Vector.17*, %class.Vector.17** %4, align 8
  %8 = getelementptr inbounds %class.Vector.17, %class.Vector.17* %7, i32 0, i32 0
  call void @_ZN13vector_memoryI18sized_array_memoryILm8EEE4swapERS2_(%class.vector_memory* %6, %class.vector_memory* dereferenceable(16) %8)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr %class.ErrorHandler* @_ZNK5Lexer4errhEv(%class.Lexer*) #0 comdat align 2 {
  %2 = alloca %class.Lexer*, align 8
  store %class.Lexer* %0, %class.Lexer** %2, align 8
  %3 = load %class.Lexer*, %class.Lexer** %2, align 8
  %4 = getelementptr inbounds %class.Lexer, %class.Lexer* %3, i32 0, i32 19
  %5 = load %class.ErrorHandler*, %class.ErrorHandler** %4, align 8
  ret %class.ErrorHandler* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN10LexerExtraD2Ev(%class.LexerExtra*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.LexerExtra*, align 8
  store %class.LexerExtra* %0, %class.LexerExtra** %2, align 8
  %3 = load %class.LexerExtra*, %class.LexerExtra** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN10LexerExtraD0Ev(%class.LexerExtra*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.LexerExtra*, align 8
  store %class.LexerExtra* %0, %class.LexerExtra** %2, align 8
  %3 = load %class.LexerExtra*, %class.LexerExtra** %2, align 8
  call void @_ZN10LexerExtraD2Ev(%class.LexerExtra* %3) #9
  %4 = bitcast %class.LexerExtra* %3 to i8*
  call void @_ZdlPv(i8* %4) #14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN5Lexer8CompoundD2Ev(%"class.Lexer::Compound"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.Lexer::Compound"*, align 8
  store %"class.Lexer::Compound"* %0, %"class.Lexer::Compound"** %2, align 8
  %3 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %2, align 8
  %4 = bitcast %"class.Lexer::Compound"* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5Lexer8CompoundE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %3, i32 0, i32 18
  %6 = load i32, i32* %5, align 4
  %7 = icmp ne i32 %6, 0
  %8 = xor i1 %7, true
  br i1 %8, label %9, label %10

; <label>:9:                                      ; preds = %1
  br label %12

; <label>:10:                                     ; preds = %1
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i32 123, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__PRETTY_FUNCTION__._ZN5Lexer8CompoundD2Ev, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %12

; <label>:12:                                     ; preds = %11, %9
  %13 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %3, i32 0, i32 19
  call void @_ZN6VectorIN6Router10ConnectionEED2Ev(%class.Vector.8* %13) #9
  %14 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %3, i32 0, i32 16
  %15 = getelementptr inbounds [2 x %class.Vector.5], [2 x %class.Vector.5]* %14, i32 0, i32 0
  %16 = getelementptr inbounds %class.Vector.5, %class.Vector.5* %15, i64 2
  br label %17

; <label>:17:                                     ; preds = %17, %12
  %18 = phi %class.Vector.5* [ %16, %12 ], [ %19, %17 ]
  %19 = getelementptr inbounds %class.Vector.5, %class.Vector.5* %18, i64 -1
  call void @_ZN6VectorIiED2Ev(%class.Vector.5* %19) #9
  %20 = icmp eq %class.Vector.5* %19, %15
  br i1 %20, label %21, label %17

; <label>:21:                                     ; preds = %17
  %22 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %3, i32 0, i32 15
  call void @_ZN6VectorIjED2Ev(%class.Vector.2* %22) #9
  %23 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %3, i32 0, i32 14
  call void @_ZN6VectorI6StringED2Ev(%class.Vector.0* %23) #9
  %24 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %3, i32 0, i32 13
  call void @_ZN6VectorI6StringED2Ev(%class.Vector.0* %24) #9
  %25 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %3, i32 0, i32 12
  call void @_ZN6VectorI6StringED2Ev(%class.Vector.0* %25) #9
  %26 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %3, i32 0, i32 11
  call void @_ZN6VectorIiED2Ev(%class.Vector.5* %26) #9
  %27 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %3, i32 0, i32 10
  call void @_ZN9HashTableI6StringiED2Ev(%class.HashTable* %27) #9
  %28 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %3, i32 0, i32 4
  call void @_ZN19VariableEnvironmentD2Ev(%class.VariableEnvironment* %28) #9
  %29 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %3, i32 0, i32 2
  call void @_ZN6StringD2Ev(%class.String* %29) #9
  %30 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %3, i32 0, i32 1
  call void @_ZN6StringD2Ev(%class.String* %30) #9
  %31 = bitcast %"class.Lexer::Compound"* %3 to %class.Element*
  call void @_ZN7ElementD2Ev(%class.Element* %31) #9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN5Lexer8CompoundD0Ev(%"class.Lexer::Compound"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.Lexer::Compound"*, align 8
  store %"class.Lexer::Compound"* %0, %"class.Lexer::Compound"** %2, align 8
  %3 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %2, align 8
  call void @_ZN5Lexer8CompoundD2Ev(%"class.Lexer::Compound"* %3) #9
  %4 = bitcast %"class.Lexer::Compound"* %3 to i8*
  call void @_ZdlPv(i8* %4) #14
  ret void
}

declare void @_ZN7Element4pushEiP6Packet(%class.Element*, i32, %class.Packet*) unnamed_addr #3

declare %class.Packet* @_ZN7Element4pullEi(%class.Element*, i32) unnamed_addr #3

declare %class.Packet* @_ZN7Element13simple_actionEP6Packet(%class.Element*, %class.Packet*) unnamed_addr #3

declare zeroext i1 @_ZN7Element8run_taskEP4Task(%class.Element*, %class.Task*) unnamed_addr #3

declare void @_ZN7Element9run_timerEP5Timer(%class.Element*, %class.Timer*) unnamed_addr #3

declare void @_ZN7Element8selectedEii(%class.Element*, i32, i32) unnamed_addr #3

declare void @_ZN7Element8selectedEi(%class.Element*, i32) unnamed_addr #3

; Function Attrs: noinline optnone uwtable
define linkonce_odr i8* @_ZNK5Lexer8Compound10class_nameEv(%"class.Lexer::Compound"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.Lexer::Compound"*, align 8
  store %"class.Lexer::Compound"* %0, %"class.Lexer::Compound"** %2, align 8
  %3 = load %"class.Lexer::Compound"*, %"class.Lexer::Compound"** %2, align 8
  %4 = getelementptr inbounds %"class.Lexer::Compound", %"class.Lexer::Compound"* %3, i32 0, i32 1
  %5 = call i8* @_ZNK6String5c_strEv(%class.String* %4)
  ret i8* %5
}

declare i8* @_ZNK7Element10port_countEv(%class.Element*) unnamed_addr #3

declare i8* @_ZNK7Element10processingEv(%class.Element*) unnamed_addr #3

declare i8* @_ZNK7Element9flow_codeEv(%class.Element*) unnamed_addr #3

declare i8* @_ZNK7Element5flagsEv(%class.Element*) unnamed_addr #3

declare i8* @_ZN7Element9port_castEbiPKc(%class.Element*, i1 zeroext, i32, i8*) unnamed_addr #3

declare i32 @_ZNK7Element15configure_phaseEv(%class.Element*) unnamed_addr #3

declare i32 @_ZN7Element9configureER6VectorI6StringEP12ErrorHandler(%class.Element*, %class.Vector.0* dereferenceable(16), %class.ErrorHandler*) unnamed_addr #3

declare void @_ZN7Element12add_handlersEv(%class.Element*) unnamed_addr #3

declare i32 @_ZN7Element10initializeEP12ErrorHandler(%class.Element*, %class.ErrorHandler*) unnamed_addr #3

declare void @_ZN7Element10take_stateEPS_P12ErrorHandler(%class.Element*, %class.Element*, %class.ErrorHandler*) unnamed_addr #3

declare %class.Element* @_ZNK7Element15hotswap_elementEv(%class.Element*) unnamed_addr #3

declare void @_ZN7Element7cleanupENS_12CleanupStageE(%class.Element*, i32) unnamed_addr #3

declare void @_ZNK7Element11declarationEv(%class.String* sret, %class.Element*) unnamed_addr #3

declare zeroext i1 @_ZNK7Element20can_live_reconfigureEv(%class.Element*) unnamed_addr #3

declare i32 @_ZN7Element16live_reconfigureER6VectorI6StringEP12ErrorHandler(%class.Element*, %class.Vector.0* dereferenceable(16), %class.ErrorHandler*) unnamed_addr #3

declare i32 @_ZN7Element5llrpcEjPv(%class.Element*, i32, i8*) unnamed_addr #3

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZNK6String6assignERKS_(%class.String*, %class.String* dereferenceable(24)) #2 comdat align 2 {
  %3 = alloca %class.String*, align 8
  %4 = alloca %class.String*, align 8
  store %class.String* %0, %class.String** %3, align 8
  store %class.String* %1, %class.String** %4, align 8
  %5 = load %class.String*, %class.String** %3, align 8
  %6 = load %class.String*, %class.String** %4, align 8
  %7 = getelementptr inbounds %class.String, %class.String* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %7, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = load %class.String*, %class.String** %4, align 8
  %11 = getelementptr inbounds %class.String, %class.String* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = load %class.String*, %class.String** %4, align 8
  %15 = getelementptr inbounds %class.String, %class.String* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %15, i32 0, i32 2
  %17 = load %"struct.String::memo_t"*, %"struct.String::memo_t"** %16, align 8
  call void @_ZNK6String11assign_memoEPKciPNS_6memo_tE(%class.String* %5, i8* %9, i32 %13, %"struct.String::memo_t"* %17)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZNK6String11assign_memoEPKciPNS_6memo_tE(%class.String*, i8*, i32, %"struct.String::memo_t"*) #2 comdat align 2 {
  %5 = alloca %class.String*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %"struct.String::memo_t"*, align 8
  store %class.String* %0, %class.String** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  store %"struct.String::memo_t"* %3, %"struct.String::memo_t"** %8, align 8
  %9 = load %class.String*, %class.String** %5, align 8
  %10 = load i8*, i8** %6, align 8
  %11 = getelementptr inbounds %class.String, %class.String* %9, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %11, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = load i32, i32* %7, align 4
  %14 = getelementptr inbounds %class.String, %class.String* %9, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %14, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  %16 = load %"struct.String::memo_t"*, %"struct.String::memo_t"** %8, align 8
  %17 = getelementptr inbounds %class.String, %class.String* %9, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %17, i32 0, i32 2
  store %"struct.String::memo_t"* %16, %"struct.String::memo_t"** %18, align 8
  %19 = icmp ne %"struct.String::memo_t"* %16, null
  br i1 %19, label %20, label %23

; <label>:20:                                     ; preds = %4
  %21 = load %"struct.String::memo_t"*, %"struct.String::memo_t"** %8, align 8
  %22 = getelementptr inbounds %"struct.String::memo_t", %"struct.String::memo_t"* %21, i32 0, i32 0
  call void @_ZN15atomic_uint32_t3incERVj(i32* dereferenceable(4) %22)
  br label %23

; <label>:23:                                     ; preds = %20, %4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN15atomic_uint32_t3incERVj(i32* dereferenceable(4)) #0 comdat align 2 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  %4 = load volatile i32, i32* %3, align 4
  %5 = add i32 %4, 1
  store volatile i32 %5, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN13vector_memoryI18sized_array_memoryILm4EEED2Ev(%class.vector_memory.3*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.vector_memory.3*, align 8
  store %class.vector_memory.3* %0, %class.vector_memory.3** %2, align 8
  %3 = load %class.vector_memory.3*, %class.vector_memory.3** %2, align 8
  %4 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %3, i32 0, i32 0
  %5 = load %struct.char_array.4*, %struct.char_array.4** %4, align 8
  %6 = bitcast %struct.char_array.4* %5 to i8*
  %7 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %3, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  invoke void @_ZN18sized_array_memoryILm4EE7destroyEPvm(i8* %6, i64 %9)
          to label %10 unwind label %21

; <label>:10:                                     ; preds = %1
  %11 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %3, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = mul i64 %13, 4
  %15 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %3, i32 0, i32 0
  %16 = load %struct.char_array.4*, %struct.char_array.4** %15, align 8
  %17 = bitcast %struct.char_array.4* %16 to i8*
  %18 = icmp eq i8* %17, null
  br i1 %18, label %20, label %19

; <label>:19:                                     ; preds = %10
  call void @_ZdaPv(i8* %17) #14
  br label %20

; <label>:20:                                     ; preds = %19, %10
  ret void

; <label>:21:                                     ; preds = %1
  %22 = landingpad { i8*, i32 }
          catch i8* null
  %23 = extractvalue { i8*, i32 } %22, 0
  call void @__clang_call_terminate(i8* %23) #12
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN18sized_array_memoryILm4EE7destroyEPvm(i8*, i64) #0 comdat align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN13vector_memoryI18typed_array_memoryI6StringEED2Ev(%class.vector_memory.1*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.vector_memory.1*, align 8
  store %class.vector_memory.1* %0, %class.vector_memory.1** %2, align 8
  %3 = load %class.vector_memory.1*, %class.vector_memory.1** %2, align 8
  %4 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %3, i32 0, i32 0
  %5 = load %class.String*, %class.String** %4, align 8
  %6 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %3, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = sext i32 %7 to i64
  invoke void @_ZN18typed_array_memoryI6StringE7destroyEPS0_m(%class.String* %5, i64 %8)
          to label %9 unwind label %20

; <label>:9:                                      ; preds = %1
  %10 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %3, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = mul i64 %12, 24
  %14 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %3, i32 0, i32 0
  %15 = load %class.String*, %class.String** %14, align 8
  %16 = bitcast %class.String* %15 to i8*
  %17 = icmp eq i8* %16, null
  br i1 %17, label %19, label %18

; <label>:18:                                     ; preds = %9
  call void @_ZdaPv(i8* %16) #14
  br label %19

; <label>:19:                                     ; preds = %18, %9
  ret void

; <label>:20:                                     ; preds = %1
  %21 = landingpad { i8*, i32 }
          catch i8* null
  %22 = extractvalue { i8*, i32 } %21, 0
  call void @__clang_call_terminate(i8* %22) #12
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN18typed_array_memoryI6StringE7destroyEPS0_m(%class.String*, i64) #0 comdat align 2 {
  %3 = alloca %class.String*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  store %class.String* %0, %class.String** %3, align 8
  store i64 %1, i64* %4, align 8
  store i64 0, i64* %5, align 8
  br label %6

; <label>:6:                                      ; preds = %14, %2
  %7 = load i64, i64* %5, align 8
  %8 = load i64, i64* %4, align 8
  %9 = icmp ne i64 %7, %8
  br i1 %9, label %10, label %17

; <label>:10:                                     ; preds = %6
  %11 = load %class.String*, %class.String** %3, align 8
  %12 = load i64, i64* %5, align 8
  %13 = getelementptr inbounds %class.String, %class.String* %11, i64 %12
  call void @_ZN6StringD2Ev(%class.String* %13) #9
  br label %14

; <label>:14:                                     ; preds = %10
  %15 = load i64, i64* %5, align 8
  %16 = add i64 %15, 1
  store i64 %16, i64* %5, align 8
  br label %6

; <label>:17:                                     ; preds = %6
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN16VariableExpanderD2Ev(%class.VariableExpander*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.VariableExpander*, align 8
  store %class.VariableExpander* %0, %class.VariableExpander** %2, align 8
  %3 = load %class.VariableExpander*, %class.VariableExpander** %2, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZNK6String5derefEv(%class.String*) #2 comdat align 2 {
  %2 = alloca %class.String*, align 8
  store %class.String* %0, %class.String** %2, align 8
  %3 = load %class.String*, %class.String** %2, align 8
  %4 = getelementptr inbounds %class.String, %class.String* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %4, i32 0, i32 2
  %6 = load %"struct.String::memo_t"*, %"struct.String::memo_t"** %5, align 8
  %7 = icmp ne %"struct.String::memo_t"* %6, null
  br i1 %7, label %8, label %31

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %class.String, %class.String* %3, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %9, i32 0, i32 2
  %11 = load %"struct.String::memo_t"*, %"struct.String::memo_t"** %10, align 8
  %12 = getelementptr inbounds %"struct.String::memo_t", %"struct.String::memo_t"* %11, i32 0, i32 0
  %13 = load volatile i32, i32* %12, align 4
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %16

; <label>:15:                                     ; preds = %8
  br label %18

; <label>:16:                                     ; preds = %8
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.111, i32 0, i32 0), i32 272, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__PRETTY_FUNCTION__._ZNK6String5derefEv, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %18

; <label>:18:                                     ; preds = %17, %15
  %19 = getelementptr inbounds %class.String, %class.String* %3, i32 0, i32 0
  %20 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %19, i32 0, i32 2
  %21 = load %"struct.String::memo_t"*, %"struct.String::memo_t"** %20, align 8
  %22 = getelementptr inbounds %"struct.String::memo_t", %"struct.String::memo_t"* %21, i32 0, i32 0
  %23 = call zeroext i1 @_ZN15atomic_uint32_t12dec_and_testERVj(i32* dereferenceable(4) %22)
  br i1 %23, label %24, label %28

; <label>:24:                                     ; preds = %18
  %25 = getelementptr inbounds %class.String, %class.String* %3, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %25, i32 0, i32 2
  %27 = load %"struct.String::memo_t"*, %"struct.String::memo_t"** %26, align 8
  call void @_ZN6String11delete_memoEPNS_6memo_tE(%"struct.String::memo_t"* %27)
  br label %28

; <label>:28:                                     ; preds = %24, %18
  %29 = getelementptr inbounds %class.String, %class.String* %3, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %29, i32 0, i32 2
  store %"struct.String::memo_t"* null, %"struct.String::memo_t"** %30, align 8
  br label %31

; <label>:31:                                     ; preds = %28, %1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr zeroext i1 @_ZN15atomic_uint32_t12dec_and_testERVj(i32* dereferenceable(4)) #0 comdat align 2 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  %4 = load volatile i32, i32* %3, align 4
  %5 = add i32 %4, -1
  store volatile i32 %5, i32* %3, align 4
  %6 = icmp eq i32 %5, 0
  ret i1 %6
}

declare void @_ZN6String11delete_memoEPNS_6memo_tE(%"struct.String::memo_t"*) #3

declare i8* @_ZN6String20append_uninitializedEi(%class.String*, i32) #3

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #5

declare void @_ZN9Bitvector6resizeEi(%class.Bitvector*, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN9Bitvector3BitC2ERji(%"class.Bitvector::Bit"*, i32* dereferenceable(4), i32) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.Bitvector::Bit"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  store %"class.Bitvector::Bit"* %0, %"class.Bitvector::Bit"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %"class.Bitvector::Bit"*, %"class.Bitvector::Bit"** %4, align 8
  %8 = getelementptr inbounds %"class.Bitvector::Bit", %"class.Bitvector::Bit"* %7, i32 0, i32 0
  %9 = load i32*, i32** %5, align 8
  store i32* %9, i32** %8, align 8
  %10 = getelementptr inbounds %"class.Bitvector::Bit", %"class.Bitvector::Bit"* %7, i32 0, i32 1
  %11 = load i32, i32* %6, align 4
  %12 = shl i32 1, %11
  store i32 %12, i32* %10, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN11ErrorVeneerD2Ev(%class.ErrorVeneer*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.ErrorVeneer*, align 8
  store %class.ErrorVeneer* %0, %class.ErrorVeneer** %2, align 8
  %3 = load %class.ErrorVeneer*, %class.ErrorVeneer** %2, align 8
  %4 = bitcast %class.ErrorVeneer* %3 to %class.ErrorHandler*
  call void @_ZN12ErrorHandlerD2Ev(%class.ErrorHandler* %4) #9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN12ErrorHandlerD2Ev(%class.ErrorHandler*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.ErrorHandler*, align 8
  store %class.ErrorHandler* %0, %class.ErrorHandler** %2, align 8
  %3 = load %class.ErrorHandler*, %class.ErrorHandler** %2, align 8
  ret void
}

declare i32 @_Z19cp_assign_argumentsRK6VectorI6StringEPKS0_S5_PS1_(%class.Vector.0* dereferenceable(16), %class.String*, %class.String*, %class.Vector.0*) #3

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr %class.String* @_ZNK6VectorI6StringE5beginEv(%class.Vector.0*) #0 comdat align 2 {
  %2 = alloca %class.Vector.0*, align 8
  store %class.Vector.0* %0, %class.Vector.0** %2, align 8
  %3 = load %class.Vector.0*, %class.Vector.0** %2, align 8
  %4 = getelementptr inbounds %class.Vector.0, %class.Vector.0* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %4, i32 0, i32 0
  %6 = load %class.String*, %class.String** %5, align 8
  ret %class.String* %6
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN11StringAccum5rep_tC2Ev(%"struct.StringAccum::rep_t"*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %"struct.StringAccum::rep_t"*, align 8
  store %"struct.StringAccum::rep_t"* %0, %"struct.StringAccum::rep_t"** %2, align 8
  %3 = load %"struct.StringAccum::rep_t"*, %"struct.StringAccum::rep_t"** %2, align 8
  %4 = getelementptr inbounds %"struct.StringAccum::rep_t", %"struct.StringAccum::rep_t"* %3, i32 0, i32 0
  %5 = call i8* @_ZN6String10empty_dataEv()
  store i8* %5, i8** %4, align 8
  %6 = getelementptr inbounds %"struct.StringAccum::rep_t", %"struct.StringAccum::rep_t"* %3, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.StringAccum::rep_t", %"struct.StringAccum::rep_t"* %3, i32 0, i32 2
  store i32 0, i32* %7, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr i8* @_ZN6String10empty_dataEv() #0 comdat align 2 {
  ret i8* @_ZN6String9null_dataE
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN11StringAccum6appendEPKci(%class.StringAccum*, i8*, i32) #2 comdat align 2 {
  %4 = alloca %class.StringAccum*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store %class.StringAccum* %0, %class.StringAccum** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %class.StringAccum*, %class.StringAccum** %4, align 8
  %8 = load i32, i32* %6, align 4
  %9 = icmp sge i32 %8, 0
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %3
  br label %13

; <label>:11:                                     ; preds = %3
  call void @__assert_fail(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.118, i32 0, i32 0), i32 433, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @__PRETTY_FUNCTION__._ZN11StringAccum6appendEPKci, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %13

; <label>:13:                                     ; preds = %12, %10
  %14 = getelementptr inbounds %class.StringAccum, %class.StringAccum* %7, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.StringAccum::rep_t", %"struct.StringAccum::rep_t"* %14, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = load i32, i32* %6, align 4
  %18 = add nsw i32 %16, %17
  %19 = getelementptr inbounds %class.StringAccum, %class.StringAccum* %7, i32 0, i32 0
  %20 = getelementptr inbounds %"struct.StringAccum::rep_t", %"struct.StringAccum::rep_t"* %19, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp sle i32 %18, %21
  br i1 %22, label %23, label %40

; <label>:23:                                     ; preds = %13
  %24 = getelementptr inbounds %class.StringAccum, %class.StringAccum* %7, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.StringAccum::rep_t", %"struct.StringAccum::rep_t"* %24, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %class.StringAccum, %class.StringAccum* %7, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.StringAccum::rep_t", %"struct.StringAccum::rep_t"* %27, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %26, i64 %30
  %32 = load i8*, i8** %5, align 8
  %33 = load i32, i32* %6, align 4
  %34 = sext i32 %33 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 %34, i32 1, i1 false)
  %35 = load i32, i32* %6, align 4
  %36 = getelementptr inbounds %class.StringAccum, %class.StringAccum* %7, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.StringAccum::rep_t", %"struct.StringAccum::rep_t"* %36, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = add nsw i32 %38, %35
  store i32 %39, i32* %37, align 8
  br label %43

; <label>:40:                                     ; preds = %13
  %41 = load i8*, i8** %5, align 8
  %42 = load i32, i32* %6, align 4
  call void @_ZN11StringAccum11hard_appendEPKci(%class.StringAccum* %7, i8* %41, i32 %42)
  br label %43

; <label>:43:                                     ; preds = %40, %23
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr i8* @_ZNK6String4dataEv(%class.String*) #0 comdat align 2 {
  %2 = alloca %class.String*, align 8
  store %class.String* %0, %class.String** %2, align 8
  %3 = load %class.String*, %class.String** %2, align 8
  %4 = getelementptr inbounds %class.String, %class.String* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %4, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  ret i8* %6
}

declare void @_ZN11StringAccum11hard_appendEPKci(%class.StringAccum*, i8*, i32) #3

declare void @_ZN6String6assignEPKcib(%class.String*, i8*, i32, i1 zeroext) #3

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN11StringAccum6appendEc(%class.StringAccum*, i8 signext) #2 comdat align 2 {
  %3 = alloca %class.StringAccum*, align 8
  %4 = alloca i8, align 1
  store %class.StringAccum* %0, %class.StringAccum** %3, align 8
  store i8 %1, i8* %4, align 1
  %5 = load %class.StringAccum*, %class.StringAccum** %3, align 8
  %6 = getelementptr inbounds %class.StringAccum, %class.StringAccum* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.StringAccum::rep_t", %"struct.StringAccum::rep_t"* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %class.StringAccum, %class.StringAccum* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.StringAccum::rep_t", %"struct.StringAccum::rep_t"* %9, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %8, %11
  br i1 %12, label %19, label %13

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds %class.StringAccum, %class.StringAccum* %5, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.StringAccum::rep_t", %"struct.StringAccum::rep_t"* %14, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = call i8* @_ZN11StringAccum4growEi(%class.StringAccum* %5, i32 %16)
  %18 = icmp ne i8* %17, null
  br i1 %18, label %19, label %30

; <label>:19:                                     ; preds = %13, %2
  %20 = load i8, i8* %4, align 1
  %21 = getelementptr inbounds %class.StringAccum, %class.StringAccum* %5, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.StringAccum::rep_t", %"struct.StringAccum::rep_t"* %21, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %class.StringAccum, %class.StringAccum* %5, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.StringAccum::rep_t", %"struct.StringAccum::rep_t"* %24, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %25, align 8
  %28 = sext i32 %26 to i64
  %29 = getelementptr inbounds i8, i8* %23, i64 %28
  store i8 %20, i8* %29, align 1
  br label %30

; <label>:30:                                     ; preds = %19, %13
  ret void
}

declare i8* @_ZN11StringAccum4growEi(%class.StringAccum*, i32) #3

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN11StringAccum6appendEPKc(%class.StringAccum*, i8*) #2 comdat align 2 {
  %3 = alloca %class.StringAccum*, align 8
  %4 = alloca i8*, align 8
  store %class.StringAccum* %0, %class.StringAccum** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %class.StringAccum*, %class.StringAccum** %3, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %8, label %14

; <label>:8:                                      ; preds = %2
  br i1 false, label %9, label %14

; <label>:9:                                      ; preds = %8
  %10 = load i8*, i8** %4, align 8
  %11 = load i8*, i8** %4, align 8
  %12 = call i64 @strlen(i8* %11) #13
  %13 = trunc i64 %12 to i32
  call void @_ZN11StringAccum6appendEPKci(%class.StringAccum* %5, i8* %10, i32 %13)
  br label %16

; <label>:14:                                     ; preds = %8, %2
  %15 = load i8*, i8** %4, align 8
  call void @_ZN11StringAccum16hard_append_cstrEPKc(%class.StringAccum* %5, i8* %15)
  br label %16

; <label>:16:                                     ; preds = %14, %9
  ret void
}

declare void @_ZN11StringAccum16hard_append_cstrEPKc(%class.StringAccum*, i8*) #3

declare dereferenceable(16) %class.StringAccum* @_ZlsR11StringAccuml(%class.StringAccum* dereferenceable(16), i64) #3

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6String6appendEPKc(%class.String*, i8*) #2 comdat align 2 {
  %3 = alloca %class.String*, align 8
  %4 = alloca i8*, align 8
  store %class.String* %0, %class.String** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %class.String*, %class.String** %3, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %8, label %15

; <label>:8:                                      ; preds = %2
  br i1 false, label %9, label %15

; <label>:9:                                      ; preds = %8
  %10 = load i8*, i8** %4, align 8
  %11 = load i8*, i8** %4, align 8
  %12 = call i64 @strlen(i8* %11) #13
  %13 = trunc i64 %12 to i32
  %14 = call %"struct.String::memo_t"* @_ZN6String11absent_memoEv()
  call void @_ZN6String6appendEPKciPNS_6memo_tE(%class.String* %5, i8* %10, i32 %13, %"struct.String::memo_t"* %14)
  br label %18

; <label>:15:                                     ; preds = %8, %2
  %16 = load i8*, i8** %4, align 8
  %17 = call %"struct.String::memo_t"* @_ZN6String11absent_memoEv()
  call void @_ZN6String6appendEPKciPNS_6memo_tE(%class.String* %5, i8* %16, i32 -1, %"struct.String::memo_t"* %17)
  br label %18

; <label>:18:                                     ; preds = %15, %9
  ret void
}

declare void @_ZN6String6appendEPKciPNS_6memo_tE(%class.String*, i8*, i32, %"struct.String::memo_t"*) #3

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr %"struct.String::memo_t"* @_ZN6String11absent_memoEv() #0 comdat align 2 {
  ret %"struct.String::memo_t"* inttoptr (i64 1 to %"struct.String::memo_t"*)
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNK9HashTableI6StringiEixERKS0_(%class.HashTable*, %class.String* dereferenceable(24)) #2 comdat align 2 {
  %3 = alloca i32*, align 8
  %4 = alloca %class.HashTable*, align 8
  %5 = alloca %class.String*, align 8
  %6 = alloca %class.HashTable_const_iterator, align 8
  store %class.HashTable* %0, %class.HashTable** %4, align 8
  store %class.String* %1, %class.String** %5, align 8
  %7 = load %class.HashTable*, %class.HashTable** %4, align 8
  %8 = load %class.String*, %class.String** %5, align 8
  call void @_ZNK9HashTableI6StringiE4findERKS0_(%class.HashTable_const_iterator* sret %6, %class.HashTable* %7, %class.String* dereferenceable(24) %8)
  %9 = call { i64, i64 } @_ZNK24HashTable_const_iteratorI4PairIK6StringiEEcvMS4_KFbvEEv(%class.HashTable_const_iterator* %6)
  %10 = extractvalue { i64, i64 } %9, 0
  %11 = icmp ne i64 %10, 0
  br i1 %11, label %12, label %14

; <label>:12:                                     ; preds = %2
  %13 = call dereferenceable(4) i32* @_ZNK24HashTable_const_iteratorI4PairIK6StringiEE5valueEv(%class.HashTable_const_iterator* %6)
  store i32* %13, i32** %3, align 8
  br label %16

; <label>:14:                                     ; preds = %2
  %15 = getelementptr inbounds %class.HashTable, %class.HashTable* %7, i32 0, i32 1
  store i32* %15, i32** %3, align 8
  br label %16

; <label>:16:                                     ; preds = %14, %12
  %17 = load i32*, i32** %3, align 8
  ret i32* %17
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZNK9HashTableI6StringiE4findERKS0_(%class.HashTable_const_iterator* noalias sret, %class.HashTable*, %class.String* dereferenceable(24)) #2 comdat align 2 {
  %4 = alloca %class.HashTable*, align 8
  %5 = alloca %class.String*, align 8
  store %class.HashTable* %1, %class.HashTable** %4, align 8
  store %class.String* %2, %class.String** %5, align 8
  %6 = load %class.HashTable*, %class.HashTable** %4, align 8
  %7 = getelementptr inbounds %class.HashTable, %class.HashTable* %6, i32 0, i32 0
  %8 = load %class.String*, %class.String** %5, align 8
  call void @_ZNK9HashTableI4PairIK6StringiEvE4findERS2_(%class.HashTable_const_iterator* sret %0, %class.HashTable.13* %7, %class.String* dereferenceable(24) %8)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr { i64, i64 } @_ZNK24HashTable_const_iteratorI4PairIK6StringiEEcvMS4_KFbvEEv(%class.HashTable_const_iterator*) #2 comdat align 2 {
  %2 = alloca %class.HashTable_const_iterator*, align 8
  store %class.HashTable_const_iterator* %0, %class.HashTable_const_iterator** %2, align 8
  %3 = load %class.HashTable_const_iterator*, %class.HashTable_const_iterator** %2, align 8
  %4 = getelementptr inbounds %class.HashTable_const_iterator, %class.HashTable_const_iterator* %3, i32 0, i32 0
  %5 = call { i64, i64 } @_ZNK28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEcvMS9_KFPS6_vEEv(%class.HashContainer_const_iterator* %4)
  %6 = extractvalue { i64, i64 } %5, 0
  %7 = icmp ne i64 %6, 0
  %8 = zext i1 %7 to i64
  %9 = select i1 %7, { i64, i64 } { i64 ptrtoint (i1 (%class.HashTable_const_iterator*)* @_ZNK24HashTable_const_iteratorI4PairIK6StringiEE4liveEv to i64), i64 0 }, { i64, i64 } zeroinitializer
  ret { i64, i64 } %9
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZNK9HashTableI4PairIK6StringiEvE4findERS2_(%class.HashTable_const_iterator* noalias sret, %class.HashTable.13*, %class.String* dereferenceable(24)) #2 comdat align 2 {
  %4 = alloca %class.HashTable.13*, align 8
  %5 = alloca %class.String*, align 8
  %6 = alloca %class.HashContainer_const_iterator, align 8
  store %class.HashTable.13* %1, %class.HashTable.13** %4, align 8
  store %class.String* %2, %class.String** %5, align 8
  %7 = load %class.HashTable.13*, %class.HashTable.13** %4, align 8
  %8 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %7, i32 0, i32 0
  %9 = load %class.String*, %class.String** %5, align 8
  call void @_ZNK13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE4findERS3_(%class.HashContainer_const_iterator* sret %6, %class.HashContainer* %8, %class.String* dereferenceable(24) %9)
  call void @_ZN24HashTable_const_iteratorI4PairIK6StringiEEC2ERK28HashContainer_const_iteratorIN9HashTableIS3_vE3eltE21HashContainer_adapterIS8_EE(%class.HashTable_const_iterator* %0, %class.HashContainer_const_iterator* dereferenceable(32) %6)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZNK13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE4findERS3_(%class.HashContainer_const_iterator* noalias sret, %class.HashContainer*, %class.String* dereferenceable(24)) #2 comdat align 2 {
  %4 = alloca %class.HashContainer*, align 8
  %5 = alloca %class.String*, align 8
  %6 = alloca %class.HashContainer_iterator, align 8
  store %class.HashContainer* %1, %class.HashContainer** %4, align 8
  store %class.String* %2, %class.String** %5, align 8
  %7 = load %class.HashContainer*, %class.HashContainer** %4, align 8
  %8 = load %class.String*, %class.String** %5, align 8
  call void @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE4findERS3_(%class.HashContainer_iterator* sret %6, %class.HashContainer* %7, %class.String* dereferenceable(24) %8)
  %9 = bitcast %class.HashContainer_iterator* %6 to %class.HashContainer_const_iterator*
  %10 = bitcast %class.HashContainer_const_iterator* %0 to i8*
  %11 = bitcast %class.HashContainer_const_iterator* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 32, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN24HashTable_const_iteratorI4PairIK6StringiEEC2ERK28HashContainer_const_iteratorIN9HashTableIS3_vE3eltE21HashContainer_adapterIS8_EE(%class.HashTable_const_iterator*, %class.HashContainer_const_iterator* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.HashTable_const_iterator*, align 8
  %4 = alloca %class.HashContainer_const_iterator*, align 8
  store %class.HashTable_const_iterator* %0, %class.HashTable_const_iterator** %3, align 8
  store %class.HashContainer_const_iterator* %1, %class.HashContainer_const_iterator** %4, align 8
  %5 = load %class.HashTable_const_iterator*, %class.HashTable_const_iterator** %3, align 8
  %6 = getelementptr inbounds %class.HashTable_const_iterator, %class.HashTable_const_iterator* %5, i32 0, i32 0
  %7 = load %class.HashContainer_const_iterator*, %class.HashContainer_const_iterator** %4, align 8
  %8 = bitcast %class.HashContainer_const_iterator* %6 to i8*
  %9 = bitcast %class.HashContainer_const_iterator* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 32, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE4findERS3_(%class.HashContainer_iterator* noalias sret, %class.HashContainer*, %class.String* dereferenceable(24)) #2 comdat align 2 {
  %4 = alloca %class.HashContainer*, align 8
  %5 = alloca %class.String*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %"struct.HashTable<Pair<const String, int>, void>::elt"**, align 8
  store %class.HashContainer* %1, %class.HashContainer** %4, align 8
  store %class.String* %2, %class.String** %5, align 8
  %8 = load %class.HashContainer*, %class.HashContainer** %4, align 8
  %9 = load %class.String*, %class.String** %5, align 8
  %10 = call i32 @_ZNK13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE6bucketERS3_(%class.HashContainer* %8, %class.String* dereferenceable(24) %9)
  store i32 %10, i32* %6, align 4
  %11 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %8, i32 0, i32 0
  %12 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %11, i32 0, i32 0
  %13 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %12, align 8
  %14 = load i32, i32* %6, align 4
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %13, i64 %15
  store %"struct.HashTable<Pair<const String, int>, void>::elt"** %16, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %7, align 8
  br label %17

; <label>:17:                                     ; preds = %35, %3
  %18 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %7, align 8
  %19 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %18, align 8
  %20 = icmp ne %"struct.HashTable<Pair<const String, int>, void>::elt"* %19, null
  br i1 %20, label %21, label %40

; <label>:21:                                     ; preds = %17
  %22 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %8, i32 0, i32 0
  %23 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %8, i32 0, i32 0
  %24 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %7, align 8
  %25 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %24, align 8
  %26 = call dereferenceable(24) %class.String* @_ZN21HashContainer_adapterIN9HashTableI4PairIK6StringiEvE3eltEE7hashkeyEPKS6_(%"struct.HashTable<Pair<const String, int>, void>::elt"* %25)
  %27 = load %class.String*, %class.String** %5, align 8
  %28 = call zeroext i1 @_ZN21HashContainer_adapterIN9HashTableI4PairIK6StringiEvE3eltEE9hashkeyeqERS3_S8_(%class.String* dereferenceable(24) %26, %class.String* dereferenceable(24) %27)
  br i1 %28, label %29, label %34

; <label>:29:                                     ; preds = %21
  %30 = load i32, i32* %6, align 4
  %31 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %7, align 8
  %32 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %7, align 8
  %33 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %32, align 8
  call void @_ZN22HashContainer_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEC2EP13HashContainerIS6_S8_EjPPS6_SD_(%class.HashContainer_iterator* %0, %class.HashContainer* %8, i32 %30, %"struct.HashTable<Pair<const String, int>, void>::elt"** %31, %"struct.HashTable<Pair<const String, int>, void>::elt"* %33)
  br label %48

; <label>:34:                                     ; preds = %21
  br label %35

; <label>:35:                                     ; preds = %34
  %36 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %8, i32 0, i32 0
  %37 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %7, align 8
  %38 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %37, align 8
  %39 = call dereferenceable(8) %"struct.HashTable<Pair<const String, int>, void>::elt"** @_ZN21HashContainer_adapterIN9HashTableI4PairIK6StringiEvE3eltEE8hashnextEPS6_(%"struct.HashTable<Pair<const String, int>, void>::elt"* %38)
  store %"struct.HashTable<Pair<const String, int>, void>::elt"** %39, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %7, align 8
  br label %17

; <label>:40:                                     ; preds = %17
  %41 = load i32, i32* %6, align 4
  %42 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %8, i32 0, i32 0
  %43 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %42, i32 0, i32 0
  %44 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %43, align 8
  %45 = load i32, i32* %6, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %44, i64 %46
  call void @_ZN22HashContainer_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEC2EP13HashContainerIS6_S8_EjPPS6_SD_(%class.HashContainer_iterator* %0, %class.HashContainer* %8, i32 %41, %"struct.HashTable<Pair<const String, int>, void>::elt"** %47, %"struct.HashTable<Pair<const String, int>, void>::elt"* null)
  br label %48

; <label>:48:                                     ; preds = %40, %29
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr i32 @_ZNK13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE6bucketERS3_(%class.HashContainer*, %class.String* dereferenceable(24)) #2 comdat align 2 {
  %3 = alloca %class.HashContainer*, align 8
  %4 = alloca %class.String*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %class.HashContainer* %0, %class.HashContainer** %3, align 8
  store %class.String* %1, %class.String** %4, align 8
  %8 = load %class.HashContainer*, %class.HashContainer** %3, align 8
  %9 = load %class.String*, %class.String** %4, align 8
  %10 = call i64 @_Z8hashcodeI6StringEmRKT_(%class.String* dereferenceable(24) %9)
  %11 = trunc i64 %10 to i32
  store i32 %11, i32* %5, align 4
  %12 = load i32, i32* %5, align 4
  %13 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %8, i32 0, i32 0
  %14 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %13, i32 0, i32 4
  %15 = call i32 @_ZL16libdivide_u32_dojPK15libdivide_u32_t(i32 %12, %struct.libdivide_u32_t* %14)
  store i32 %15, i32* %6, align 4
  %16 = load i32, i32* %5, align 4
  %17 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %8, i32 0, i32 0
  %18 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %17, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = load i32, i32* %6, align 4
  %21 = mul i32 %19, %20
  %22 = sub i32 %16, %21
  store i32 %22, i32* %7, align 4
  %23 = load i32, i32* %7, align 4
  ret i32 %23
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr zeroext i1 @_ZN21HashContainer_adapterIN9HashTableI4PairIK6StringiEvE3eltEE9hashkeyeqERS3_S8_(%class.String* dereferenceable(24), %class.String* dereferenceable(24)) #2 comdat align 2 {
  %3 = alloca %class.String*, align 8
  %4 = alloca %class.String*, align 8
  store %class.String* %0, %class.String** %3, align 8
  store %class.String* %1, %class.String** %4, align 8
  %5 = load %class.String*, %class.String** %3, align 8
  %6 = load %class.String*, %class.String** %4, align 8
  %7 = call zeroext i1 @_ZeqRK6StringS1_(%class.String* dereferenceable(24) %5, %class.String* dereferenceable(24) %6)
  ret i1 %7
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dereferenceable(24) %class.String* @_ZN21HashContainer_adapterIN9HashTableI4PairIK6StringiEvE3eltEE7hashkeyEPKS6_(%"struct.HashTable<Pair<const String, int>, void>::elt"*) #2 comdat align 2 {
  %2 = alloca %"struct.HashTable<Pair<const String, int>, void>::elt"*, align 8
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %0, %"struct.HashTable<Pair<const String, int>, void>::elt"** %2, align 8
  %3 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %2, align 8
  %4 = call dereferenceable(24) %class.String* @_ZNK9HashTableI4PairIK6StringiEvE3elt7hashkeyEv(%"struct.HashTable<Pair<const String, int>, void>::elt"* %3)
  ret %class.String* %4
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN22HashContainer_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEC2EP13HashContainerIS6_S8_EjPPS6_SD_(%class.HashContainer_iterator*, %class.HashContainer*, i32, %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*) unnamed_addr #2 comdat align 2 {
  %6 = alloca %class.HashContainer_iterator*, align 8
  %7 = alloca %class.HashContainer*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %"struct.HashTable<Pair<const String, int>, void>::elt"**, align 8
  %10 = alloca %"struct.HashTable<Pair<const String, int>, void>::elt"*, align 8
  store %class.HashContainer_iterator* %0, %class.HashContainer_iterator** %6, align 8
  store %class.HashContainer* %1, %class.HashContainer** %7, align 8
  store i32 %2, i32* %8, align 4
  store %"struct.HashTable<Pair<const String, int>, void>::elt"** %3, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %9, align 8
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %4, %"struct.HashTable<Pair<const String, int>, void>::elt"** %10, align 8
  %11 = load %class.HashContainer_iterator*, %class.HashContainer_iterator** %6, align 8
  %12 = bitcast %class.HashContainer_iterator* %11 to %class.HashContainer_const_iterator*
  %13 = load %class.HashContainer*, %class.HashContainer** %7, align 8
  %14 = load i32, i32* %8, align 4
  %15 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %9, align 8
  %16 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %10, align 8
  call void @_ZN28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEC2EPK13HashContainerIS6_S8_EjPPS6_SE_(%class.HashContainer_const_iterator* %12, %class.HashContainer* %13, i32 %14, %"struct.HashTable<Pair<const String, int>, void>::elt"** %15, %"struct.HashTable<Pair<const String, int>, void>::elt"* %16)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(8) %"struct.HashTable<Pair<const String, int>, void>::elt"** @_ZN21HashContainer_adapterIN9HashTableI4PairIK6StringiEvE3eltEE8hashnextEPS6_(%"struct.HashTable<Pair<const String, int>, void>::elt"*) #0 comdat align 2 {
  %2 = alloca %"struct.HashTable<Pair<const String, int>, void>::elt"*, align 8
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %0, %"struct.HashTable<Pair<const String, int>, void>::elt"** %2, align 8
  %3 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %2, align 8
  %4 = getelementptr inbounds %"struct.HashTable<Pair<const String, int>, void>::elt", %"struct.HashTable<Pair<const String, int>, void>::elt"* %3, i32 0, i32 1
  ret %"struct.HashTable<Pair<const String, int>, void>::elt"** %4
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr i64 @_Z8hashcodeI6StringEmRKT_(%class.String* dereferenceable(24)) #2 comdat {
  %2 = alloca %class.String*, align 8
  store %class.String* %0, %class.String** %2, align 8
  %3 = load %class.String*, %class.String** %2, align 8
  %4 = call i32 @_ZNK6String8hashcodeEv(%class.String* %3)
  %5 = zext i32 %4 to i64
  ret i64 %5
}

; Function Attrs: noinline optnone uwtable
define internal i32 @_ZL16libdivide_u32_dojPK15libdivide_u32_t(i32, %struct.libdivide_u32_t*) #2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.libdivide_u32_t*, align 8
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store %struct.libdivide_u32_t* %1, %struct.libdivide_u32_t** %5, align 8
  %9 = load %struct.libdivide_u32_t*, %struct.libdivide_u32_t** %5, align 8
  %10 = getelementptr inbounds %struct.libdivide_u32_t, %struct.libdivide_u32_t* %9, i32 0, i32 1
  %11 = load i8, i8* %10, align 4
  store i8 %11, i8* %6, align 1
  %12 = load i8, i8* %6, align 1
  %13 = zext i8 %12 to i32
  %14 = and i32 %13, 128
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %22

; <label>:16:                                     ; preds = %2
  %17 = load i32, i32* %4, align 4
  %18 = load i8, i8* %6, align 1
  %19 = zext i8 %18 to i32
  %20 = and i32 %19, 31
  %21 = lshr i32 %17, %20
  store i32 %21, i32* %3, align 4
  br label %49

; <label>:22:                                     ; preds = %2
  %23 = load %struct.libdivide_u32_t*, %struct.libdivide_u32_t** %5, align 8
  %24 = getelementptr inbounds %struct.libdivide_u32_t, %struct.libdivide_u32_t* %23, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = load i32, i32* %4, align 4
  %27 = call i32 @_ZL21libdivide__mullhi_u32jj(i32 %25, i32 %26)
  store i32 %27, i32* %7, align 4
  %28 = load i8, i8* %6, align 1
  %29 = zext i8 %28 to i32
  %30 = and i32 %29, 64
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %32, label %44

; <label>:32:                                     ; preds = %22
  %33 = load i32, i32* %4, align 4
  %34 = load i32, i32* %7, align 4
  %35 = sub i32 %33, %34
  %36 = lshr i32 %35, 1
  %37 = load i32, i32* %7, align 4
  %38 = add i32 %36, %37
  store i32 %38, i32* %8, align 4
  %39 = load i32, i32* %8, align 4
  %40 = load i8, i8* %6, align 1
  %41 = zext i8 %40 to i32
  %42 = and i32 %41, 31
  %43 = lshr i32 %39, %42
  store i32 %43, i32* %3, align 4
  br label %49

; <label>:44:                                     ; preds = %22
  %45 = load i32, i32* %7, align 4
  %46 = load i8, i8* %6, align 1
  %47 = zext i8 %46 to i32
  %48 = lshr i32 %45, %47
  store i32 %48, i32* %3, align 4
  br label %49

; <label>:49:                                     ; preds = %44, %32, %16
  %50 = load i32, i32* %3, align 4
  ret i32 %50
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr i32 @_ZNK6String8hashcodeEv(%class.String*) #2 comdat align 2 {
  %2 = alloca %class.String*, align 8
  store %class.String* %0, %class.String** %2, align 8
  %3 = load %class.String*, %class.String** %2, align 8
  %4 = call i32 @_ZNK6String6lengthEv(%class.String* %3)
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %6, label %10

; <label>:6:                                      ; preds = %1
  %7 = call i8* @_ZNK6String5beginEv(%class.String* %3)
  %8 = call i8* @_ZNK6String3endEv(%class.String* %3)
  %9 = call i32 @_ZN6String8hashcodeEPKcS1_(i8* %7, i8* %8)
  br label %11

; <label>:10:                                     ; preds = %1
  br label %11

; <label>:11:                                     ; preds = %10, %6
  %12 = phi i32 [ %9, %6 ], [ 0, %10 ]
  ret i32 %12
}

declare i32 @_ZN6String8hashcodeEPKcS1_(i8*, i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @_ZL21libdivide__mullhi_u32jj(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %8 = load i32, i32* %3, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %5, align 8
  %10 = load i32, i32* %4, align 4
  %11 = zext i32 %10 to i64
  store i64 %11, i64* %6, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load i64, i64* %6, align 8
  %14 = mul i64 %12, %13
  store i64 %14, i64* %7, align 8
  %15 = load i64, i64* %7, align 8
  %16 = lshr i64 %15, 32
  %17 = trunc i64 %16 to i32
  ret i32 %17
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dereferenceable(24) %class.String* @_ZNK9HashTableI4PairIK6StringiEvE3elt7hashkeyEv(%"struct.HashTable<Pair<const String, int>, void>::elt"*) #2 comdat align 2 {
  %2 = alloca %"struct.HashTable<Pair<const String, int>, void>::elt"*, align 8
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %0, %"struct.HashTable<Pair<const String, int>, void>::elt"** %2, align 8
  %3 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %2, align 8
  %4 = getelementptr inbounds %"struct.HashTable<Pair<const String, int>, void>::elt", %"struct.HashTable<Pair<const String, int>, void>::elt"* %3, i32 0, i32 0
  %5 = call dereferenceable(24) %class.String* @_ZNK4PairIK6StringiE7hashkeyEv(%struct.Pair* %4)
  ret %class.String* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(24) %class.String* @_ZNK4PairIK6StringiE7hashkeyEv(%struct.Pair*) #0 comdat align 2 {
  %2 = alloca %struct.Pair*, align 8
  store %struct.Pair* %0, %struct.Pair** %2, align 8
  %3 = load %struct.Pair*, %struct.Pair** %2, align 8
  %4 = getelementptr inbounds %struct.Pair, %struct.Pair* %3, i32 0, i32 0
  ret %class.String* %4
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEC2EPK13HashContainerIS6_S8_EjPPS6_SE_(%class.HashContainer_const_iterator*, %class.HashContainer*, i32, %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*) unnamed_addr #0 comdat align 2 {
  %6 = alloca %class.HashContainer_const_iterator*, align 8
  %7 = alloca %class.HashContainer*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %"struct.HashTable<Pair<const String, int>, void>::elt"**, align 8
  %10 = alloca %"struct.HashTable<Pair<const String, int>, void>::elt"*, align 8
  store %class.HashContainer_const_iterator* %0, %class.HashContainer_const_iterator** %6, align 8
  store %class.HashContainer* %1, %class.HashContainer** %7, align 8
  store i32 %2, i32* %8, align 4
  store %"struct.HashTable<Pair<const String, int>, void>::elt"** %3, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %9, align 8
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %4, %"struct.HashTable<Pair<const String, int>, void>::elt"** %10, align 8
  %11 = load %class.HashContainer_const_iterator*, %class.HashContainer_const_iterator** %6, align 8
  %12 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %11, i32 0, i32 0
  %13 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %10, align 8
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %13, %"struct.HashTable<Pair<const String, int>, void>::elt"** %12, align 8
  %14 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %11, i32 0, i32 1
  %15 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %9, align 8
  store %"struct.HashTable<Pair<const String, int>, void>::elt"** %15, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %14, align 8
  %16 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %11, i32 0, i32 2
  %17 = load i32, i32* %8, align 4
  store i32 %17, i32* %16, align 8
  %18 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %11, i32 0, i32 3
  %19 = load %class.HashContainer*, %class.HashContainer** %7, align 8
  store %class.HashContainer* %19, %class.HashContainer** %18, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr { i64, i64 } @_ZNK28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEcvMS9_KFPS6_vEEv(%class.HashContainer_const_iterator*) #0 comdat align 2 {
  %2 = alloca %class.HashContainer_const_iterator*, align 8
  store %class.HashContainer_const_iterator* %0, %class.HashContainer_const_iterator** %2, align 8
  %3 = load %class.HashContainer_const_iterator*, %class.HashContainer_const_iterator** %2, align 8
  %4 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %3, i32 0, i32 0
  %5 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %4, align 8
  %6 = icmp ne %"struct.HashTable<Pair<const String, int>, void>::elt"* %5, null
  %7 = zext i1 %6 to i64
  %8 = select i1 %6, { i64, i64 } { i64 ptrtoint (%"struct.HashTable<Pair<const String, int>, void>::elt"* (%class.HashContainer_const_iterator*)* @_ZNK28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE3getEv to i64), i64 0 }, { i64, i64 } zeroinitializer
  ret { i64, i64 } %8
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr %"struct.HashTable<Pair<const String, int>, void>::elt"* @_ZNK28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE3getEv(%class.HashContainer_const_iterator*) #0 comdat align 2 {
  %2 = alloca %class.HashContainer_const_iterator*, align 8
  store %class.HashContainer_const_iterator* %0, %class.HashContainer_const_iterator** %2, align 8
  %3 = load %class.HashContainer_const_iterator*, %class.HashContainer_const_iterator** %2, align 8
  %4 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %3, i32 0, i32 0
  %5 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %4, align 8
  ret %"struct.HashTable<Pair<const String, int>, void>::elt"* %5
}

declare void @_ZN6String16hard_make_stableEPKci(%class.String* sret, i8*, i32) #3

declare void @_ZN12ErrorElementC1Ev(%class.ErrorElement*) unnamed_addr #3

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN13vector_memoryI18sized_array_memoryILm8EEED2Ev(%class.vector_memory*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.vector_memory*, align 8
  store %class.vector_memory* %0, %class.vector_memory** %2, align 8
  %3 = load %class.vector_memory*, %class.vector_memory** %2, align 8
  %4 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %3, i32 0, i32 0
  %5 = load %struct.char_array*, %struct.char_array** %4, align 8
  %6 = bitcast %struct.char_array* %5 to i8*
  %7 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %3, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  invoke void @_ZN18sized_array_memoryILm8EE7destroyEPvm(i8* %6, i64 %9)
          to label %10 unwind label %21

; <label>:10:                                     ; preds = %1
  %11 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %3, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = mul i64 %13, 8
  %15 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %3, i32 0, i32 0
  %16 = load %struct.char_array*, %struct.char_array** %15, align 8
  %17 = bitcast %struct.char_array* %16 to i8*
  %18 = icmp eq i8* %17, null
  br i1 %18, label %20, label %19

; <label>:19:                                     ; preds = %10
  call void @_ZdaPv(i8* %17) #14
  br label %20

; <label>:20:                                     ; preds = %19, %10
  ret void

; <label>:21:                                     ; preds = %1
  %22 = landingpad { i8*, i32 }
          catch i8* null
  %23 = extractvalue { i8*, i32 } %22, 0
  call void @__clang_call_terminate(i8* %23) #12
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN18sized_array_memoryILm8EE7destroyEPvm(i8*, i64) #0 comdat align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN13vector_memoryI18typed_array_memoryIN5Lexer11ElementTypeEEED2Ev(%class.vector_memory.15*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.vector_memory.15*, align 8
  store %class.vector_memory.15* %0, %class.vector_memory.15** %2, align 8
  %3 = load %class.vector_memory.15*, %class.vector_memory.15** %2, align 8
  %4 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %3, i32 0, i32 0
  %5 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %4, align 8
  %6 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %3, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = sext i32 %7 to i64
  invoke void @_ZN18typed_array_memoryIN5Lexer11ElementTypeEE7destroyEPS1_m(%"struct.Lexer::ElementType"* %5, i64 %8)
          to label %9 unwind label %20

; <label>:9:                                      ; preds = %1
  %10 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %3, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = mul i64 %12, 48
  %14 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %3, i32 0, i32 0
  %15 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %14, align 8
  %16 = bitcast %"struct.Lexer::ElementType"* %15 to i8*
  %17 = icmp eq i8* %16, null
  br i1 %17, label %19, label %18

; <label>:18:                                     ; preds = %9
  call void @_ZdaPv(i8* %16) #14
  br label %19

; <label>:19:                                     ; preds = %18, %9
  ret void

; <label>:20:                                     ; preds = %1
  %21 = landingpad { i8*, i32 }
          catch i8* null
  %22 = extractvalue { i8*, i32 } %21, 0
  call void @__clang_call_terminate(i8* %22) #12
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN18typed_array_memoryIN5Lexer11ElementTypeEE7destroyEPS1_m(%"struct.Lexer::ElementType"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.Lexer::ElementType"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  store %"struct.Lexer::ElementType"* %0, %"struct.Lexer::ElementType"** %3, align 8
  store i64 %1, i64* %4, align 8
  store i64 0, i64* %5, align 8
  br label %6

; <label>:6:                                      ; preds = %14, %2
  %7 = load i64, i64* %5, align 8
  %8 = load i64, i64* %4, align 8
  %9 = icmp ne i64 %7, %8
  br i1 %9, label %10, label %17

; <label>:10:                                     ; preds = %6
  %11 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %3, align 8
  %12 = load i64, i64* %5, align 8
  %13 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %11, i64 %12
  call void @_ZN5Lexer11ElementTypeD2Ev(%"struct.Lexer::ElementType"* %13) #9
  br label %14

; <label>:14:                                     ; preds = %10
  %15 = load i64, i64* %5, align 8
  %16 = add i64 %15, 1
  store i64 %16, i64* %5, align 8
  br label %6

; <label>:17:                                     ; preds = %6
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN9HashTableI6StringiEC2Ev(%class.HashTable*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %class.HashTable*, align 8
  store %class.HashTable* %0, %class.HashTable** %2, align 8
  %3 = load %class.HashTable*, %class.HashTable** %2, align 8
  %4 = getelementptr inbounds %class.HashTable, %class.HashTable* %3, i32 0, i32 0
  call void @_ZN9HashTableI4PairIK6StringiEvEC2Ev(%class.HashTable.13* %4)
  %5 = getelementptr inbounds %class.HashTable, %class.HashTable* %3, i32 0, i32 1
  store i32 0, i32* %5, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN9HashTableI4PairIK6StringiEvEC2Ev(%class.HashTable.13*) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.HashTable.13*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %class.HashTable.13* %0, %class.HashTable.13** %2, align 8
  %5 = load %class.HashTable.13*, %class.HashTable.13** %2, align 8
  %6 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %5, i32 0, i32 0
  call void @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEC2Ev(%class.HashContainer* %6)
  %7 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %5, i32 0, i32 1
  invoke void @_ZN18SizedHashAllocatorILm40EEC2Ev(%class.SizedHashAllocator* %7)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %1
  ret void

; <label>:9:                                      ; preds = %1
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  store i8* %11, i8** %3, align 8
  %12 = extractvalue { i8*, i32 } %10, 1
  store i32 %12, i32* %4, align 4
  call void @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EED2Ev(%class.HashContainer* %6) #9
  br label %13

; <label>:13:                                     ; preds = %9
  %14 = load i8*, i8** %3, align 8
  %15 = load i32, i32* %4, align 4
  %16 = insertvalue { i8*, i32 } undef, i8* %14, 0
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1
  resume { i8*, i32 } %17
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEC2Ev(%class.HashContainer*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %class.HashContainer*, align 8
  %3 = alloca %struct.libdivide_u32_t, align 4
  %4 = alloca i32, align 4
  store %class.HashContainer* %0, %class.HashContainer** %2, align 8
  %5 = load %class.HashContainer*, %class.HashContainer** %2, align 8
  %6 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %5, i32 0, i32 0
  %7 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %5, i32 0, i32 0
  %8 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %7, i32 0, i32 3
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %5, i32 0, i32 0
  %10 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %9, i32 0, i32 1
  store i32 63, i32* %10, align 8
  %11 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %5, i32 0, i32 0
  %12 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = mul i64 8, %14
  %16 = call i8* @_Znam(i64 %15) #15
  %17 = bitcast i8* %16 to %"struct.HashTable<Pair<const String, int>, void>::elt"**
  %18 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %5, i32 0, i32 0
  %19 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %18, i32 0, i32 0
  store %"struct.HashTable<Pair<const String, int>, void>::elt"** %17, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %19, align 8
  %20 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %5, i32 0, i32 0
  %21 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %20, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %5, i32 0, i32 0
  %24 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %23, i32 0, i32 2
  store i32 %22, i32* %24, align 4
  %25 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %5, i32 0, i32 0
  %26 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = call i64 @_ZL17libdivide_u32_genj(i32 %27)
  %29 = bitcast %struct.libdivide_u32_t* %3 to i64*
  store i64 %28, i64* %29, align 4
  %30 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %5, i32 0, i32 0
  %31 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %30, i32 0, i32 4
  %32 = bitcast %struct.libdivide_u32_t* %31 to i8*
  %33 = bitcast %struct.libdivide_u32_t* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 4, i1 false)
  store i32 0, i32* %4, align 4
  br label %34

; <label>:34:                                     ; preds = %47, %1
  %35 = load i32, i32* %4, align 4
  %36 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %5, i32 0, i32 0
  %37 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %36, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp ult i32 %35, %38
  br i1 %39, label %40, label %50

; <label>:40:                                     ; preds = %34
  %41 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %5, i32 0, i32 0
  %42 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %41, i32 0, i32 0
  %43 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %42, align 8
  %44 = load i32, i32* %4, align 4
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %43, i64 %45
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* null, %"struct.HashTable<Pair<const String, int>, void>::elt"** %46, align 8
  br label %47

; <label>:47:                                     ; preds = %40
  %48 = load i32, i32* %4, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %4, align 4
  br label %34

; <label>:50:                                     ; preds = %34
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN18SizedHashAllocatorILm40EEC2Ev(%class.SizedHashAllocator*) unnamed_addr #2 comdat align 2 {
  %2 = alloca %class.SizedHashAllocator*, align 8
  store %class.SizedHashAllocator* %0, %class.SizedHashAllocator** %2, align 8
  %3 = load %class.SizedHashAllocator*, %class.SizedHashAllocator** %2, align 8
  %4 = bitcast %class.SizedHashAllocator* %3 to %class.HashAllocator*
  call void @_ZN13HashAllocatorC2Em(%class.HashAllocator* %4, i64 40)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EED2Ev(%class.HashContainer*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.HashContainer*, align 8
  store %class.HashContainer* %0, %class.HashContainer** %2, align 8
  %3 = load %class.HashContainer*, %class.HashContainer** %2, align 8
  %4 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %4, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = mul i64 8, %7
  %9 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %3, i32 0, i32 0
  %10 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %9, i32 0, i32 0
  %11 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %10, align 8
  %12 = bitcast %"struct.HashTable<Pair<const String, int>, void>::elt"** %11 to i8*
  %13 = icmp eq i8* %12, null
  br i1 %13, label %15, label %14

; <label>:14:                                     ; preds = %1
  call void @_ZdaPv(i8* %12) #14
  br label %15

; <label>:15:                                     ; preds = %14, %1
  ret void
}

; Function Attrs: nobuiltin
declare noalias i8* @_Znam(i64) #8

; Function Attrs: noinline optnone uwtable
define internal i64 @_ZL17libdivide_u32_genj(i32) #2 {
  %2 = alloca %struct.libdivide_u32_t, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = call i64 @_ZL26libdivide_internal_u32_genji(i32 %4, i32 0)
  %6 = bitcast %struct.libdivide_u32_t* %2 to i64*
  store i64 %5, i64* %6, align 4
  %7 = bitcast %struct.libdivide_u32_t* %2 to i64*
  %8 = load i64, i64* %7, align 4
  ret i64 %8
}

; Function Attrs: noinline optnone uwtable
define internal i64 @_ZL26libdivide_internal_u32_genji(i32, i32) #2 {
  %3 = alloca %struct.libdivide_u32_t, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  %12 = load i32, i32* %5, align 4
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %17

; <label>:14:                                     ; preds = %2
  %15 = load i32, i32* %4, align 4
  %16 = icmp ne i32 %15, 1
  br label %17

; <label>:17:                                     ; preds = %14, %2
  %18 = phi i1 [ true, %2 ], [ %16, %14 ]
  br i1 %18, label %19, label %20

; <label>:19:                                     ; preds = %17
  br label %22

; <label>:20:                                     ; preds = %17
  call void @__assert_fail(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.122, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.123, i32 0, i32 0), i32 188, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZL26libdivide_internal_u32_genji, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %22

; <label>:22:                                     ; preds = %21, %19
  %23 = load i32, i32* %4, align 4
  %24 = call i32 @_ZL32libdivide__count_leading_zeros32j(i32 %23)
  %25 = sub nsw i32 31, %24
  store i32 %25, i32* %6, align 4
  %26 = load i32, i32* %4, align 4
  %27 = load i32, i32* %4, align 4
  %28 = sub i32 %27, 1
  %29 = and i32 %26, %28
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %48

; <label>:31:                                     ; preds = %22
  %32 = load i32, i32* %5, align 4
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %40, label %34

; <label>:34:                                     ; preds = %31
  %35 = getelementptr inbounds %struct.libdivide_u32_t, %struct.libdivide_u32_t* %3, i32 0, i32 0
  store i32 0, i32* %35, align 4
  %36 = load i32, i32* %6, align 4
  %37 = or i32 %36, 128
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.libdivide_u32_t, %struct.libdivide_u32_t* %3, i32 0, i32 1
  store i8 %38, i8* %39, align 4
  br label %47

; <label>:40:                                     ; preds = %31
  %41 = getelementptr inbounds %struct.libdivide_u32_t, %struct.libdivide_u32_t* %3, i32 0, i32 0
  store i32 0, i32* %41, align 4
  %42 = load i32, i32* %6, align 4
  %43 = sub i32 %42, 1
  %44 = or i32 %43, 64
  %45 = trunc i32 %44 to i8
  %46 = getelementptr inbounds %struct.libdivide_u32_t, %struct.libdivide_u32_t* %3, i32 0, i32 1
  store i8 %45, i8* %46, align 4
  br label %47

; <label>:47:                                     ; preds = %40, %34
  br label %105

; <label>:48:                                     ; preds = %22
  %49 = load i32, i32* %6, align 4
  %50 = shl i32 1, %49
  %51 = load i32, i32* %4, align 4
  %52 = call i32 @_ZL25libdivide_64_div_32_to_32jjjPj(i32 %50, i32 0, i32 %51, i32* %8)
  store i32 %52, i32* %9, align 4
  %53 = load i32, i32* %8, align 4
  %54 = icmp ugt i32 %53, 0
  br i1 %54, label %55, label %59

; <label>:55:                                     ; preds = %48
  %56 = load i32, i32* %8, align 4
  %57 = load i32, i32* %4, align 4
  %58 = icmp ult i32 %56, %57
  br label %59

; <label>:59:                                     ; preds = %55, %48
  %60 = phi i1 [ false, %48 ], [ %58, %55 ]
  br i1 %60, label %61, label %62

; <label>:61:                                     ; preds = %59
  br label %64

; <label>:62:                                     ; preds = %59
  call void @__assert_fail(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.124, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.123, i32 0, i32 0), i32 209, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZL26libdivide_internal_u32_genji, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %64

; <label>:64:                                     ; preds = %63, %61
  %65 = load i32, i32* %4, align 4
  %66 = load i32, i32* %8, align 4
  %67 = sub i32 %65, %66
  store i32 %67, i32* %10, align 4
  %68 = load i32, i32* %5, align 4
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %78, label %70

; <label>:70:                                     ; preds = %64
  %71 = load i32, i32* %10, align 4
  %72 = load i32, i32* %6, align 4
  %73 = shl i32 1, %72
  %74 = icmp ult i32 %71, %73
  br i1 %74, label %75, label %78

; <label>:75:                                     ; preds = %70
  %76 = load i32, i32* %6, align 4
  %77 = trunc i32 %76 to i8
  store i8 %77, i8* %7, align 1
  br label %99

; <label>:78:                                     ; preds = %70, %64
  %79 = load i32, i32* %9, align 4
  %80 = load i32, i32* %9, align 4
  %81 = add i32 %80, %79
  store i32 %81, i32* %9, align 4
  %82 = load i32, i32* %8, align 4
  %83 = load i32, i32* %8, align 4
  %84 = add i32 %82, %83
  store i32 %84, i32* %11, align 4
  %85 = load i32, i32* %11, align 4
  %86 = load i32, i32* %4, align 4
  %87 = icmp uge i32 %85, %86
  br i1 %87, label %92, label %88

; <label>:88:                                     ; preds = %78
  %89 = load i32, i32* %11, align 4
  %90 = load i32, i32* %8, align 4
  %91 = icmp ult i32 %89, %90
  br i1 %91, label %92, label %95

; <label>:92:                                     ; preds = %88, %78
  %93 = load i32, i32* %9, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %9, align 4
  br label %95

; <label>:95:                                     ; preds = %92, %88
  %96 = load i32, i32* %6, align 4
  %97 = or i32 %96, 64
  %98 = trunc i32 %97 to i8
  store i8 %98, i8* %7, align 1
  br label %99

; <label>:99:                                     ; preds = %95, %75
  %100 = load i32, i32* %9, align 4
  %101 = add i32 1, %100
  %102 = getelementptr inbounds %struct.libdivide_u32_t, %struct.libdivide_u32_t* %3, i32 0, i32 0
  store i32 %101, i32* %102, align 4
  %103 = load i8, i8* %7, align 1
  %104 = getelementptr inbounds %struct.libdivide_u32_t, %struct.libdivide_u32_t* %3, i32 0, i32 1
  store i8 %103, i8* %104, align 4
  br label %105

; <label>:105:                                    ; preds = %99, %47
  %106 = bitcast %struct.libdivide_u32_t* %3 to i64*
  %107 = load i64, i64* %106, align 4
  ret i64 %107
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @_ZL32libdivide__count_leading_zeros32j(i32) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call i32 @llvm.ctlz.i32(i32 %3, i1 true)
  ret i32 %4
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @_ZL25libdivide_64_div_32_to_32jjjPj(i32, i32, i32, i32*) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32* %3, i32** %8, align 8
  %10 = load i32*, i32** %8, align 8
  %11 = load i32, i32* %7, align 4
  %12 = load i32, i32* %6, align 4
  %13 = load i32, i32* %5, align 4
  %14 = call { i32, i32 } asm "divl $2", "={ax},={dx},r,{ax},{dx},~{dirflag},~{fpsr},~{flags}"(i32 %11, i32 %12, i32 %13) #16, !srcloc !2
  %15 = extractvalue { i32, i32 } %14, 0
  %16 = extractvalue { i32, i32 } %14, 1
  store i32 %15, i32* %9, align 4
  store i32 %16, i32* %10, align 4
  %17 = load i32, i32* %9, align 4
  ret i32 %17
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1) #11

declare void @_ZN13HashAllocatorC2Em(%class.HashAllocator*, i64) unnamed_addr #3

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6StringC2EPKciPNS_6memo_tE(%class.String*, i8*, i32, %"struct.String::memo_t"*) unnamed_addr #2 comdat align 2 {
  %5 = alloca %class.String*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %"struct.String::memo_t"*, align 8
  store %class.String* %0, %class.String** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  store %"struct.String::memo_t"* %3, %"struct.String::memo_t"** %8, align 8
  %9 = load %class.String*, %class.String** %5, align 8
  %10 = getelementptr inbounds %class.String, %class.String* %9, i32 0, i32 0
  %11 = load i8*, i8** %6, align 8
  %12 = load i32, i32* %7, align 4
  %13 = load %"struct.String::memo_t"*, %"struct.String::memo_t"** %8, align 8
  call void @_ZNK6String11assign_memoEPKciPNS_6memo_tE(%class.String* %9, i8* %11, i32 %12, %"struct.String::memo_t"* %13)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr zeroext i1 @_ZNK6String5emptyEv(%class.String*) #0 comdat align 2 {
  %2 = alloca %class.String*, align 8
  store %class.String* %0, %class.String** %2, align 8
  %3 = load %class.String*, %class.String** %2, align 8
  %4 = getelementptr inbounds %class.String, %class.String* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %4, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  ret i1 %7
}

declare zeroext i1 @_ZNK6String11hard_equalsEPKci(%class.String*, i8*, i32) #3

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6StringC2EPKcS1_(%class.String*, i8*, i8*) unnamed_addr #2 comdat align 2 {
  %4 = alloca %class.String*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store %class.String* %0, %class.String** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %class.String*, %class.String** %4, align 8
  %8 = getelementptr inbounds %class.String, %class.String* %7, i32 0, i32 0
  %9 = load i8*, i8** %5, align 8
  %10 = load i8*, i8** %5, align 8
  %11 = load i8*, i8** %6, align 8
  %12 = icmp ult i8* %10, %11
  br i1 %12, label %13, label %19

; <label>:13:                                     ; preds = %3
  %14 = load i8*, i8** %6, align 8
  %15 = load i8*, i8** %5, align 8
  %16 = ptrtoint i8* %14 to i64
  %17 = ptrtoint i8* %15 to i64
  %18 = sub i64 %16, %17
  br label %20

; <label>:19:                                     ; preds = %3
  br label %20

; <label>:20:                                     ; preds = %19, %13
  %21 = phi i64 [ %18, %13 ], [ 0, %19 ]
  %22 = trunc i64 %21 to i32
  call void @_ZN6String6assignEPKcib(%class.String* %7, i8* %9, i32 %22, i1 zeroext false)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN6LexemeC2ERKS_(%class.Lexeme*, %class.Lexeme* dereferenceable(32)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %class.Lexeme*, align 8
  %4 = alloca %class.Lexeme*, align 8
  store %class.Lexeme* %0, %class.Lexeme** %3, align 8
  store %class.Lexeme* %1, %class.Lexeme** %4, align 8
  %5 = load %class.Lexeme*, %class.Lexeme** %3, align 8
  %6 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %5, i32 0, i32 0
  %7 = load %class.Lexeme*, %class.Lexeme** %4, align 8
  %8 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %7, i32 0, i32 0
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %6, align 8
  %10 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %5, i32 0, i32 1
  %11 = load %class.Lexeme*, %class.Lexeme** %4, align 8
  %12 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %11, i32 0, i32 1
  call void @_ZN6StringC2ERKS_(%class.String* %10, %class.String* dereferenceable(24) %12)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN5Lexer11next_lexemeEv(%class.Lexeme* noalias sret, %class.Lexer*) #2 comdat align 2 {
  %3 = alloca %class.Lexer*, align 8
  store %class.Lexer* %1, %class.Lexer** %3, align 8
  %4 = load %class.Lexer*, %class.Lexer** %3, align 8
  %5 = getelementptr inbounds %class.Lexer, %class.Lexer* %4, i32 0, i32 1
  call void @_ZN5Lexer9FileState11next_lexemeEPS_(%class.Lexeme* sret %0, %"struct.Lexer::FileState"* %5, %class.Lexer* %4)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr signext i8 @_ZNK6String4backEv(%class.String*) #0 comdat align 2 {
  %2 = alloca %class.String*, align 8
  store %class.String* %0, %class.String** %2, align 8
  %3 = load %class.String*, %class.String** %2, align 8
  %4 = getelementptr inbounds %class.String, %class.String* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %4, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %class.String, %class.String* %3, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.String::rep_t", %"struct.String::rep_t"* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = sub nsw i32 %9, 1
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = load i8, i8* %12, align 1
  ret i8 %13
}

declare void @_ZN6StringC1Ej(%class.String*, i32) unnamed_addr #3

; Function Attrs: noinline optnone uwtable
define linkonce_odr i32 @_ZN12ErrorHandler8xmessageERK6StringS2_S2_(%class.ErrorHandler*, %class.String* dereferenceable(24), %class.String* dereferenceable(24), %class.String* dereferenceable(24)) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %class.ErrorHandler*, align 8
  %6 = alloca %class.String*, align 8
  %7 = alloca %class.String*, align 8
  %8 = alloca %class.String*, align 8
  %9 = alloca %class.String, align 8
  %10 = alloca %class.String, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %class.ErrorHandler* %0, %class.ErrorHandler** %5, align 8
  store %class.String* %1, %class.String** %6, align 8
  store %class.String* %2, %class.String** %7, align 8
  store %class.String* %3, %class.String** %8, align 8
  %13 = load %class.ErrorHandler*, %class.ErrorHandler** %5, align 8
  %14 = load %class.String*, %class.String** %7, align 8
  %15 = load %class.String*, %class.String** %6, align 8
  call void @_ZN12ErrorHandler18make_landmark_annoERK6String(%class.String* sret %10, %class.String* dereferenceable(24) %15)
  invoke void @_ZN12ErrorHandler12combine_annoERK6StringS2_(%class.String* sret %9, %class.String* dereferenceable(24) %14, %class.String* dereferenceable(24) %10)
          to label %16 unwind label %20

; <label>:16:                                     ; preds = %4
  %17 = load %class.String*, %class.String** %8, align 8
  %18 = invoke i32 @_ZN12ErrorHandler8xmessageERK6StringS2_(%class.ErrorHandler* %13, %class.String* dereferenceable(24) %9, %class.String* dereferenceable(24) %17)
          to label %19 unwind label %24

; <label>:19:                                     ; preds = %16
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  ret i32 %18

; <label>:20:                                     ; preds = %4
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  store i8* %22, i8** %11, align 8
  %23 = extractvalue { i8*, i32 } %21, 1
  store i32 %23, i32* %12, align 4
  br label %28

; <label>:24:                                     ; preds = %16
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %11, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %12, align 4
  call void @_ZN6StringD2Ev(%class.String* %9) #9
  br label %28

; <label>:28:                                     ; preds = %24, %20
  call void @_ZN6StringD2Ev(%class.String* %10) #9
  br label %29

; <label>:29:                                     ; preds = %28
  %30 = load i8*, i8** %11, align 8
  %31 = load i32, i32* %12, align 4
  %32 = insertvalue { i8*, i32 } undef, i8* %30, 0
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1
  resume { i8*, i32 } %33
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr i32 @_ZN12ErrorHandler8xmessageERK6StringS2_(%class.ErrorHandler*, %class.String* dereferenceable(24), %class.String* dereferenceable(24)) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.ErrorHandler*, align 8
  %5 = alloca %class.String*, align 8
  %6 = alloca %class.String*, align 8
  %7 = alloca %class.String, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %class.ErrorHandler* %0, %class.ErrorHandler** %4, align 8
  store %class.String* %1, %class.String** %5, align 8
  store %class.String* %2, %class.String** %6, align 8
  %10 = load %class.ErrorHandler*, %class.ErrorHandler** %4, align 8
  %11 = load %class.String*, %class.String** %6, align 8
  %12 = load %class.String*, %class.String** %5, align 8
  call void @_ZN12ErrorHandler12combine_annoERK6StringS2_(%class.String* sret %7, %class.String* dereferenceable(24) %11, %class.String* dereferenceable(24) %12)
  %13 = invoke i32 @_ZN12ErrorHandler8xmessageERK6String(%class.ErrorHandler* %10, %class.String* dereferenceable(24) %7)
          to label %14 unwind label %15

; <label>:14:                                     ; preds = %3
  call void @_ZN6StringD2Ev(%class.String* %7) #9
  ret i32 %13

; <label>:15:                                     ; preds = %3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  store i8* %17, i8** %8, align 8
  %18 = extractvalue { i8*, i32 } %16, 1
  store i32 %18, i32* %9, align 4
  call void @_ZN6StringD2Ev(%class.String* %7) #9
  br label %19

; <label>:19:                                     ; preds = %15
  %20 = load i8*, i8** %8, align 8
  %21 = load i32, i32* %9, align 4
  %22 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1
  resume { i8*, i32 } %23
}

declare void @_ZN12ErrorHandler12combine_annoERK6StringS2_(%class.String* sret, %class.String* dereferenceable(24), %class.String* dereferenceable(24)) #3

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN12ErrorHandler18make_landmark_annoERK6String(%class.String* noalias sret, %class.String* dereferenceable(24)) #2 comdat align 2 {
  %3 = alloca %class.String*, align 8
  store %class.String* %1, %class.String** %3, align 8
  %4 = load %class.String*, %class.String** %3, align 8
  %5 = call { i64, i64 } @_ZNK6StringcvMS_KFivEEv(%class.String* %4)
  %6 = extractvalue { i64, i64 } %5, 0
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %15

; <label>:8:                                      ; preds = %2
  %9 = load %class.String*, %class.String** %3, align 8
  %10 = call signext i8 @_ZNK6StringixEi(%class.String* %9, i32 0)
  %11 = sext i8 %10 to i32
  %12 = icmp eq i32 %11, 123
  br i1 %12, label %13, label %15

; <label>:13:                                     ; preds = %8
  %14 = load %class.String*, %class.String** %3, align 8
  call void @_ZN6StringC2ERKS_(%class.String* %0, %class.String* dereferenceable(24) %14)
  br label %23

; <label>:15:                                     ; preds = %8, %2
  %16 = load %class.String*, %class.String** %3, align 8
  %17 = call { i64, i64 } @_ZNK6StringcvMS_KFivEEv(%class.String* %16)
  %18 = extractvalue { i64, i64 } %17, 0
  %19 = icmp ne i64 %18, 0
  br i1 %19, label %20, label %22

; <label>:20:                                     ; preds = %15
  %21 = load %class.String*, %class.String** %3, align 8
  call void @_ZN12ErrorHandler9make_annoEPKcRK6String(%class.String* sret %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.126, i32 0, i32 0), %class.String* dereferenceable(24) %21)
  br label %23

; <label>:22:                                     ; preds = %15
  call void @_ZN6StringC2Ev(%class.String* %0)
  br label %23

; <label>:23:                                     ; preds = %22, %20, %13
  ret void
}

declare i32 @_ZN12ErrorHandler8xmessageERK6String(%class.ErrorHandler*, %class.String* dereferenceable(24)) #3

declare void @_ZN12ErrorHandler9make_annoEPKcRK6String(%class.String* sret, i8*, %class.String* dereferenceable(24)) #3

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNK6VectorIjEixEi(%class.Vector.2*, i32) #0 comdat align 2 {
  %3 = alloca %class.Vector.2*, align 8
  %4 = alloca i32, align 4
  store %class.Vector.2* %0, %class.Vector.2** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.Vector.2*, %class.Vector.2** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = getelementptr inbounds %class.Vector.2, %class.Vector.2* %5, i32 0, i32 0
  %8 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp ult i32 %6, %9
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %2
  br label %14

; <label>:12:                                     ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.128, i32 0, i32 0), i32 295, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__._ZNK6VectorIjEixEi, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %14

; <label>:14:                                     ; preds = %13, %11
  %15 = getelementptr inbounds %class.Vector.2, %class.Vector.2* %5, i32 0, i32 0
  %16 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %15, i32 0, i32 0
  %17 = load %struct.char_array.4*, %struct.char_array.4** %16, align 8
  %18 = load i32, i32* %4, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %struct.char_array.4, %struct.char_array.4* %17, i64 %19
  %21 = bitcast %struct.char_array.4* %20 to i32*
  ret i32* %21
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr i32 @_ZNK19VariableEnvironment5depthEv(%class.VariableEnvironment*) #0 comdat align 2 {
  %2 = alloca %class.VariableEnvironment*, align 8
  store %class.VariableEnvironment* %0, %class.VariableEnvironment** %2, align 8
  %3 = load %class.VariableEnvironment*, %class.VariableEnvironment** %2, align 8
  %4 = getelementptr inbounds %class.VariableEnvironment, %class.VariableEnvironment* %3, i32 0, i32 3
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dereferenceable(32) %class.Lexeme* @_ZN6LexemeaSERKS_(%class.Lexeme*, %class.Lexeme* dereferenceable(32)) #2 comdat align 2 {
  %3 = alloca %class.Lexeme*, align 8
  %4 = alloca %class.Lexeme*, align 8
  store %class.Lexeme* %0, %class.Lexeme** %3, align 8
  store %class.Lexeme* %1, %class.Lexeme** %4, align 8
  %5 = load %class.Lexeme*, %class.Lexeme** %3, align 8
  %6 = load %class.Lexeme*, %class.Lexeme** %4, align 8
  %7 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %6, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %5, i32 0, i32 0
  store i32 %8, i32* %9, align 8
  %10 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %5, i32 0, i32 1
  %11 = load %class.Lexeme*, %class.Lexeme** %4, align 8
  %12 = getelementptr inbounds %class.Lexeme, %class.Lexeme* %11, i32 0, i32 1
  %13 = call dereferenceable(24) %class.String* @_ZN6StringaSERKS_(%class.String* %10, %class.String* dereferenceable(24) %12)
  ret %class.Lexeme* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr zeroext i1 @_ZNK6VectorIiE5emptyEv(%class.Vector.5*) #0 comdat align 2 {
  %2 = alloca %class.Vector.5*, align 8
  store %class.Vector.5* %0, %class.Vector.5** %2, align 8
  %3 = load %class.Vector.5*, %class.Vector.5** %2, align 8
  %4 = getelementptr inbounds %class.Vector.5, %class.Vector.5* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %4, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  ret i1 %7
}

declare zeroext i1 @_Z7cp_wordRK6StringPS_S2_(%class.String* dereferenceable(24), %class.String*, %class.String*) #3

declare zeroext i1 @_Z9cp_stringRK6StringPS_S2_(%class.String* dereferenceable(24), %class.String*, %class.String*) #3

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN6VectorIN6Router10ConnectionEED2Ev(%class.Vector.8*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.Vector.8*, align 8
  store %class.Vector.8* %0, %class.Vector.8** %2, align 8
  %3 = load %class.Vector.8*, %class.Vector.8** %2, align 8
  %4 = getelementptr inbounds %class.Vector.8, %class.Vector.8* %3, i32 0, i32 0
  call void @_ZN13vector_memoryI18sized_array_memoryILm16EEED2Ev(%class.vector_memory.9* %4) #9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN13vector_memoryI18sized_array_memoryILm16EEED2Ev(%class.vector_memory.9*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.vector_memory.9*, align 8
  store %class.vector_memory.9* %0, %class.vector_memory.9** %2, align 8
  %3 = load %class.vector_memory.9*, %class.vector_memory.9** %2, align 8
  %4 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %3, i32 0, i32 0
  %5 = load %struct.char_array.10*, %struct.char_array.10** %4, align 8
  %6 = bitcast %struct.char_array.10* %5 to i8*
  %7 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %3, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  invoke void @_ZN18sized_array_memoryILm16EE7destroyEPvm(i8* %6, i64 %9)
          to label %10 unwind label %21

; <label>:10:                                     ; preds = %1
  %11 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %3, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = mul i64 %13, 16
  %15 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %3, i32 0, i32 0
  %16 = load %struct.char_array.10*, %struct.char_array.10** %15, align 8
  %17 = bitcast %struct.char_array.10* %16 to i8*
  %18 = icmp eq i8* %17, null
  br i1 %18, label %20, label %19

; <label>:19:                                     ; preds = %10
  call void @_ZdaPv(i8* %17) #14
  br label %20

; <label>:20:                                     ; preds = %19, %10
  ret void

; <label>:21:                                     ; preds = %1
  %22 = landingpad { i8*, i32 }
          catch i8* null
  %23 = extractvalue { i8*, i32 } %22, 0
  call void @__clang_call_terminate(i8* %23) #12
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN18sized_array_memoryILm16EE7destroyEPvm(i8*, i64) #0 comdat align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN13vector_memoryI18typed_array_memoryI6StringEE5clearEv(%class.vector_memory.1*) #2 comdat align 2 {
  %2 = alloca %class.vector_memory.1*, align 8
  store %class.vector_memory.1* %0, %class.vector_memory.1** %2, align 8
  %3 = load %class.vector_memory.1*, %class.vector_memory.1** %2, align 8
  %4 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %3, i32 0, i32 0
  %5 = load %class.String*, %class.String** %4, align 8
  %6 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %3, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = sext i32 %7 to i64
  call void @_ZN18typed_array_memoryI6StringE7destroyEPS0_m(%class.String* %5, i64 %8)
  %9 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %3, i32 0, i32 0
  %10 = load %class.String*, %class.String** %9, align 8
  %11 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %3, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = sext i32 %12 to i64
  call void @_ZN18typed_array_memoryI6StringE13mark_noaccessEPS0_m(%class.String* %10, i64 %13)
  %14 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %3, i32 0, i32 1
  store i32 0, i32* %14, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN18typed_array_memoryI6StringE13mark_noaccessEPS0_m(%class.String*, i64) #2 comdat align 2 {
  %3 = alloca %class.String*, align 8
  %4 = alloca i64, align 8
  store %class.String* %0, %class.String** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %class.String*, %class.String** %3, align 8
  %6 = bitcast %class.String* %5 to i8*
  %7 = load i64, i64* %4, align 8
  call void @_ZN18sized_array_memoryILm24EE13mark_noaccessEPvm(i8* %6, i64 %7)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN18sized_array_memoryILm24EE13mark_noaccessEPvm(i8*, i64) #0 comdat align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN13vector_memoryI18sized_array_memoryILm4EEE5clearEv(%class.vector_memory.3*) #2 comdat align 2 {
  %2 = alloca %class.vector_memory.3*, align 8
  store %class.vector_memory.3* %0, %class.vector_memory.3** %2, align 8
  %3 = load %class.vector_memory.3*, %class.vector_memory.3** %2, align 8
  %4 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %3, i32 0, i32 0
  %5 = load %struct.char_array.4*, %struct.char_array.4** %4, align 8
  %6 = bitcast %struct.char_array.4* %5 to i8*
  %7 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %3, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  call void @_ZN18sized_array_memoryILm4EE7destroyEPvm(i8* %6, i64 %9)
  %10 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %3, i32 0, i32 0
  %11 = load %struct.char_array.4*, %struct.char_array.4** %10, align 8
  %12 = bitcast %struct.char_array.4* %11 to i8*
  %13 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %3, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = sext i32 %14 to i64
  call void @_ZN18sized_array_memoryILm4EE13mark_noaccessEPvm(i8* %12, i64 %15)
  %16 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %3, i32 0, i32 1
  store i32 0, i32* %16, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN18sized_array_memoryILm4EE13mark_noaccessEPvm(i8*, i64) #0 comdat align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN13vector_memoryI18typed_array_memoryI6StringEE9push_backEPKS1_(%class.vector_memory.1*, %class.String*) #2 comdat align 2 {
  %3 = alloca %class.vector_memory.1*, align 8
  %4 = alloca %class.String*, align 8
  store %class.vector_memory.1* %0, %class.vector_memory.1** %3, align 8
  store %class.String* %1, %class.String** %4, align 8
  %5 = load %class.vector_memory.1*, %class.vector_memory.1** %3, align 8
  %6 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %5, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %7, %9
  br i1 %10, label %11, label %28

; <label>:11:                                     ; preds = %2
  %12 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %5, i32 0, i32 0
  %13 = load %class.String*, %class.String** %12, align 8
  %14 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %5, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %class.String, %class.String* %13, i64 %16
  call void @_ZN18typed_array_memoryI6StringE14mark_undefinedEPS0_m(%class.String* %17, i64 1)
  %18 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %5, i32 0, i32 0
  %19 = load %class.String*, %class.String** %18, align 8
  %20 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %5, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %class.String, %class.String* %19, i64 %22
  %24 = load %class.String*, %class.String** %4, align 8
  call void @_ZN18typed_array_memoryI6StringE4fillEPS0_mPKS0_(%class.String* %23, i64 1, %class.String* %24)
  %25 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %25, align 8
  br label %31

; <label>:28:                                     ; preds = %2
  %29 = load %class.String*, %class.String** %4, align 8
  %30 = call zeroext i1 @_ZN13vector_memoryI18typed_array_memoryI6StringEE21reserve_and_push_backEiPKS1_(%class.vector_memory.1* %5, i32 -1, %class.String* %29)
  br label %31

; <label>:31:                                     ; preds = %28, %11
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr %class.String* @_ZN18typed_array_memoryI6StringE4castEPKS0_(%class.String*) #0 comdat align 2 {
  %2 = alloca %class.String*, align 8
  store %class.String* %0, %class.String** %2, align 8
  %3 = load %class.String*, %class.String** %2, align 8
  ret %class.String* %3
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN18typed_array_memoryI6StringE14mark_undefinedEPS0_m(%class.String*, i64) #2 comdat align 2 {
  %3 = alloca %class.String*, align 8
  %4 = alloca i64, align 8
  store %class.String* %0, %class.String** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %class.String*, %class.String** %3, align 8
  %6 = bitcast %class.String* %5 to i8*
  %7 = load i64, i64* %4, align 8
  call void @_ZN18sized_array_memoryILm24EE14mark_undefinedEPvm(i8* %6, i64 %7)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN18typed_array_memoryI6StringE4fillEPS0_mPKS0_(%class.String*, i64, %class.String*) #2 comdat align 2 {
  %4 = alloca %class.String*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %class.String*, align 8
  %7 = alloca i64, align 8
  store %class.String* %0, %class.String** %4, align 8
  store i64 %1, i64* %5, align 8
  store %class.String* %2, %class.String** %6, align 8
  store i64 0, i64* %7, align 8
  br label %8

; <label>:8:                                      ; preds = %19, %3
  %9 = load i64, i64* %7, align 8
  %10 = load i64, i64* %5, align 8
  %11 = icmp ne i64 %9, %10
  br i1 %11, label %12, label %22

; <label>:12:                                     ; preds = %8
  %13 = load %class.String*, %class.String** %4, align 8
  %14 = load i64, i64* %7, align 8
  %15 = getelementptr inbounds %class.String, %class.String* %13, i64 %14
  %16 = bitcast %class.String* %15 to i8*
  %17 = bitcast i8* %16 to %class.String*
  %18 = load %class.String*, %class.String** %6, align 8
  call void @_ZN6StringC2ERKS_(%class.String* %17, %class.String* dereferenceable(24) %18)
  br label %19

; <label>:19:                                     ; preds = %12
  %20 = load i64, i64* %7, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %7, align 8
  br label %8

; <label>:22:                                     ; preds = %8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr zeroext i1 @_ZN13vector_memoryI18typed_array_memoryI6StringEE21reserve_and_push_backEiPKS1_(%class.vector_memory.1*, i32, %class.String*) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i1, align 1
  %5 = alloca %class.vector_memory.1*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %class.String*, align 8
  %8 = alloca %class.String, align 8
  %9 = alloca i8*
  %10 = alloca i32
  %11 = alloca %class.String*, align 8
  store %class.vector_memory.1* %0, %class.vector_memory.1** %5, align 8
  store i32 %1, i32* %6, align 4
  store %class.String* %2, %class.String** %7, align 8
  %12 = load %class.vector_memory.1*, %class.vector_memory.1** %5, align 8
  %13 = load %class.String*, %class.String** %7, align 8
  %14 = icmp ne %class.String* %13, null
  br i1 %14, label %15, label %18

; <label>:15:                                     ; preds = %3
  %16 = load %class.String*, %class.String** %7, align 8
  %17 = call zeroext i1 @_ZNK13vector_memoryI18typed_array_memoryI6StringEE18need_argument_copyEPKS1_(%class.vector_memory.1* %12, %class.String* %16)
  br label %18

; <label>:18:                                     ; preds = %15, %3
  %19 = phi i1 [ false, %3 ], [ %17, %15 ]
  %20 = xor i1 %19, true
  %21 = xor i1 %20, true
  br i1 %21, label %22, label %31

; <label>:22:                                     ; preds = %18
  %23 = load %class.String*, %class.String** %7, align 8
  call void @_ZN6StringC2ERKS_(%class.String* %8, %class.String* dereferenceable(24) %23)
  %24 = load i32, i32* %6, align 4
  %25 = invoke zeroext i1 @_ZN13vector_memoryI18typed_array_memoryI6StringEE21reserve_and_push_backEiPKS1_(%class.vector_memory.1* %12, i32 %24, %class.String* %8)
          to label %26 unwind label %27

; <label>:26:                                     ; preds = %22
  store i1 %25, i1* %4, align 1
  call void @_ZN6StringD2Ev(%class.String* %8) #9
  br label %98

; <label>:27:                                     ; preds = %22
  %28 = landingpad { i8*, i32 }
          cleanup
  %29 = extractvalue { i8*, i32 } %28, 0
  store i8* %29, i8** %9, align 8
  %30 = extractvalue { i8*, i32 } %28, 1
  store i32 %30, i32* %10, align 4
  call void @_ZN6StringD2Ev(%class.String* %8) #9
  br label %100

; <label>:31:                                     ; preds = %18
  %32 = load i32, i32* %6, align 4
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %34, label %45

; <label>:34:                                     ; preds = %31
  %35 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %12, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %38, label %42

; <label>:38:                                     ; preds = %34
  %39 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %12, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = mul nsw i32 %40, 2
  br label %43

; <label>:42:                                     ; preds = %34
  br label %43

; <label>:43:                                     ; preds = %42, %38
  %44 = phi i32 [ %41, %38 ], [ 4, %42 ]
  store i32 %44, i32* %6, align 4
  br label %45

; <label>:45:                                     ; preds = %43, %31
  %46 = load i32, i32* %6, align 4
  %47 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %12, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = icmp sgt i32 %46, %48
  br i1 %49, label %50, label %90

; <label>:50:                                     ; preds = %45
  %51 = load i32, i32* %6, align 4
  %52 = sext i32 %51 to i64
  %53 = mul i64 %52, 24
  %54 = call i8* @_Znam(i64 %53) #15
  %55 = bitcast i8* %54 to %class.String*
  store %class.String* %55, %class.String** %11, align 8
  %56 = load %class.String*, %class.String** %11, align 8
  %57 = icmp ne %class.String* %56, null
  br i1 %57, label %59, label %58

; <label>:58:                                     ; preds = %50
  store i1 false, i1* %4, align 1
  br label %98

; <label>:59:                                     ; preds = %50
  %60 = load %class.String*, %class.String** %11, align 8
  %61 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %12, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %class.String, %class.String* %60, i64 %63
  %65 = load i32, i32* %6, align 4
  %66 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %12, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = sub nsw i32 %65, %67
  %69 = sext i32 %68 to i64
  call void @_ZN18typed_array_memoryI6StringE13mark_noaccessEPS0_m(%class.String* %64, i64 %69)
  %70 = load %class.String*, %class.String** %11, align 8
  %71 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %12, i32 0, i32 0
  %72 = load %class.String*, %class.String** %71, align 8
  %73 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %12, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = sext i32 %74 to i64
  call void @_ZN18typed_array_memoryI6StringE4moveEPS0_PKS0_m(%class.String* %70, %class.String* %72, i64 %75)
  %76 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %12, i32 0, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = sext i32 %77 to i64
  %79 = mul i64 %78, 24
  %80 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %12, i32 0, i32 0
  %81 = load %class.String*, %class.String** %80, align 8
  %82 = bitcast %class.String* %81 to i8*
  %83 = icmp eq i8* %82, null
  br i1 %83, label %85, label %84

; <label>:84:                                     ; preds = %59
  call void @_ZdaPv(i8* %82) #14
  br label %85

; <label>:85:                                     ; preds = %84, %59
  %86 = load %class.String*, %class.String** %11, align 8
  %87 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %12, i32 0, i32 0
  store %class.String* %86, %class.String** %87, align 8
  %88 = load i32, i32* %6, align 4
  %89 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %12, i32 0, i32 2
  store i32 %88, i32* %89, align 4
  br label %90

; <label>:90:                                     ; preds = %85, %45
  %91 = load %class.String*, %class.String** %7, align 8
  %92 = icmp ne %class.String* %91, null
  %93 = xor i1 %92, true
  %94 = xor i1 %93, true
  br i1 %94, label %95, label %97

; <label>:95:                                     ; preds = %90
  %96 = load %class.String*, %class.String** %7, align 8
  call void @_ZN13vector_memoryI18typed_array_memoryI6StringEE9push_backEPKS1_(%class.vector_memory.1* %12, %class.String* %96)
  br label %97

; <label>:97:                                     ; preds = %95, %90
  store i1 true, i1* %4, align 1
  br label %98

; <label>:98:                                     ; preds = %97, %58, %26
  %99 = load i1, i1* %4, align 1
  ret i1 %99

; <label>:100:                                    ; preds = %27
  %101 = load i8*, i8** %9, align 8
  %102 = load i32, i32* %10, align 4
  %103 = insertvalue { i8*, i32 } undef, i8* %101, 0
  %104 = insertvalue { i8*, i32 } %103, i32 %102, 1
  resume { i8*, i32 } %104
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN18sized_array_memoryILm24EE14mark_undefinedEPvm(i8*, i64) #0 comdat align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr zeroext i1 @_ZNK13vector_memoryI18typed_array_memoryI6StringEE18need_argument_copyEPKS1_(%class.vector_memory.1*, %class.String*) #0 comdat align 2 {
  %3 = alloca %class.vector_memory.1*, align 8
  %4 = alloca %class.String*, align 8
  store %class.vector_memory.1* %0, %class.vector_memory.1** %3, align 8
  store %class.String* %1, %class.String** %4, align 8
  %5 = load %class.vector_memory.1*, %class.vector_memory.1** %3, align 8
  %6 = load %class.String*, %class.String** %4, align 8
  %7 = ptrtoint %class.String* %6 to i64
  %8 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %5, i32 0, i32 0
  %9 = load %class.String*, %class.String** %8, align 8
  %10 = ptrtoint %class.String* %9 to i64
  %11 = sub i64 %7, %10
  %12 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %5, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = sext i32 %13 to i64
  %15 = mul i64 %14, 24
  %16 = icmp ult i64 %11, %15
  ret i1 %16
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN18typed_array_memoryI6StringE4moveEPS0_PKS0_m(%class.String*, %class.String*, i64) #2 comdat align 2 {
  %4 = alloca %class.String*, align 8
  %5 = alloca %class.String*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store %class.String* %0, %class.String** %4, align 8
  store %class.String* %1, %class.String** %5, align 8
  store i64 %2, i64* %6, align 8
  %8 = load %class.String*, %class.String** %4, align 8
  %9 = load %class.String*, %class.String** %5, align 8
  %10 = icmp ugt %class.String* %8, %9
  br i1 %10, label %11, label %43

; <label>:11:                                     ; preds = %3
  %12 = load %class.String*, %class.String** %5, align 8
  %13 = load i64, i64* %6, align 8
  %14 = getelementptr inbounds %class.String, %class.String* %12, i64 %13
  %15 = load %class.String*, %class.String** %4, align 8
  %16 = icmp ugt %class.String* %14, %15
  br i1 %16, label %17, label %43

; <label>:17:                                     ; preds = %11
  %18 = load i64, i64* %6, align 8
  %19 = sub i64 %18, 1
  %20 = load %class.String*, %class.String** %4, align 8
  %21 = getelementptr inbounds %class.String, %class.String* %20, i64 %19
  store %class.String* %21, %class.String** %4, align 8
  %22 = load i64, i64* %6, align 8
  %23 = sub i64 %22, 1
  %24 = load %class.String*, %class.String** %5, align 8
  %25 = getelementptr inbounds %class.String, %class.String* %24, i64 %23
  store %class.String* %25, %class.String** %5, align 8
  br label %26

; <label>:26:                                     ; preds = %35, %17
  %27 = load i64, i64* %6, align 8
  %28 = icmp ne i64 %27, 0
  br i1 %28, label %29, label %42

; <label>:29:                                     ; preds = %26
  %30 = load %class.String*, %class.String** %4, align 8
  %31 = bitcast %class.String* %30 to i8*
  %32 = bitcast i8* %31 to %class.String*
  %33 = load %class.String*, %class.String** %5, align 8
  call void @_ZN6StringC2ERKS_(%class.String* %32, %class.String* dereferenceable(24) %33)
  %34 = load %class.String*, %class.String** %5, align 8
  call void @_ZN6StringD2Ev(%class.String* %34) #9
  br label %35

; <label>:35:                                     ; preds = %29
  %36 = load i64, i64* %6, align 8
  %37 = add i64 %36, -1
  store i64 %37, i64* %6, align 8
  %38 = load %class.String*, %class.String** %4, align 8
  %39 = getelementptr inbounds %class.String, %class.String* %38, i32 -1
  store %class.String* %39, %class.String** %4, align 8
  %40 = load %class.String*, %class.String** %5, align 8
  %41 = getelementptr inbounds %class.String, %class.String* %40, i32 -1
  store %class.String* %41, %class.String** %5, align 8
  br label %26

; <label>:42:                                     ; preds = %26
  br label %64

; <label>:43:                                     ; preds = %11, %3
  store i64 0, i64* %7, align 8
  br label %44

; <label>:44:                                     ; preds = %60, %43
  %45 = load i64, i64* %7, align 8
  %46 = load i64, i64* %6, align 8
  %47 = icmp ne i64 %45, %46
  br i1 %47, label %48, label %63

; <label>:48:                                     ; preds = %44
  %49 = load %class.String*, %class.String** %4, align 8
  %50 = load i64, i64* %7, align 8
  %51 = getelementptr inbounds %class.String, %class.String* %49, i64 %50
  %52 = bitcast %class.String* %51 to i8*
  %53 = bitcast i8* %52 to %class.String*
  %54 = load %class.String*, %class.String** %5, align 8
  %55 = load i64, i64* %7, align 8
  %56 = getelementptr inbounds %class.String, %class.String* %54, i64 %55
  call void @_ZN6StringC2ERKS_(%class.String* %53, %class.String* dereferenceable(24) %56)
  %57 = load %class.String*, %class.String** %5, align 8
  %58 = load i64, i64* %7, align 8
  %59 = getelementptr inbounds %class.String, %class.String* %57, i64 %58
  call void @_ZN6StringD2Ev(%class.String* %59) #9
  br label %60

; <label>:60:                                     ; preds = %48
  %61 = load i64, i64* %7, align 8
  %62 = add i64 %61, 1
  store i64 %62, i64* %7, align 8
  br label %44

; <label>:63:                                     ; preds = %44
  br label %64

; <label>:64:                                     ; preds = %63, %42
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN13vector_memoryI18sized_array_memoryILm8EEEC2Ev(%class.vector_memory*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.vector_memory*, align 8
  store %class.vector_memory* %0, %class.vector_memory** %2, align 8
  %3 = load %class.vector_memory*, %class.vector_memory** %2, align 8
  %4 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %3, i32 0, i32 0
  store %struct.char_array* null, %struct.char_array** %4, align 8
  %5 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %3, i32 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %3, i32 0, i32 2
  store i32 0, i32* %6, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN9HashTableI4PairIK6StringiEvED2Ev(%class.HashTable.13*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.HashTable.13*, align 8
  %3 = alloca %class.HashContainer_iterator, align 8
  %4 = alloca i8*
  %5 = alloca i32
  %6 = alloca %"struct.HashTable<Pair<const String, int>, void>::elt"*, align 8
  store %class.HashTable.13* %0, %class.HashTable.13** %2, align 8
  %7 = load %class.HashTable.13*, %class.HashTable.13** %2, align 8
  %8 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %7, i32 0, i32 0
  invoke void @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE5beginEv(%class.HashContainer_iterator* sret %3, %class.HashContainer* %8)
          to label %9 unwind label %27

; <label>:9:                                      ; preds = %1
  br label %10

; <label>:10:                                     ; preds = %26, %9
  %11 = bitcast %class.HashContainer_iterator* %3 to %class.HashContainer_const_iterator*
  %12 = invoke { i64, i64 } @_ZNK28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEcvMS9_KFPS6_vEEv(%class.HashContainer_const_iterator* %11)
          to label %13 unwind label %27

; <label>:13:                                     ; preds = %10
  %14 = extractvalue { i64, i64 } %12, 0
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %33

; <label>:16:                                     ; preds = %13
  %17 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %7, i32 0, i32 0
  %18 = invoke %"struct.HashTable<Pair<const String, int>, void>::elt"* @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE5eraseER22HashContainer_iteratorIS6_S8_E(%class.HashContainer* %17, %class.HashContainer_iterator* dereferenceable(32) %3)
          to label %19 unwind label %27

; <label>:19:                                     ; preds = %16
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %18, %"struct.HashTable<Pair<const String, int>, void>::elt"** %6, align 8
  %20 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %6, align 8
  %21 = getelementptr inbounds %"struct.HashTable<Pair<const String, int>, void>::elt", %"struct.HashTable<Pair<const String, int>, void>::elt"* %20, i32 0, i32 0
  call void @_ZN4PairIK6StringiED2Ev(%struct.Pair* %21) #9
  %22 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %7, i32 0, i32 1
  %23 = bitcast %class.SizedHashAllocator* %22 to %class.HashAllocator*
  %24 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %6, align 8
  %25 = bitcast %"struct.HashTable<Pair<const String, int>, void>::elt"* %24 to i8*
  invoke void @_ZN13HashAllocator10deallocateEPv(%class.HashAllocator* %23, i8* %25)
          to label %26 unwind label %27

; <label>:26:                                     ; preds = %19
  br label %10

; <label>:27:                                     ; preds = %19, %16, %10, %1
  %28 = landingpad { i8*, i32 }
          catch i8* null
  %29 = extractvalue { i8*, i32 } %28, 0
  store i8* %29, i8** %4, align 8
  %30 = extractvalue { i8*, i32 } %28, 1
  store i32 %30, i32* %5, align 4
  %31 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %7, i32 0, i32 1
  call void @_ZN18SizedHashAllocatorILm40EED2Ev(%class.SizedHashAllocator* %31) #9
  %32 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %7, i32 0, i32 0
  call void @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EED2Ev(%class.HashContainer* %32) #9
  br label %36

; <label>:33:                                     ; preds = %13
  %34 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %7, i32 0, i32 1
  call void @_ZN18SizedHashAllocatorILm40EED2Ev(%class.SizedHashAllocator* %34) #9
  %35 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %7, i32 0, i32 0
  call void @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EED2Ev(%class.HashContainer* %35) #9
  ret void

; <label>:36:                                     ; preds = %27
  %37 = load i8*, i8** %4, align 8
  call void @__clang_call_terminate(i8* %37) #12
  unreachable
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE5beginEv(%class.HashContainer_iterator* noalias sret, %class.HashContainer*) #2 comdat align 2 {
  %3 = alloca %class.HashContainer*, align 8
  store %class.HashContainer* %1, %class.HashContainer** %3, align 8
  %4 = load %class.HashContainer*, %class.HashContainer** %3, align 8
  call void @_ZN22HashContainer_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEC2EP13HashContainerIS6_S8_E(%class.HashContainer_iterator* %0, %class.HashContainer* %4)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr %"struct.HashTable<Pair<const String, int>, void>::elt"* @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE5eraseER22HashContainer_iteratorIS6_S8_E(%class.HashContainer*, %class.HashContainer_iterator* dereferenceable(32)) #2 comdat align 2 {
  %3 = alloca %class.HashContainer*, align 8
  %4 = alloca %class.HashContainer_iterator*, align 8
  store %class.HashContainer* %0, %class.HashContainer** %3, align 8
  store %class.HashContainer_iterator* %1, %class.HashContainer_iterator** %4, align 8
  %5 = load %class.HashContainer*, %class.HashContainer** %3, align 8
  %6 = load %class.HashContainer_iterator*, %class.HashContainer_iterator** %4, align 8
  %7 = call %"struct.HashTable<Pair<const String, int>, void>::elt"* @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE3setER22HashContainer_iteratorIS6_S8_EPS6_b(%class.HashContainer* %5, %class.HashContainer_iterator* dereferenceable(32) %6, %"struct.HashTable<Pair<const String, int>, void>::elt"* null, i1 zeroext false)
  ret %"struct.HashTable<Pair<const String, int>, void>::elt"* %7
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN4PairIK6StringiED2Ev(%struct.Pair*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %struct.Pair*, align 8
  store %struct.Pair* %0, %struct.Pair** %2, align 8
  %3 = load %struct.Pair*, %struct.Pair** %2, align 8
  %4 = getelementptr inbounds %struct.Pair, %struct.Pair* %3, i32 0, i32 0
  call void @_ZN6StringD2Ev(%class.String* %4) #9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN13HashAllocator10deallocateEPv(%class.HashAllocator*, i8*) #0 comdat align 2 {
  %3 = alloca %class.HashAllocator*, align 8
  %4 = alloca i8*, align 8
  store %class.HashAllocator* %0, %class.HashAllocator** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %class.HashAllocator*, %class.HashAllocator** %3, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %8, label %17

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %class.HashAllocator, %class.HashAllocator* %5, i32 0, i32 0
  %10 = load %"struct.HashAllocator::link"*, %"struct.HashAllocator::link"** %9, align 8
  %11 = load i8*, i8** %4, align 8
  %12 = bitcast i8* %11 to %"struct.HashAllocator::link"*
  %13 = getelementptr inbounds %"struct.HashAllocator::link", %"struct.HashAllocator::link"* %12, i32 0, i32 0
  store %"struct.HashAllocator::link"* %10, %"struct.HashAllocator::link"** %13, align 8
  %14 = load i8*, i8** %4, align 8
  %15 = bitcast i8* %14 to %"struct.HashAllocator::link"*
  %16 = getelementptr inbounds %class.HashAllocator, %class.HashAllocator* %5, i32 0, i32 0
  store %"struct.HashAllocator::link"* %15, %"struct.HashAllocator::link"** %16, align 8
  br label %17

; <label>:17:                                     ; preds = %8, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN18SizedHashAllocatorILm40EED2Ev(%class.SizedHashAllocator*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.SizedHashAllocator*, align 8
  store %class.SizedHashAllocator* %0, %class.SizedHashAllocator** %2, align 8
  %3 = load %class.SizedHashAllocator*, %class.SizedHashAllocator** %2, align 8
  %4 = bitcast %class.SizedHashAllocator* %3 to %class.HashAllocator*
  call void @_ZN13HashAllocatorD2Ev(%class.HashAllocator* %4) #9
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN22HashContainer_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEC2EP13HashContainerIS6_S8_E(%class.HashContainer_iterator*, %class.HashContainer*) unnamed_addr #2 comdat align 2 {
  %3 = alloca %class.HashContainer_iterator*, align 8
  %4 = alloca %class.HashContainer*, align 8
  store %class.HashContainer_iterator* %0, %class.HashContainer_iterator** %3, align 8
  store %class.HashContainer* %1, %class.HashContainer** %4, align 8
  %5 = load %class.HashContainer_iterator*, %class.HashContainer_iterator** %3, align 8
  %6 = bitcast %class.HashContainer_iterator* %5 to %class.HashContainer_const_iterator*
  %7 = load %class.HashContainer*, %class.HashContainer** %4, align 8
  call void @_ZN28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEC2EPK13HashContainerIS6_S8_E(%class.HashContainer_const_iterator* %6, %class.HashContainer* %7)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEppEi(%class.HashContainer_const_iterator*, i32) #2 comdat align 2 {
  %3 = alloca %class.HashContainer_const_iterator*, align 8
  %4 = alloca i32, align 4
  store %class.HashContainer_const_iterator* %0, %class.HashContainer_const_iterator** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %class.HashContainer_const_iterator*, %class.HashContainer_const_iterator** %3, align 8
  call void @_ZN28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEppEv(%class.HashContainer_const_iterator* %5)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEppEv(%class.HashContainer_const_iterator*) #0 comdat align 2 {
  %2 = alloca %class.HashContainer_const_iterator*, align 8
  store %class.HashContainer_const_iterator* %0, %class.HashContainer_const_iterator** %2, align 8
  %3 = load %class.HashContainer_const_iterator*, %class.HashContainer_const_iterator** %2, align 8
  %4 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %3, i32 0, i32 0
  %5 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %4, align 8
  %6 = icmp ne %"struct.HashTable<Pair<const String, int>, void>::elt"* %5, null
  br i1 %6, label %7, label %28

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %3, i32 0, i32 3
  %9 = load %class.HashContainer*, %class.HashContainer** %8, align 8
  %10 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %9, i32 0, i32 0
  %11 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %3, i32 0, i32 0
  %12 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %11, align 8
  %13 = call dereferenceable(8) %"struct.HashTable<Pair<const String, int>, void>::elt"** @_ZN21HashContainer_adapterIN9HashTableI4PairIK6StringiEvE3eltEE8hashnextEPS6_(%"struct.HashTable<Pair<const String, int>, void>::elt"* %12)
  %14 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %13, align 8
  %15 = icmp ne %"struct.HashTable<Pair<const String, int>, void>::elt"* %14, null
  br i1 %15, label %16, label %28

; <label>:16:                                     ; preds = %7
  %17 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %3, i32 0, i32 3
  %18 = load %class.HashContainer*, %class.HashContainer** %17, align 8
  %19 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %18, i32 0, i32 0
  %20 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %3, i32 0, i32 0
  %21 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %20, align 8
  %22 = call dereferenceable(8) %"struct.HashTable<Pair<const String, int>, void>::elt"** @_ZN21HashContainer_adapterIN9HashTableI4PairIK6StringiEvE3eltEE8hashnextEPS6_(%"struct.HashTable<Pair<const String, int>, void>::elt"* %21)
  %23 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %3, i32 0, i32 1
  store %"struct.HashTable<Pair<const String, int>, void>::elt"** %22, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %23, align 8
  %24 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %3, i32 0, i32 1
  %25 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %24, align 8
  %26 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %25, align 8
  %27 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %3, i32 0, i32 0
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %26, %"struct.HashTable<Pair<const String, int>, void>::elt"** %27, align 8
  br label %76

; <label>:28:                                     ; preds = %7, %1
  %29 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %3, i32 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %3, i32 0, i32 3
  %32 = load %class.HashContainer*, %class.HashContainer** %31, align 8
  %33 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %32, i32 0, i32 0
  %34 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %33, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = icmp ne i32 %30, %35
  br i1 %36, label %37, label %75

; <label>:37:                                     ; preds = %28
  %38 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %3, i32 0, i32 2
  %39 = load i32, i32* %38, align 8
  %40 = add i32 %39, 1
  store i32 %40, i32* %38, align 8
  br label %41

; <label>:41:                                     ; preds = %69, %37
  %42 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %3, i32 0, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %3, i32 0, i32 3
  %45 = load %class.HashContainer*, %class.HashContainer** %44, align 8
  %46 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %45, i32 0, i32 0
  %47 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %46, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = icmp ne i32 %43, %48
  br i1 %49, label %50, label %73

; <label>:50:                                     ; preds = %41
  %51 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %3, i32 0, i32 3
  %52 = load %class.HashContainer*, %class.HashContainer** %51, align 8
  %53 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %52, i32 0, i32 0
  %54 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %53, i32 0, i32 0
  %55 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %54, align 8
  %56 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %3, i32 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %55, i64 %58
  %60 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %3, i32 0, i32 1
  store %"struct.HashTable<Pair<const String, int>, void>::elt"** %59, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %60, align 8
  %61 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %59, align 8
  %62 = icmp ne %"struct.HashTable<Pair<const String, int>, void>::elt"* %61, null
  br i1 %62, label %63, label %68

; <label>:63:                                     ; preds = %50
  %64 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %3, i32 0, i32 1
  %65 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %64, align 8
  %66 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %65, align 8
  %67 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %3, i32 0, i32 0
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %66, %"struct.HashTable<Pair<const String, int>, void>::elt"** %67, align 8
  br label %76

; <label>:68:                                     ; preds = %50
  br label %69

; <label>:69:                                     ; preds = %68
  %70 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %3, i32 0, i32 2
  %71 = load i32, i32* %70, align 8
  %72 = add i32 %71, 1
  store i32 %72, i32* %70, align 8
  br label %41

; <label>:73:                                     ; preds = %41
  %74 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %3, i32 0, i32 0
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* null, %"struct.HashTable<Pair<const String, int>, void>::elt"** %74, align 8
  br label %75

; <label>:75:                                     ; preds = %73, %28
  br label %76

; <label>:76:                                     ; preds = %63, %75, %16
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr %"struct.HashTable<Pair<const String, int>, void>::elt"* @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE3setER22HashContainer_iteratorIS6_S8_EPS6_b(%class.HashContainer*, %class.HashContainer_iterator* dereferenceable(32), %"struct.HashTable<Pair<const String, int>, void>::elt"*, i1 zeroext) #2 comdat align 2 {
  %5 = alloca %"struct.HashTable<Pair<const String, int>, void>::elt"*, align 8
  %6 = alloca %class.HashContainer*, align 8
  %7 = alloca %class.HashContainer_iterator*, align 8
  %8 = alloca %"struct.HashTable<Pair<const String, int>, void>::elt"*, align 8
  %9 = alloca i8, align 1
  %10 = alloca %"struct.HashTable<Pair<const String, int>, void>::elt"*, align 8
  store %class.HashContainer* %0, %class.HashContainer** %6, align 8
  store %class.HashContainer_iterator* %1, %class.HashContainer_iterator** %7, align 8
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %2, %"struct.HashTable<Pair<const String, int>, void>::elt"** %8, align 8
  %11 = zext i1 %3 to i8
  store i8 %11, i8* %9, align 1
  %12 = load %class.HashContainer*, %class.HashContainer** %6, align 8
  %13 = load %class.HashContainer_iterator*, %class.HashContainer_iterator** %7, align 8
  %14 = bitcast %class.HashContainer_iterator* %13 to %class.HashContainer_const_iterator*
  %15 = call %"struct.HashTable<Pair<const String, int>, void>::elt"* @_ZNK28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE3getEv(%class.HashContainer_const_iterator* %14)
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %15, %"struct.HashTable<Pair<const String, int>, void>::elt"** %10, align 8
  %16 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %10, align 8
  %17 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %8, align 8
  %18 = icmp eq %"struct.HashTable<Pair<const String, int>, void>::elt"* %16, %17
  %19 = xor i1 %18, true
  %20 = xor i1 %19, true
  br i1 %20, label %21, label %23

; <label>:21:                                     ; preds = %4
  %22 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %10, align 8
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %22, %"struct.HashTable<Pair<const String, int>, void>::elt"** %5, align 8
  br label %116

; <label>:23:                                     ; preds = %4
  %24 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %8, align 8
  %25 = icmp ne %"struct.HashTable<Pair<const String, int>, void>::elt"* %24, null
  br i1 %25, label %48, label %26

; <label>:26:                                     ; preds = %23
  %27 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %12, i32 0, i32 0
  %28 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %27, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, -1
  store i64 %30, i64* %28, align 8
  %31 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %12, i32 0, i32 0
  %32 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %10, align 8
  %33 = call dereferenceable(8) %"struct.HashTable<Pair<const String, int>, void>::elt"** @_ZN21HashContainer_adapterIN9HashTableI4PairIK6StringiEvE3eltEE8hashnextEPS6_(%"struct.HashTable<Pair<const String, int>, void>::elt"* %32)
  %34 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %33, align 8
  %35 = load %class.HashContainer_iterator*, %class.HashContainer_iterator** %7, align 8
  %36 = bitcast %class.HashContainer_iterator* %35 to %class.HashContainer_const_iterator*
  %37 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %36, i32 0, i32 0
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %34, %"struct.HashTable<Pair<const String, int>, void>::elt"** %37, align 8
  %38 = load %class.HashContainer_iterator*, %class.HashContainer_iterator** %7, align 8
  %39 = bitcast %class.HashContainer_iterator* %38 to %class.HashContainer_const_iterator*
  %40 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %39, i32 0, i32 1
  %41 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %40, align 8
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %34, %"struct.HashTable<Pair<const String, int>, void>::elt"** %41, align 8
  %42 = icmp ne %"struct.HashTable<Pair<const String, int>, void>::elt"* %34, null
  br i1 %42, label %46, label %43

; <label>:43:                                     ; preds = %26
  %44 = load %class.HashContainer_iterator*, %class.HashContainer_iterator** %7, align 8
  %45 = bitcast %class.HashContainer_iterator* %44 to %class.HashContainer_const_iterator*
  call void @_ZN28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEppEv(%class.HashContainer_const_iterator* %45)
  br label %46

; <label>:46:                                     ; preds = %43, %26
  %47 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %10, align 8
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %47, %"struct.HashTable<Pair<const String, int>, void>::elt"** %5, align 8
  br label %116

; <label>:48:                                     ; preds = %23
  %49 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %10, align 8
  %50 = icmp ne %"struct.HashTable<Pair<const String, int>, void>::elt"* %49, null
  br i1 %50, label %51, label %59

; <label>:51:                                     ; preds = %48
  %52 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %12, i32 0, i32 0
  %53 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %10, align 8
  %54 = call dereferenceable(8) %"struct.HashTable<Pair<const String, int>, void>::elt"** @_ZN21HashContainer_adapterIN9HashTableI4PairIK6StringiEvE3eltEE8hashnextEPS6_(%"struct.HashTable<Pair<const String, int>, void>::elt"* %53)
  %55 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %54, align 8
  %56 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %12, i32 0, i32 0
  %57 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %8, align 8
  %58 = call dereferenceable(8) %"struct.HashTable<Pair<const String, int>, void>::elt"** @_ZN21HashContainer_adapterIN9HashTableI4PairIK6StringiEvE3eltEE8hashnextEPS6_(%"struct.HashTable<Pair<const String, int>, void>::elt"* %57)
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %55, %"struct.HashTable<Pair<const String, int>, void>::elt"** %58, align 8
  br label %106

; <label>:59:                                     ; preds = %48
  %60 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %12, i32 0, i32 0
  %61 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %60, i32 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %61, align 8
  %64 = call zeroext i1 @_ZNK13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE10unbalancedEv(%class.HashContainer* %12)
  %65 = xor i1 %64, true
  %66 = xor i1 %65, true
  br i1 %66, label %67, label %92

; <label>:67:                                     ; preds = %59
  %68 = load i8, i8* %9, align 1
  %69 = trunc i8 %68 to i1
  br i1 %69, label %70, label %92

; <label>:70:                                     ; preds = %67
  %71 = call i32 @_ZNK13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE12bucket_countEv(%class.HashContainer* %12)
  %72 = add i32 %71, 1
  call void @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE6rehashEj(%class.HashContainer* %12, i32 %72)
  %73 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %12, i32 0, i32 0
  %74 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %8, align 8
  %75 = call dereferenceable(24) %class.String* @_ZN21HashContainer_adapterIN9HashTableI4PairIK6StringiEvE3eltEE7hashkeyEPKS6_(%"struct.HashTable<Pair<const String, int>, void>::elt"* %74)
  %76 = call i32 @_ZNK13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE6bucketERS3_(%class.HashContainer* %12, %class.String* dereferenceable(24) %75)
  %77 = load %class.HashContainer_iterator*, %class.HashContainer_iterator** %7, align 8
  %78 = bitcast %class.HashContainer_iterator* %77 to %class.HashContainer_const_iterator*
  %79 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %78, i32 0, i32 2
  store i32 %76, i32* %79, align 8
  %80 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %12, i32 0, i32 0
  %81 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %80, i32 0, i32 0
  %82 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %81, align 8
  %83 = load %class.HashContainer_iterator*, %class.HashContainer_iterator** %7, align 8
  %84 = bitcast %class.HashContainer_iterator* %83 to %class.HashContainer_const_iterator*
  %85 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %84, i32 0, i32 2
  %86 = load i32, i32* %85, align 8
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %82, i64 %87
  %89 = load %class.HashContainer_iterator*, %class.HashContainer_iterator** %7, align 8
  %90 = bitcast %class.HashContainer_iterator* %89 to %class.HashContainer_const_iterator*
  %91 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %90, i32 0, i32 1
  store %"struct.HashTable<Pair<const String, int>, void>::elt"** %88, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %91, align 8
  br label %92

; <label>:92:                                     ; preds = %70, %67, %59
  %93 = load %class.HashContainer_iterator*, %class.HashContainer_iterator** %7, align 8
  %94 = bitcast %class.HashContainer_iterator* %93 to %class.HashContainer_const_iterator*
  %95 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %94, i32 0, i32 1
  %96 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %95, align 8
  %97 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %96, align 8
  %98 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %12, i32 0, i32 0
  %99 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %8, align 8
  %100 = call dereferenceable(8) %"struct.HashTable<Pair<const String, int>, void>::elt"** @_ZN21HashContainer_adapterIN9HashTableI4PairIK6StringiEvE3eltEE8hashnextEPS6_(%"struct.HashTable<Pair<const String, int>, void>::elt"* %99)
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %97, %"struct.HashTable<Pair<const String, int>, void>::elt"** %100, align 8
  %101 = icmp ne %"struct.HashTable<Pair<const String, int>, void>::elt"* %97, null
  br i1 %101, label %105, label %102

; <label>:102:                                    ; preds = %92
  %103 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %12, i32 0, i32 0
  %104 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %103, i32 0, i32 2
  store i32 0, i32* %104, align 4
  br label %105

; <label>:105:                                    ; preds = %102, %92
  br label %106

; <label>:106:                                    ; preds = %105, %51
  %107 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %8, align 8
  %108 = load %class.HashContainer_iterator*, %class.HashContainer_iterator** %7, align 8
  %109 = bitcast %class.HashContainer_iterator* %108 to %class.HashContainer_const_iterator*
  %110 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %109, i32 0, i32 0
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %107, %"struct.HashTable<Pair<const String, int>, void>::elt"** %110, align 8
  %111 = load %class.HashContainer_iterator*, %class.HashContainer_iterator** %7, align 8
  %112 = bitcast %class.HashContainer_iterator* %111 to %class.HashContainer_const_iterator*
  %113 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %112, i32 0, i32 1
  %114 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %113, align 8
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %107, %"struct.HashTable<Pair<const String, int>, void>::elt"** %114, align 8
  %115 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %10, align 8
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %115, %"struct.HashTable<Pair<const String, int>, void>::elt"** %5, align 8
  br label %116

; <label>:116:                                    ; preds = %106, %46, %21
  %117 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %5, align 8
  ret %"struct.HashTable<Pair<const String, int>, void>::elt"* %117
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr zeroext i1 @_ZNK13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE10unbalancedEv(%class.HashContainer*) #0 comdat align 2 {
  %2 = alloca %class.HashContainer*, align 8
  store %class.HashContainer* %0, %class.HashContainer** %2, align 8
  %3 = load %class.HashContainer*, %class.HashContainer** %2, align 8
  %4 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %4, i32 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %3, i32 0, i32 0
  %8 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = mul i32 2, %9
  %11 = zext i32 %10 to i64
  %12 = icmp ugt i64 %6, %11
  br i1 %12, label %13, label %18

; <label>:13:                                     ; preds = %1
  %14 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %3, i32 0, i32 0
  %15 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %14, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp ult i32 %16, -1
  br label %18

; <label>:18:                                     ; preds = %13, %1
  %19 = phi i1 [ false, %1 ], [ %17, %13 ]
  ret i1 %19
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE6rehashEj(%class.HashContainer*, i32) #2 comdat align 2 {
  %3 = alloca %class.HashContainer*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %"struct.HashTable<Pair<const String, int>, void>::elt"**, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"struct.HashTable<Pair<const String, int>, void>::elt"**, align 8
  %10 = alloca %struct.libdivide_u32_t, align 4
  %11 = alloca i64, align 8
  %12 = alloca %"struct.HashTable<Pair<const String, int>, void>::elt"*, align 8
  %13 = alloca %"struct.HashTable<Pair<const String, int>, void>::elt"*, align 8
  %14 = alloca i32, align 4
  store %class.HashContainer* %0, %class.HashContainer** %3, align 8
  store i32 %1, i32* %4, align 4
  %15 = load %class.HashContainer*, %class.HashContainer** %3, align 8
  store i32 1, i32* %5, align 4
  br label %16

; <label>:16:                                     ; preds = %25, %2
  %17 = load i32, i32* %5, align 4
  %18 = load i32, i32* %4, align 4
  %19 = icmp ult i32 %17, %18
  br i1 %19, label %20, label %23

; <label>:20:                                     ; preds = %16
  %21 = load i32, i32* %5, align 4
  %22 = icmp ult i32 %21, -1
  br label %23

; <label>:23:                                     ; preds = %20, %16
  %24 = phi i1 [ false, %16 ], [ %22, %20 ]
  br i1 %24, label %25, label %30

; <label>:25:                                     ; preds = %23
  %26 = load i32, i32* %5, align 4
  %27 = add i32 %26, 1
  %28 = shl i32 %27, 1
  %29 = sub i32 %28, 1
  store i32 %29, i32* %5, align 4
  br label %16

; <label>:30:                                     ; preds = %23
  %31 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %15, i32 0, i32 0
  %32 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %31, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = load i32, i32* %5, align 4
  %35 = icmp eq i32 %33, %34
  br i1 %35, label %36, label %37

; <label>:36:                                     ; preds = %30
  br label %127

; <label>:37:                                     ; preds = %30
  %38 = load i32, i32* %5, align 4
  %39 = zext i32 %38 to i64
  %40 = mul i64 8, %39
  %41 = call i8* @_Znam(i64 %40) #15
  %42 = bitcast i8* %41 to %"struct.HashTable<Pair<const String, int>, void>::elt"**
  store %"struct.HashTable<Pair<const String, int>, void>::elt"** %42, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %6, align 8
  store i32 0, i32* %7, align 4
  br label %43

; <label>:43:                                     ; preds = %52, %37
  %44 = load i32, i32* %7, align 4
  %45 = load i32, i32* %5, align 4
  %46 = icmp ult i32 %44, %45
  br i1 %46, label %47, label %55

; <label>:47:                                     ; preds = %43
  %48 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %6, align 8
  %49 = load i32, i32* %7, align 4
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %48, i64 %50
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* null, %"struct.HashTable<Pair<const String, int>, void>::elt"** %51, align 8
  br label %52

; <label>:52:                                     ; preds = %47
  %53 = load i32, i32* %7, align 4
  %54 = add i32 %53, 1
  store i32 %54, i32* %7, align 4
  br label %43

; <label>:55:                                     ; preds = %43
  %56 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %15, i32 0, i32 0
  %57 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %56, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  store i32 %58, i32* %8, align 4
  %59 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %15, i32 0, i32 0
  %60 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %59, i32 0, i32 0
  %61 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %60, align 8
  store %"struct.HashTable<Pair<const String, int>, void>::elt"** %61, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %9, align 8
  %62 = load i32, i32* %5, align 4
  %63 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %15, i32 0, i32 0
  %64 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %63, i32 0, i32 1
  store i32 %62, i32* %64, align 8
  %65 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %6, align 8
  %66 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %15, i32 0, i32 0
  %67 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %66, i32 0, i32 0
  store %"struct.HashTable<Pair<const String, int>, void>::elt"** %65, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %67, align 8
  %68 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %15, i32 0, i32 0
  %69 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %68, i32 0, i32 2
  store i32 0, i32* %69, align 4
  %70 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %15, i32 0, i32 0
  %71 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %70, i32 0, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = call i64 @_ZL17libdivide_u32_genj(i32 %72)
  %74 = bitcast %struct.libdivide_u32_t* %10 to i64*
  store i64 %73, i64* %74, align 4
  %75 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %15, i32 0, i32 0
  %76 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %75, i32 0, i32 4
  %77 = bitcast %struct.libdivide_u32_t* %76 to i8*
  %78 = bitcast %struct.libdivide_u32_t* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %77, i8* %78, i64 8, i32 4, i1 false)
  store i64 0, i64* %11, align 8
  br label %79

; <label>:79:                                     ; preds = %116, %55
  %80 = load i64, i64* %11, align 8
  %81 = load i32, i32* %8, align 4
  %82 = zext i32 %81 to i64
  %83 = icmp ult i64 %80, %82
  br i1 %83, label %84, label %119

; <label>:84:                                     ; preds = %79
  %85 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %9, align 8
  %86 = load i64, i64* %11, align 8
  %87 = getelementptr inbounds %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %85, i64 %86
  %88 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %87, align 8
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %88, %"struct.HashTable<Pair<const String, int>, void>::elt"** %12, align 8
  br label %89

; <label>:89:                                     ; preds = %92, %84
  %90 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %12, align 8
  %91 = icmp ne %"struct.HashTable<Pair<const String, int>, void>::elt"* %90, null
  br i1 %91, label %92, label %115

; <label>:92:                                     ; preds = %89
  %93 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %15, i32 0, i32 0
  %94 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %12, align 8
  %95 = call dereferenceable(8) %"struct.HashTable<Pair<const String, int>, void>::elt"** @_ZN21HashContainer_adapterIN9HashTableI4PairIK6StringiEvE3eltEE8hashnextEPS6_(%"struct.HashTable<Pair<const String, int>, void>::elt"* %94)
  %96 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %95, align 8
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %96, %"struct.HashTable<Pair<const String, int>, void>::elt"** %13, align 8
  %97 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %15, i32 0, i32 0
  %98 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %12, align 8
  %99 = call dereferenceable(24) %class.String* @_ZN21HashContainer_adapterIN9HashTableI4PairIK6StringiEvE3eltEE7hashkeyEPKS6_(%"struct.HashTable<Pair<const String, int>, void>::elt"* %98)
  %100 = call i32 @_ZNK13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE6bucketERS3_(%class.HashContainer* %15, %class.String* dereferenceable(24) %99)
  store i32 %100, i32* %14, align 4
  %101 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %6, align 8
  %102 = load i32, i32* %14, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %101, i64 %103
  %105 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %104, align 8
  %106 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %15, i32 0, i32 0
  %107 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %12, align 8
  %108 = call dereferenceable(8) %"struct.HashTable<Pair<const String, int>, void>::elt"** @_ZN21HashContainer_adapterIN9HashTableI4PairIK6StringiEvE3eltEE8hashnextEPS6_(%"struct.HashTable<Pair<const String, int>, void>::elt"* %107)
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %105, %"struct.HashTable<Pair<const String, int>, void>::elt"** %108, align 8
  %109 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %12, align 8
  %110 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %6, align 8
  %111 = load i32, i32* %14, align 4
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %110, i64 %112
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %109, %"struct.HashTable<Pair<const String, int>, void>::elt"** %113, align 8
  %114 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %13, align 8
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %114, %"struct.HashTable<Pair<const String, int>, void>::elt"** %12, align 8
  br label %89

; <label>:115:                                    ; preds = %89
  br label %116

; <label>:116:                                    ; preds = %115
  %117 = load i64, i64* %11, align 8
  %118 = add i64 %117, 1
  store i64 %118, i64* %11, align 8
  br label %79

; <label>:119:                                    ; preds = %79
  %120 = load i32, i32* %8, align 4
  %121 = zext i32 %120 to i64
  %122 = mul i64 8, %121
  %123 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %9, align 8
  %124 = bitcast %"struct.HashTable<Pair<const String, int>, void>::elt"** %123 to i8*
  %125 = icmp eq i8* %124, null
  br i1 %125, label %127, label %126

; <label>:126:                                    ; preds = %119
  call void @_ZdaPv(i8* %124) #14
  br label %127

; <label>:127:                                    ; preds = %36, %126, %119
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr i32 @_ZNK13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE12bucket_countEv(%class.HashContainer*) #0 comdat align 2 {
  %2 = alloca %class.HashContainer*, align 8
  store %class.HashContainer* %0, %class.HashContainer** %2, align 8
  %3 = load %class.HashContainer*, %class.HashContainer** %2, align 8
  %4 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %4, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  ret i32 %6
}

; Function Attrs: nounwind
declare void @_ZN13HashAllocatorD2Ev(%class.HashAllocator*) unnamed_addr #4

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN13vector_memoryI18sized_array_memoryILm4EEEC2Ev(%class.vector_memory.3*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.vector_memory.3*, align 8
  store %class.vector_memory.3* %0, %class.vector_memory.3** %2, align 8
  %3 = load %class.vector_memory.3*, %class.vector_memory.3** %2, align 8
  %4 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %3, i32 0, i32 0
  store %struct.char_array.4* null, %struct.char_array.4** %4, align 8
  %5 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %3, i32 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %3, i32 0, i32 2
  store i32 0, i32* %6, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN13vector_memoryI18typed_array_memoryI6StringEEC2Ev(%class.vector_memory.1*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.vector_memory.1*, align 8
  store %class.vector_memory.1* %0, %class.vector_memory.1** %2, align 8
  %3 = load %class.vector_memory.1*, %class.vector_memory.1** %2, align 8
  %4 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %3, i32 0, i32 0
  store %class.String* null, %class.String** %4, align 8
  %5 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %3, i32 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %class.vector_memory.1, %class.vector_memory.1* %3, i32 0, i32 2
  store i32 0, i32* %6, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN13vector_memoryI18sized_array_memoryILm16EEEC2Ev(%class.vector_memory.9*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.vector_memory.9*, align 8
  store %class.vector_memory.9* %0, %class.vector_memory.9** %2, align 8
  %3 = load %class.vector_memory.9*, %class.vector_memory.9** %2, align 8
  %4 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %3, i32 0, i32 0
  store %struct.char_array.10* null, %struct.char_array.10** %4, align 8
  %5 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %3, i32 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %3, i32 0, i32 2
  store i32 0, i32* %6, align 4
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN13vector_memoryI18sized_array_memoryILm16EEE19move_construct_backEP10char_arrayILm16EE(%class.vector_memory.9*, %struct.char_array.10*) #2 comdat align 2 {
  %3 = alloca %class.vector_memory.9*, align 8
  %4 = alloca %struct.char_array.10*, align 8
  store %class.vector_memory.9* %0, %class.vector_memory.9** %3, align 8
  store %struct.char_array.10* %1, %struct.char_array.10** %4, align 8
  %5 = load %class.vector_memory.9*, %class.vector_memory.9** %3, align 8
  %6 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %5, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %7, %9
  br i1 %10, label %11, label %31

; <label>:11:                                     ; preds = %2
  %12 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %5, i32 0, i32 0
  %13 = load %struct.char_array.10*, %struct.char_array.10** %12, align 8
  %14 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %5, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.char_array.10, %struct.char_array.10* %13, i64 %16
  %18 = bitcast %struct.char_array.10* %17 to i8*
  call void @_ZN18sized_array_memoryILm16EE14mark_undefinedEPvm(i8* %18, i64 1)
  %19 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %5, i32 0, i32 0
  %20 = load %struct.char_array.10*, %struct.char_array.10** %19, align 8
  %21 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %5, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %struct.char_array.10, %struct.char_array.10* %20, i64 %23
  %25 = bitcast %struct.char_array.10* %24 to i8*
  %26 = load %struct.char_array.10*, %struct.char_array.10** %4, align 8
  %27 = bitcast %struct.char_array.10* %26 to i8*
  call void @_ZN18sized_array_memoryILm16EE14move_constructEPvS1_(i8* %25, i8* %27)
  %28 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %5, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %28, align 8
  br label %34

; <label>:31:                                     ; preds = %2
  %32 = load %struct.char_array.10*, %struct.char_array.10** %4, align 8
  %33 = call zeroext i1 @_ZN13vector_memoryI18sized_array_memoryILm16EEE21reserve_and_push_backEiPK10char_arrayILm16EE(%class.vector_memory.9* %5, i32 -1, %struct.char_array.10* %32)
  br label %34

; <label>:34:                                     ; preds = %31, %11
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr %struct.char_array.10* @_ZN18sized_array_memoryILm16EE4castIN6Router10ConnectionEEEP10char_arrayILm16EEPT_(%"struct.Router::Connection"*) #0 comdat align 2 {
  %2 = alloca %"struct.Router::Connection"*, align 8
  store %"struct.Router::Connection"* %0, %"struct.Router::Connection"** %2, align 8
  %3 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %2, align 8
  %4 = bitcast %"struct.Router::Connection"* %3 to %struct.char_array.10*
  ret %struct.char_array.10* %4
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN18sized_array_memoryILm16EE14mark_undefinedEPvm(i8*, i64) #0 comdat align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN18sized_array_memoryILm16EE14move_constructEPvS1_(i8*, i8*) #0 comdat align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = load i8*, i8** %4, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 16, i32 1, i1 false)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr zeroext i1 @_ZN13vector_memoryI18sized_array_memoryILm16EEE21reserve_and_push_backEiPK10char_arrayILm16EE(%class.vector_memory.9*, i32, %struct.char_array.10*) #2 comdat align 2 {
  %4 = alloca i1, align 1
  %5 = alloca %class.vector_memory.9*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.char_array.10*, align 8
  %8 = alloca %struct.char_array.10, align 1
  %9 = alloca %struct.char_array.10*, align 8
  store %class.vector_memory.9* %0, %class.vector_memory.9** %5, align 8
  store i32 %1, i32* %6, align 4
  store %struct.char_array.10* %2, %struct.char_array.10** %7, align 8
  %10 = load %class.vector_memory.9*, %class.vector_memory.9** %5, align 8
  %11 = load %struct.char_array.10*, %struct.char_array.10** %7, align 8
  %12 = icmp ne %struct.char_array.10* %11, null
  br i1 %12, label %13, label %16

; <label>:13:                                     ; preds = %3
  %14 = load %struct.char_array.10*, %struct.char_array.10** %7, align 8
  %15 = call zeroext i1 @_ZNK13vector_memoryI18sized_array_memoryILm16EEE18need_argument_copyEPK10char_arrayILm16EE(%class.vector_memory.9* %10, %struct.char_array.10* %14)
  br label %16

; <label>:16:                                     ; preds = %13, %3
  %17 = phi i1 [ false, %3 ], [ %15, %13 ]
  %18 = xor i1 %17, true
  %19 = xor i1 %18, true
  br i1 %19, label %20, label %26

; <label>:20:                                     ; preds = %16
  %21 = load %struct.char_array.10*, %struct.char_array.10** %7, align 8
  %22 = bitcast %struct.char_array.10* %8 to i8*
  %23 = bitcast %struct.char_array.10* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 16, i32 1, i1 false)
  %24 = load i32, i32* %6, align 4
  %25 = call zeroext i1 @_ZN13vector_memoryI18sized_array_memoryILm16EEE21reserve_and_push_backEiPK10char_arrayILm16EE(%class.vector_memory.9* %10, i32 %24, %struct.char_array.10* %8)
  store i1 %25, i1* %4, align 1
  br label %96

; <label>:26:                                     ; preds = %16
  %27 = load i32, i32* %6, align 4
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %29, label %40

; <label>:29:                                     ; preds = %26
  %30 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %10, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %37

; <label>:33:                                     ; preds = %29
  %34 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %10, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = mul nsw i32 %35, 2
  br label %38

; <label>:37:                                     ; preds = %29
  br label %38

; <label>:38:                                     ; preds = %37, %33
  %39 = phi i32 [ %36, %33 ], [ 4, %37 ]
  store i32 %39, i32* %6, align 4
  br label %40

; <label>:40:                                     ; preds = %38, %26
  %41 = load i32, i32* %6, align 4
  %42 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %10, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp sgt i32 %41, %43
  br i1 %44, label %45, label %88

; <label>:45:                                     ; preds = %40
  %46 = load i32, i32* %6, align 4
  %47 = sext i32 %46 to i64
  %48 = mul i64 %47, 16
  %49 = call i8* @_Znam(i64 %48) #15
  %50 = bitcast i8* %49 to %struct.char_array.10*
  store %struct.char_array.10* %50, %struct.char_array.10** %9, align 8
  %51 = load %struct.char_array.10*, %struct.char_array.10** %9, align 8
  %52 = icmp ne %struct.char_array.10* %51, null
  br i1 %52, label %54, label %53

; <label>:53:                                     ; preds = %45
  store i1 false, i1* %4, align 1
  br label %96

; <label>:54:                                     ; preds = %45
  %55 = load %struct.char_array.10*, %struct.char_array.10** %9, align 8
  %56 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %10, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds %struct.char_array.10, %struct.char_array.10* %55, i64 %58
  %60 = bitcast %struct.char_array.10* %59 to i8*
  %61 = load i32, i32* %6, align 4
  %62 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %10, i32 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = sub nsw i32 %61, %63
  %65 = sext i32 %64 to i64
  call void @_ZN18sized_array_memoryILm16EE13mark_noaccessEPvm(i8* %60, i64 %65)
  %66 = load %struct.char_array.10*, %struct.char_array.10** %9, align 8
  %67 = bitcast %struct.char_array.10* %66 to i8*
  %68 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %10, i32 0, i32 0
  %69 = load %struct.char_array.10*, %struct.char_array.10** %68, align 8
  %70 = bitcast %struct.char_array.10* %69 to i8*
  %71 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %10, i32 0, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = sext i32 %72 to i64
  call void @_ZN18sized_array_memoryILm16EE4moveEPvPKvm(i8* %67, i8* %70, i64 %73)
  %74 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %10, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = sext i32 %75 to i64
  %77 = mul i64 %76, 16
  %78 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %10, i32 0, i32 0
  %79 = load %struct.char_array.10*, %struct.char_array.10** %78, align 8
  %80 = bitcast %struct.char_array.10* %79 to i8*
  %81 = icmp eq i8* %80, null
  br i1 %81, label %83, label %82

; <label>:82:                                     ; preds = %54
  call void @_ZdaPv(i8* %80) #14
  br label %83

; <label>:83:                                     ; preds = %82, %54
  %84 = load %struct.char_array.10*, %struct.char_array.10** %9, align 8
  %85 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %10, i32 0, i32 0
  store %struct.char_array.10* %84, %struct.char_array.10** %85, align 8
  %86 = load i32, i32* %6, align 4
  %87 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %10, i32 0, i32 2
  store i32 %86, i32* %87, align 4
  br label %88

; <label>:88:                                     ; preds = %83, %40
  %89 = load %struct.char_array.10*, %struct.char_array.10** %7, align 8
  %90 = icmp ne %struct.char_array.10* %89, null
  %91 = xor i1 %90, true
  %92 = xor i1 %91, true
  br i1 %92, label %93, label %95

; <label>:93:                                     ; preds = %88
  %94 = load %struct.char_array.10*, %struct.char_array.10** %7, align 8
  call void @_ZN13vector_memoryI18sized_array_memoryILm16EEE9push_backEPK10char_arrayILm16EE(%class.vector_memory.9* %10, %struct.char_array.10* %94)
  br label %95

; <label>:95:                                     ; preds = %93, %88
  store i1 true, i1* %4, align 1
  br label %96

; <label>:96:                                     ; preds = %95, %53, %20
  %97 = load i1, i1* %4, align 1
  ret i1 %97
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr zeroext i1 @_ZNK13vector_memoryI18sized_array_memoryILm16EEE18need_argument_copyEPK10char_arrayILm16EE(%class.vector_memory.9*, %struct.char_array.10*) #0 comdat align 2 {
  %3 = alloca %class.vector_memory.9*, align 8
  %4 = alloca %struct.char_array.10*, align 8
  store %class.vector_memory.9* %0, %class.vector_memory.9** %3, align 8
  store %struct.char_array.10* %1, %struct.char_array.10** %4, align 8
  %5 = load %class.vector_memory.9*, %class.vector_memory.9** %3, align 8
  %6 = load %struct.char_array.10*, %struct.char_array.10** %4, align 8
  %7 = ptrtoint %struct.char_array.10* %6 to i64
  %8 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %5, i32 0, i32 0
  %9 = load %struct.char_array.10*, %struct.char_array.10** %8, align 8
  %10 = ptrtoint %struct.char_array.10* %9 to i64
  %11 = sub i64 %7, %10
  %12 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %5, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = sext i32 %13 to i64
  %15 = mul i64 %14, 16
  %16 = icmp ult i64 %11, %15
  ret i1 %16
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN18sized_array_memoryILm16EE13mark_noaccessEPvm(i8*, i64) #0 comdat align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN18sized_array_memoryILm16EE4moveEPvPKvm(i8*, i8*, i64) #0 comdat align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load i64, i64* %6, align 8
  %8 = icmp ne i64 %7, 0
  br i1 %8, label %9, label %14

; <label>:9:                                      ; preds = %3
  %10 = load i8*, i8** %4, align 8
  %11 = load i8*, i8** %5, align 8
  %12 = load i64, i64* %6, align 8
  %13 = mul i64 %12, 16
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %10, i8* %11, i64 %13, i32 1, i1 false)
  br label %14

; <label>:14:                                     ; preds = %9, %3
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN13vector_memoryI18sized_array_memoryILm16EEE9push_backEPK10char_arrayILm16EE(%class.vector_memory.9*, %struct.char_array.10*) #2 comdat align 2 {
  %3 = alloca %class.vector_memory.9*, align 8
  %4 = alloca %struct.char_array.10*, align 8
  store %class.vector_memory.9* %0, %class.vector_memory.9** %3, align 8
  store %struct.char_array.10* %1, %struct.char_array.10** %4, align 8
  %5 = load %class.vector_memory.9*, %class.vector_memory.9** %3, align 8
  %6 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %5, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %7, %9
  br i1 %10, label %11, label %31

; <label>:11:                                     ; preds = %2
  %12 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %5, i32 0, i32 0
  %13 = load %struct.char_array.10*, %struct.char_array.10** %12, align 8
  %14 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %5, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.char_array.10, %struct.char_array.10* %13, i64 %16
  %18 = bitcast %struct.char_array.10* %17 to i8*
  call void @_ZN18sized_array_memoryILm16EE14mark_undefinedEPvm(i8* %18, i64 1)
  %19 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %5, i32 0, i32 0
  %20 = load %struct.char_array.10*, %struct.char_array.10** %19, align 8
  %21 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %5, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %struct.char_array.10, %struct.char_array.10* %20, i64 %23
  %25 = bitcast %struct.char_array.10* %24 to i8*
  %26 = load %struct.char_array.10*, %struct.char_array.10** %4, align 8
  %27 = bitcast %struct.char_array.10* %26 to i8*
  call void @_ZN18sized_array_memoryILm16EE4fillEPvmPKv(i8* %25, i64 1, i8* %27)
  %28 = getelementptr inbounds %class.vector_memory.9, %class.vector_memory.9* %5, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %28, align 8
  br label %34

; <label>:31:                                     ; preds = %2
  %32 = load %struct.char_array.10*, %struct.char_array.10** %4, align 8
  %33 = call zeroext i1 @_ZN13vector_memoryI18sized_array_memoryILm16EEE21reserve_and_push_backEiPK10char_arrayILm16EE(%class.vector_memory.9* %5, i32 -1, %struct.char_array.10* %32)
  br label %34

; <label>:34:                                     ; preds = %31, %11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #10

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN18sized_array_memoryILm16EE4fillEPvmPKv(i8*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  br label %7

; <label>:7:                                      ; preds = %13, %3
  %8 = load i64, i64* %5, align 8
  %9 = icmp ne i64 %8, 0
  br i1 %9, label %10, label %18

; <label>:10:                                     ; preds = %7
  %11 = load i8*, i8** %4, align 8
  %12 = load i8*, i8** %6, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 16, i32 1, i1 false)
  br label %13

; <label>:13:                                     ; preds = %10
  %14 = load i64, i64* %5, align 8
  %15 = add i64 %14, -1
  store i64 %15, i64* %5, align 8
  %16 = load i8*, i8** %4, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 16
  store i8* %17, i8** %4, align 8
  br label %7

; <label>:18:                                     ; preds = %7
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN13vector_memoryI18sized_array_memoryILm4EEE9push_backEPK10char_arrayILm4EE(%class.vector_memory.3*, %struct.char_array.4*) #2 comdat align 2 {
  %3 = alloca %class.vector_memory.3*, align 8
  %4 = alloca %struct.char_array.4*, align 8
  store %class.vector_memory.3* %0, %class.vector_memory.3** %3, align 8
  store %struct.char_array.4* %1, %struct.char_array.4** %4, align 8
  %5 = load %class.vector_memory.3*, %class.vector_memory.3** %3, align 8
  %6 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %5, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %7, %9
  br i1 %10, label %11, label %31

; <label>:11:                                     ; preds = %2
  %12 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %5, i32 0, i32 0
  %13 = load %struct.char_array.4*, %struct.char_array.4** %12, align 8
  %14 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %5, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.char_array.4, %struct.char_array.4* %13, i64 %16
  %18 = bitcast %struct.char_array.4* %17 to i8*
  call void @_ZN18sized_array_memoryILm4EE14mark_undefinedEPvm(i8* %18, i64 1)
  %19 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %5, i32 0, i32 0
  %20 = load %struct.char_array.4*, %struct.char_array.4** %19, align 8
  %21 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %5, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %struct.char_array.4, %struct.char_array.4* %20, i64 %23
  %25 = bitcast %struct.char_array.4* %24 to i8*
  %26 = load %struct.char_array.4*, %struct.char_array.4** %4, align 8
  %27 = bitcast %struct.char_array.4* %26 to i8*
  call void @_ZN18sized_array_memoryILm4EE4fillEPvmPKv(i8* %25, i64 1, i8* %27)
  %28 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %5, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %28, align 8
  br label %34

; <label>:31:                                     ; preds = %2
  %32 = load %struct.char_array.4*, %struct.char_array.4** %4, align 8
  %33 = call zeroext i1 @_ZN13vector_memoryI18sized_array_memoryILm4EEE21reserve_and_push_backEiPK10char_arrayILm4EE(%class.vector_memory.3* %5, i32 -1, %struct.char_array.4* %32)
  br label %34

; <label>:34:                                     ; preds = %31, %11
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr %struct.char_array.4* @_ZN18sized_array_memoryILm4EE4castIiEEP10char_arrayILm4EEPT_(i32*) #0 comdat align 2 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  %4 = bitcast i32* %3 to %struct.char_array.4*
  ret %struct.char_array.4* %4
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN18sized_array_memoryILm4EE14mark_undefinedEPvm(i8*, i64) #0 comdat align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN18sized_array_memoryILm4EE4fillEPvmPKv(i8*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  br label %7

; <label>:7:                                      ; preds = %13, %3
  %8 = load i64, i64* %5, align 8
  %9 = icmp ne i64 %8, 0
  br i1 %9, label %10, label %18

; <label>:10:                                     ; preds = %7
  %11 = load i8*, i8** %4, align 8
  %12 = load i8*, i8** %6, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 4, i32 1, i1 false)
  br label %13

; <label>:13:                                     ; preds = %10
  %14 = load i64, i64* %5, align 8
  %15 = add i64 %14, -1
  store i64 %15, i64* %5, align 8
  %16 = load i8*, i8** %4, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 4
  store i8* %17, i8** %4, align 8
  br label %7

; <label>:18:                                     ; preds = %7
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr zeroext i1 @_ZN13vector_memoryI18sized_array_memoryILm4EEE21reserve_and_push_backEiPK10char_arrayILm4EE(%class.vector_memory.3*, i32, %struct.char_array.4*) #2 comdat align 2 {
  %4 = alloca i1, align 1
  %5 = alloca %class.vector_memory.3*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.char_array.4*, align 8
  %8 = alloca %struct.char_array.4, align 1
  %9 = alloca %struct.char_array.4*, align 8
  store %class.vector_memory.3* %0, %class.vector_memory.3** %5, align 8
  store i32 %1, i32* %6, align 4
  store %struct.char_array.4* %2, %struct.char_array.4** %7, align 8
  %10 = load %class.vector_memory.3*, %class.vector_memory.3** %5, align 8
  %11 = load %struct.char_array.4*, %struct.char_array.4** %7, align 8
  %12 = icmp ne %struct.char_array.4* %11, null
  br i1 %12, label %13, label %16

; <label>:13:                                     ; preds = %3
  %14 = load %struct.char_array.4*, %struct.char_array.4** %7, align 8
  %15 = call zeroext i1 @_ZNK13vector_memoryI18sized_array_memoryILm4EEE18need_argument_copyEPK10char_arrayILm4EE(%class.vector_memory.3* %10, %struct.char_array.4* %14)
  br label %16

; <label>:16:                                     ; preds = %13, %3
  %17 = phi i1 [ false, %3 ], [ %15, %13 ]
  %18 = xor i1 %17, true
  %19 = xor i1 %18, true
  br i1 %19, label %20, label %26

; <label>:20:                                     ; preds = %16
  %21 = load %struct.char_array.4*, %struct.char_array.4** %7, align 8
  %22 = bitcast %struct.char_array.4* %8 to i8*
  %23 = bitcast %struct.char_array.4* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 4, i32 1, i1 false)
  %24 = load i32, i32* %6, align 4
  %25 = call zeroext i1 @_ZN13vector_memoryI18sized_array_memoryILm4EEE21reserve_and_push_backEiPK10char_arrayILm4EE(%class.vector_memory.3* %10, i32 %24, %struct.char_array.4* %8)
  store i1 %25, i1* %4, align 1
  br label %96

; <label>:26:                                     ; preds = %16
  %27 = load i32, i32* %6, align 4
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %29, label %40

; <label>:29:                                     ; preds = %26
  %30 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %10, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %37

; <label>:33:                                     ; preds = %29
  %34 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %10, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = mul nsw i32 %35, 2
  br label %38

; <label>:37:                                     ; preds = %29
  br label %38

; <label>:38:                                     ; preds = %37, %33
  %39 = phi i32 [ %36, %33 ], [ 4, %37 ]
  store i32 %39, i32* %6, align 4
  br label %40

; <label>:40:                                     ; preds = %38, %26
  %41 = load i32, i32* %6, align 4
  %42 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %10, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp sgt i32 %41, %43
  br i1 %44, label %45, label %88

; <label>:45:                                     ; preds = %40
  %46 = load i32, i32* %6, align 4
  %47 = sext i32 %46 to i64
  %48 = mul i64 %47, 4
  %49 = call i8* @_Znam(i64 %48) #15
  %50 = bitcast i8* %49 to %struct.char_array.4*
  store %struct.char_array.4* %50, %struct.char_array.4** %9, align 8
  %51 = load %struct.char_array.4*, %struct.char_array.4** %9, align 8
  %52 = icmp ne %struct.char_array.4* %51, null
  br i1 %52, label %54, label %53

; <label>:53:                                     ; preds = %45
  store i1 false, i1* %4, align 1
  br label %96

; <label>:54:                                     ; preds = %45
  %55 = load %struct.char_array.4*, %struct.char_array.4** %9, align 8
  %56 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %10, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds %struct.char_array.4, %struct.char_array.4* %55, i64 %58
  %60 = bitcast %struct.char_array.4* %59 to i8*
  %61 = load i32, i32* %6, align 4
  %62 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %10, i32 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = sub nsw i32 %61, %63
  %65 = sext i32 %64 to i64
  call void @_ZN18sized_array_memoryILm4EE13mark_noaccessEPvm(i8* %60, i64 %65)
  %66 = load %struct.char_array.4*, %struct.char_array.4** %9, align 8
  %67 = bitcast %struct.char_array.4* %66 to i8*
  %68 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %10, i32 0, i32 0
  %69 = load %struct.char_array.4*, %struct.char_array.4** %68, align 8
  %70 = bitcast %struct.char_array.4* %69 to i8*
  %71 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %10, i32 0, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = sext i32 %72 to i64
  call void @_ZN18sized_array_memoryILm4EE4moveEPvPKvm(i8* %67, i8* %70, i64 %73)
  %74 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %10, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = sext i32 %75 to i64
  %77 = mul i64 %76, 4
  %78 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %10, i32 0, i32 0
  %79 = load %struct.char_array.4*, %struct.char_array.4** %78, align 8
  %80 = bitcast %struct.char_array.4* %79 to i8*
  %81 = icmp eq i8* %80, null
  br i1 %81, label %83, label %82

; <label>:82:                                     ; preds = %54
  call void @_ZdaPv(i8* %80) #14
  br label %83

; <label>:83:                                     ; preds = %82, %54
  %84 = load %struct.char_array.4*, %struct.char_array.4** %9, align 8
  %85 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %10, i32 0, i32 0
  store %struct.char_array.4* %84, %struct.char_array.4** %85, align 8
  %86 = load i32, i32* %6, align 4
  %87 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %10, i32 0, i32 2
  store i32 %86, i32* %87, align 4
  br label %88

; <label>:88:                                     ; preds = %83, %40
  %89 = load %struct.char_array.4*, %struct.char_array.4** %7, align 8
  %90 = icmp ne %struct.char_array.4* %89, null
  %91 = xor i1 %90, true
  %92 = xor i1 %91, true
  br i1 %92, label %93, label %95

; <label>:93:                                     ; preds = %88
  %94 = load %struct.char_array.4*, %struct.char_array.4** %7, align 8
  call void @_ZN13vector_memoryI18sized_array_memoryILm4EEE9push_backEPK10char_arrayILm4EE(%class.vector_memory.3* %10, %struct.char_array.4* %94)
  br label %95

; <label>:95:                                     ; preds = %93, %88
  store i1 true, i1* %4, align 1
  br label %96

; <label>:96:                                     ; preds = %95, %53, %20
  %97 = load i1, i1* %4, align 1
  ret i1 %97
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr zeroext i1 @_ZNK13vector_memoryI18sized_array_memoryILm4EEE18need_argument_copyEPK10char_arrayILm4EE(%class.vector_memory.3*, %struct.char_array.4*) #0 comdat align 2 {
  %3 = alloca %class.vector_memory.3*, align 8
  %4 = alloca %struct.char_array.4*, align 8
  store %class.vector_memory.3* %0, %class.vector_memory.3** %3, align 8
  store %struct.char_array.4* %1, %struct.char_array.4** %4, align 8
  %5 = load %class.vector_memory.3*, %class.vector_memory.3** %3, align 8
  ret i1 false
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN18sized_array_memoryILm4EE4moveEPvPKvm(i8*, i8*, i64) #0 comdat align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load i64, i64* %6, align 8
  %8 = icmp ne i64 %7, 0
  br i1 %8, label %9, label %14

; <label>:9:                                      ; preds = %3
  %10 = load i8*, i8** %4, align 8
  %11 = load i8*, i8** %5, align 8
  %12 = load i64, i64* %6, align 8
  %13 = mul i64 %12, 4
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %10, i8* %11, i64 %13, i32 1, i1 false)
  br label %14

; <label>:14:                                     ; preds = %9, %3
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN9HashTableI6StringiE11find_insertERKS0_(%class.HashTable_iterator* noalias sret, %class.HashTable*, %class.String* dereferenceable(24)) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %class.HashTable*, align 8
  %5 = alloca %class.String*, align 8
  %6 = alloca %struct.Pair, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %class.HashTable* %1, %class.HashTable** %4, align 8
  store %class.String* %2, %class.String** %5, align 8
  %9 = load %class.HashTable*, %class.HashTable** %4, align 8
  %10 = getelementptr inbounds %class.HashTable, %class.HashTable* %9, i32 0, i32 0
  %11 = load %class.String*, %class.String** %5, align 8
  %12 = getelementptr inbounds %class.HashTable, %class.HashTable* %9, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  call void @_ZN4PairIK6StringiEC2ERS1_i(%struct.Pair* %6, %class.String* dereferenceable(24) %11, i32 %13)
  invoke void @_ZN9HashTableI4PairIK6StringiEvE11find_insertERKS3_(%class.HashTable_iterator* sret %0, %class.HashTable.13* %10, %struct.Pair* dereferenceable(32) %6)
          to label %14 unwind label %15

; <label>:14:                                     ; preds = %3
  call void @_ZN4PairIK6StringiED2Ev(%struct.Pair* %6) #9
  ret void

; <label>:15:                                     ; preds = %3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  store i8* %17, i8** %7, align 8
  %18 = extractvalue { i8*, i32 } %16, 1
  store i32 %18, i32* %8, align 4
  call void @_ZN4PairIK6StringiED2Ev(%struct.Pair* %6) #9
  br label %19

; <label>:19:                                     ; preds = %15
  %20 = load i8*, i8** %7, align 8
  %21 = load i32, i32* %8, align 4
  %22 = insertvalue { i8*, i32 } undef, i8* %20, 0
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1
  resume { i8*, i32 } %23
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNK18HashTable_iteratorI4PairIK6StringiEE5valueEv(%class.HashTable_iterator*) #2 comdat align 2 {
  %2 = alloca %class.HashTable_iterator*, align 8
  store %class.HashTable_iterator* %0, %class.HashTable_iterator** %2, align 8
  %3 = load %class.HashTable_iterator*, %class.HashTable_iterator** %2, align 8
  %4 = call dereferenceable(32) %struct.Pair* @_ZNK18HashTable_iteratorI4PairIK6StringiEEdeEv(%class.HashTable_iterator* %3)
  %5 = getelementptr inbounds %struct.Pair, %struct.Pair* %4, i32 0, i32 1
  ret i32* %5
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN9HashTableI4PairIK6StringiEvE11find_insertERKS3_(%class.HashTable_iterator* noalias sret, %class.HashTable.13*, %struct.Pair* dereferenceable(32)) #2 comdat align 2 {
  %4 = alloca %class.HashTable.13*, align 8
  %5 = alloca %struct.Pair*, align 8
  %6 = alloca %class.HashContainer_iterator, align 8
  %7 = alloca %"struct.HashTable<Pair<const String, int>, void>::elt"*, align 8
  store %class.HashTable.13* %1, %class.HashTable.13** %4, align 8
  store %struct.Pair* %2, %struct.Pair** %5, align 8
  %8 = load %class.HashTable.13*, %class.HashTable.13** %4, align 8
  %9 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %8, i32 0, i32 0
  %10 = load %struct.Pair*, %struct.Pair** %5, align 8
  %11 = call dereferenceable(24) %class.String* @_Z7hashkeyI4PairIK6StringiEENT_19key_const_referenceERKS4_(%struct.Pair* dereferenceable(32) %10)
  call void @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE4findERS3_(%class.HashContainer_iterator* sret %6, %class.HashContainer* %9, %class.String* dereferenceable(24) %11)
  %12 = bitcast %class.HashContainer_iterator* %6 to %class.HashContainer_const_iterator*
  %13 = call { i64, i64 } @_ZNK28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEcvMS9_KFPS6_vEEv(%class.HashContainer_const_iterator* %12)
  %14 = extractvalue { i64, i64 } %13, 0
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %33, label %16

; <label>:16:                                     ; preds = %3
  %17 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %8, i32 0, i32 1
  %18 = bitcast %class.SizedHashAllocator* %17 to %class.HashAllocator*
  %19 = call i8* @_ZN13HashAllocator8allocateEv(%class.HashAllocator* %18)
  %20 = bitcast i8* %19 to %"struct.HashTable<Pair<const String, int>, void>::elt"*
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %20, %"struct.HashTable<Pair<const String, int>, void>::elt"** %7, align 8
  %21 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %7, align 8
  %22 = icmp ne %"struct.HashTable<Pair<const String, int>, void>::elt"* %21, null
  br i1 %22, label %23, label %32

; <label>:23:                                     ; preds = %16
  %24 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %7, align 8
  %25 = getelementptr inbounds %"struct.HashTable<Pair<const String, int>, void>::elt", %"struct.HashTable<Pair<const String, int>, void>::elt"* %24, i32 0, i32 0
  %26 = bitcast %struct.Pair* %25 to i8*
  %27 = bitcast i8* %26 to %struct.Pair*
  %28 = load %struct.Pair*, %struct.Pair** %5, align 8
  call void @_ZN4PairIK6StringiEC2ERKS2_(%struct.Pair* %27, %struct.Pair* dereferenceable(32) %28)
  %29 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %8, i32 0, i32 0
  %30 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %7, align 8
  %31 = call %"struct.HashTable<Pair<const String, int>, void>::elt"* @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE3setER22HashContainer_iteratorIS6_S8_EPS6_b(%class.HashContainer* %29, %class.HashContainer_iterator* dereferenceable(32) %6, %"struct.HashTable<Pair<const String, int>, void>::elt"* %30, i1 zeroext true)
  br label %32

; <label>:32:                                     ; preds = %23, %16
  br label %33

; <label>:33:                                     ; preds = %32, %3
  %34 = bitcast %class.HashContainer_iterator* %6 to %class.HashContainer_const_iterator*
  call void @_ZN18HashTable_iteratorI4PairIK6StringiEEC2ERK28HashContainer_const_iteratorIN9HashTableIS3_vE3eltE21HashContainer_adapterIS8_EE(%class.HashTable_iterator* %0, %class.HashContainer_const_iterator* dereferenceable(32) %34)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN4PairIK6StringiEC2ERS1_i(%struct.Pair*, %class.String* dereferenceable(24), i32) unnamed_addr #2 comdat align 2 {
  %4 = alloca %struct.Pair*, align 8
  %5 = alloca %class.String*, align 8
  %6 = alloca i32, align 4
  store %struct.Pair* %0, %struct.Pair** %4, align 8
  store %class.String* %1, %class.String** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %struct.Pair*, %struct.Pair** %4, align 8
  %8 = getelementptr inbounds %struct.Pair, %struct.Pair* %7, i32 0, i32 0
  %9 = load %class.String*, %class.String** %5, align 8
  call void @_ZN6StringC2ERKS_(%class.String* %8, %class.String* dereferenceable(24) %9)
  %10 = getelementptr inbounds %struct.Pair, %struct.Pair* %7, i32 0, i32 1
  %11 = load i32, i32* %6, align 4
  store i32 %11, i32* %10, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(24) %class.String* @_Z7hashkeyI4PairIK6StringiEENT_19key_const_referenceERKS4_(%struct.Pair* dereferenceable(32)) #0 comdat {
  %2 = alloca %struct.Pair*, align 8
  store %struct.Pair* %0, %struct.Pair** %2, align 8
  %3 = load %struct.Pair*, %struct.Pair** %2, align 8
  %4 = call dereferenceable(24) %class.String* @_ZNK4PairIK6StringiE7hashkeyEv(%struct.Pair* %3)
  ret %class.String* %4
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr i8* @_ZN13HashAllocator8allocateEv(%class.HashAllocator*) #2 comdat align 2 {
  %2 = alloca i8*, align 8
  %3 = alloca %class.HashAllocator*, align 8
  %4 = alloca %"struct.HashAllocator::link"*, align 8
  %5 = alloca i8*, align 8
  store %class.HashAllocator* %0, %class.HashAllocator** %3, align 8
  %6 = load %class.HashAllocator*, %class.HashAllocator** %3, align 8
  %7 = getelementptr inbounds %class.HashAllocator, %class.HashAllocator* %6, i32 0, i32 0
  %8 = load %"struct.HashAllocator::link"*, %"struct.HashAllocator::link"** %7, align 8
  store %"struct.HashAllocator::link"* %8, %"struct.HashAllocator::link"** %4, align 8
  %9 = load %"struct.HashAllocator::link"*, %"struct.HashAllocator::link"** %4, align 8
  %10 = icmp ne %"struct.HashAllocator::link"* %9, null
  br i1 %10, label %11, label %18

; <label>:11:                                     ; preds = %1
  %12 = load %"struct.HashAllocator::link"*, %"struct.HashAllocator::link"** %4, align 8
  %13 = getelementptr inbounds %"struct.HashAllocator::link", %"struct.HashAllocator::link"* %12, i32 0, i32 0
  %14 = load %"struct.HashAllocator::link"*, %"struct.HashAllocator::link"** %13, align 8
  %15 = getelementptr inbounds %class.HashAllocator, %class.HashAllocator* %6, i32 0, i32 0
  store %"struct.HashAllocator::link"* %14, %"struct.HashAllocator::link"** %15, align 8
  %16 = load %"struct.HashAllocator::link"*, %"struct.HashAllocator::link"** %4, align 8
  %17 = bitcast %"struct.HashAllocator::link"* %16 to i8*
  store i8* %17, i8** %2, align 8
  br label %51

; <label>:18:                                     ; preds = %1
  %19 = getelementptr inbounds %class.HashAllocator, %class.HashAllocator* %6, i32 0, i32 1
  %20 = load %"struct.HashAllocator::buffer"*, %"struct.HashAllocator::buffer"** %19, align 8
  %21 = icmp ne %"struct.HashAllocator::buffer"* %20, null
  br i1 %21, label %22, label %49

; <label>:22:                                     ; preds = %18
  %23 = getelementptr inbounds %class.HashAllocator, %class.HashAllocator* %6, i32 0, i32 1
  %24 = load %"struct.HashAllocator::buffer"*, %"struct.HashAllocator::buffer"** %23, align 8
  %25 = getelementptr inbounds %"struct.HashAllocator::buffer", %"struct.HashAllocator::buffer"* %24, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %class.HashAllocator, %class.HashAllocator* %6, i32 0, i32 1
  %28 = load %"struct.HashAllocator::buffer"*, %"struct.HashAllocator::buffer"** %27, align 8
  %29 = getelementptr inbounds %"struct.HashAllocator::buffer", %"struct.HashAllocator::buffer"* %28, i32 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = icmp ult i64 %26, %30
  br i1 %31, label %32, label %49

; <label>:32:                                     ; preds = %22
  %33 = getelementptr inbounds %class.HashAllocator, %class.HashAllocator* %6, i32 0, i32 1
  %34 = load %"struct.HashAllocator::buffer"*, %"struct.HashAllocator::buffer"** %33, align 8
  %35 = bitcast %"struct.HashAllocator::buffer"* %34 to i8*
  %36 = getelementptr inbounds %class.HashAllocator, %class.HashAllocator* %6, i32 0, i32 1
  %37 = load %"struct.HashAllocator::buffer"*, %"struct.HashAllocator::buffer"** %36, align 8
  %38 = getelementptr inbounds %"struct.HashAllocator::buffer", %"struct.HashAllocator::buffer"* %37, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds i8, i8* %35, i64 %39
  store i8* %40, i8** %5, align 8
  %41 = getelementptr inbounds %class.HashAllocator, %class.HashAllocator* %6, i32 0, i32 2
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %class.HashAllocator, %class.HashAllocator* %6, i32 0, i32 1
  %44 = load %"struct.HashAllocator::buffer"*, %"struct.HashAllocator::buffer"** %43, align 8
  %45 = getelementptr inbounds %"struct.HashAllocator::buffer", %"struct.HashAllocator::buffer"* %44, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, %42
  store i64 %47, i64* %45, align 8
  %48 = load i8*, i8** %5, align 8
  store i8* %48, i8** %2, align 8
  br label %51

; <label>:49:                                     ; preds = %22, %18
  %50 = call i8* @_ZN13HashAllocator13hard_allocateEv(%class.HashAllocator* %6)
  store i8* %50, i8** %2, align 8
  br label %51

; <label>:51:                                     ; preds = %49, %32, %11
  %52 = load i8*, i8** %2, align 8
  ret i8* %52
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN4PairIK6StringiEC2ERKS2_(%struct.Pair*, %struct.Pair* dereferenceable(32)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %struct.Pair*, align 8
  %4 = alloca %struct.Pair*, align 8
  store %struct.Pair* %0, %struct.Pair** %3, align 8
  store %struct.Pair* %1, %struct.Pair** %4, align 8
  %5 = load %struct.Pair*, %struct.Pair** %3, align 8
  %6 = getelementptr inbounds %struct.Pair, %struct.Pair* %5, i32 0, i32 0
  %7 = load %struct.Pair*, %struct.Pair** %4, align 8
  %8 = getelementptr inbounds %struct.Pair, %struct.Pair* %7, i32 0, i32 0
  call void @_ZN6StringC2ERKS_(%class.String* %6, %class.String* dereferenceable(24) %8)
  %9 = getelementptr inbounds %struct.Pair, %struct.Pair* %5, i32 0, i32 1
  %10 = load %struct.Pair*, %struct.Pair** %4, align 8
  %11 = getelementptr inbounds %struct.Pair, %struct.Pair* %10, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %9, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN18HashTable_iteratorI4PairIK6StringiEEC2ERK28HashContainer_const_iteratorIN9HashTableIS3_vE3eltE21HashContainer_adapterIS8_EE(%class.HashTable_iterator*, %class.HashContainer_const_iterator* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.HashTable_iterator*, align 8
  %4 = alloca %class.HashContainer_const_iterator*, align 8
  store %class.HashTable_iterator* %0, %class.HashTable_iterator** %3, align 8
  store %class.HashContainer_const_iterator* %1, %class.HashContainer_const_iterator** %4, align 8
  %5 = load %class.HashTable_iterator*, %class.HashTable_iterator** %3, align 8
  %6 = bitcast %class.HashTable_iterator* %5 to %class.HashTable_const_iterator*
  %7 = load %class.HashContainer_const_iterator*, %class.HashContainer_const_iterator** %4, align 8
  call void @_ZN24HashTable_const_iteratorI4PairIK6StringiEEC2ERK28HashContainer_const_iteratorIN9HashTableIS3_vE3eltE21HashContainer_adapterIS8_EE(%class.HashTable_const_iterator* %6, %class.HashContainer_const_iterator* dereferenceable(32) %7)
  ret void
}

declare i8* @_ZN13HashAllocator13hard_allocateEv(%class.HashAllocator*) #3

; Function Attrs: noinline optnone uwtable
define linkonce_odr dereferenceable(32) %struct.Pair* @_ZNK18HashTable_iteratorI4PairIK6StringiEEdeEv(%class.HashTable_iterator*) #2 comdat align 2 {
  %2 = alloca %class.HashTable_iterator*, align 8
  store %class.HashTable_iterator* %0, %class.HashTable_iterator** %2, align 8
  %3 = load %class.HashTable_iterator*, %class.HashTable_iterator** %2, align 8
  %4 = bitcast %class.HashTable_iterator* %3 to %class.HashTable_const_iterator*
  %5 = call dereferenceable(32) %struct.Pair* @_ZNK24HashTable_const_iteratorI4PairIK6StringiEEdeEv(%class.HashTable_const_iterator* %4)
  ret %struct.Pair* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(32) %struct.Pair* @_ZNK24HashTable_const_iteratorI4PairIK6StringiEEdeEv(%class.HashTable_const_iterator*) #0 comdat align 2 {
  %2 = alloca %class.HashTable_const_iterator*, align 8
  store %class.HashTable_const_iterator* %0, %class.HashTable_const_iterator** %2, align 8
  %3 = load %class.HashTable_const_iterator*, %class.HashTable_const_iterator** %2, align 8
  %4 = getelementptr inbounds %class.HashTable_const_iterator, %class.HashTable_const_iterator* %3, i32 0, i32 0
  %5 = call %"struct.HashTable<Pair<const String, int>, void>::elt"* @_ZNK28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE3getEv(%class.HashContainer_const_iterator* %4)
  %6 = getelementptr inbounds %"struct.HashTable<Pair<const String, int>, void>::elt", %"struct.HashTable<Pair<const String, int>, void>::elt"* %5, i32 0, i32 0
  ret %struct.Pair* %6
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN13vector_memoryI18sized_array_memoryILm4EEE6resizeEiPK10char_arrayILm4EE(%class.vector_memory.3*, i32, %struct.char_array.4*) #2 comdat align 2 {
  %4 = alloca %class.vector_memory.3*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.char_array.4*, align 8
  %7 = alloca %struct.char_array.4, align 1
  store %class.vector_memory.3* %0, %class.vector_memory.3** %4, align 8
  store i32 %1, i32* %5, align 4
  store %struct.char_array.4* %2, %struct.char_array.4** %6, align 8
  %8 = load %class.vector_memory.3*, %class.vector_memory.3** %4, align 8
  %9 = load %struct.char_array.4*, %struct.char_array.4** %6, align 8
  %10 = call zeroext i1 @_ZNK13vector_memoryI18sized_array_memoryILm4EEE18need_argument_copyEPK10char_arrayILm4EE(%class.vector_memory.3* %8, %struct.char_array.4* %9)
  %11 = xor i1 %10, true
  %12 = xor i1 %11, true
  br i1 %12, label %13, label %18

; <label>:13:                                     ; preds = %3
  %14 = load %struct.char_array.4*, %struct.char_array.4** %6, align 8
  %15 = bitcast %struct.char_array.4* %7 to i8*
  %16 = bitcast %struct.char_array.4* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 4, i32 1, i1 false)
  %17 = load i32, i32* %5, align 4
  call void @_ZN13vector_memoryI18sized_array_memoryILm4EEE6resizeEiPK10char_arrayILm4EE(%class.vector_memory.3* %8, i32 %17, %struct.char_array.4* %7)
  br label %95

; <label>:18:                                     ; preds = %3
  %19 = load i32, i32* %5, align 4
  %20 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %8, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp sle i32 %19, %21
  br i1 %22, label %26, label %23

; <label>:23:                                     ; preds = %18
  %24 = load i32, i32* %5, align 4
  %25 = call zeroext i1 @_ZN13vector_memoryI18sized_array_memoryILm4EEE21reserve_and_push_backEiPK10char_arrayILm4EE(%class.vector_memory.3* %8, i32 %24, %struct.char_array.4* null)
  br i1 %25, label %26, label %95

; <label>:26:                                     ; preds = %23, %18
  %27 = load i32, i32* %5, align 4
  %28 = icmp sge i32 %27, 0
  br i1 %28, label %29, label %30

; <label>:29:                                     ; preds = %26
  br label %32

; <label>:30:                                     ; preds = %26
  call void @__assert_fail(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.138, i32 0, i32 0), i32 134, i8* getelementptr inbounds ([135 x i8], [135 x i8]* @__PRETTY_FUNCTION__._ZN13vector_memoryI18sized_array_memoryILm4EEE6resizeEiPK10char_arrayILm4EE, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %32

; <label>:32:                                     ; preds = %31, %29
  %33 = load i32, i32* %5, align 4
  %34 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %8, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = icmp slt i32 %33, %35
  br i1 %36, label %37, label %60

; <label>:37:                                     ; preds = %32
  %38 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %8, i32 0, i32 0
  %39 = load %struct.char_array.4*, %struct.char_array.4** %38, align 8
  %40 = load i32, i32* %5, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %struct.char_array.4, %struct.char_array.4* %39, i64 %41
  %43 = bitcast %struct.char_array.4* %42 to i8*
  %44 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %8, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = load i32, i32* %5, align 4
  %47 = sub nsw i32 %45, %46
  %48 = sext i32 %47 to i64
  call void @_ZN18sized_array_memoryILm4EE7destroyEPvm(i8* %43, i64 %48)
  %49 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %8, i32 0, i32 0
  %50 = load %struct.char_array.4*, %struct.char_array.4** %49, align 8
  %51 = load i32, i32* %5, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.char_array.4, %struct.char_array.4* %50, i64 %52
  %54 = bitcast %struct.char_array.4* %53 to i8*
  %55 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %8, i32 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = load i32, i32* %5, align 4
  %58 = sub nsw i32 %56, %57
  %59 = sext i32 %58 to i64
  call void @_ZN18sized_array_memoryILm4EE13mark_noaccessEPvm(i8* %54, i64 %59)
  br label %60

; <label>:60:                                     ; preds = %37, %32
  %61 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %8, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = load i32, i32* %5, align 4
  %64 = icmp slt i32 %62, %63
  br i1 %64, label %65, label %92

; <label>:65:                                     ; preds = %60
  %66 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %8, i32 0, i32 0
  %67 = load %struct.char_array.4*, %struct.char_array.4** %66, align 8
  %68 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %8, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds %struct.char_array.4, %struct.char_array.4* %67, i64 %70
  %72 = bitcast %struct.char_array.4* %71 to i8*
  %73 = load i32, i32* %5, align 4
  %74 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %8, i32 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = sub nsw i32 %73, %75
  %77 = sext i32 %76 to i64
  call void @_ZN18sized_array_memoryILm4EE14mark_undefinedEPvm(i8* %72, i64 %77)
  %78 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %8, i32 0, i32 0
  %79 = load %struct.char_array.4*, %struct.char_array.4** %78, align 8
  %80 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %8, i32 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds %struct.char_array.4, %struct.char_array.4* %79, i64 %82
  %84 = bitcast %struct.char_array.4* %83 to i8*
  %85 = load i32, i32* %5, align 4
  %86 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %8, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = sub nsw i32 %85, %87
  %89 = sext i32 %88 to i64
  %90 = load %struct.char_array.4*, %struct.char_array.4** %6, align 8
  %91 = bitcast %struct.char_array.4* %90 to i8*
  call void @_ZN18sized_array_memoryILm4EE4fillEPvmPKv(i8* %84, i64 %89, i8* %91)
  br label %92

; <label>:92:                                     ; preds = %65, %60
  %93 = load i32, i32* %5, align 4
  %94 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %8, i32 0, i32 1
  store i32 %93, i32* %94, align 8
  br label %95

; <label>:95:                                     ; preds = %13, %92, %23
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN13vector_memoryI18typed_array_memoryIN5Lexer11ElementTypeEEEC2Ev(%class.vector_memory.15*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.vector_memory.15*, align 8
  store %class.vector_memory.15* %0, %class.vector_memory.15** %2, align 8
  %3 = load %class.vector_memory.15*, %class.vector_memory.15** %2, align 8
  %4 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %3, i32 0, i32 0
  store %"struct.Lexer::ElementType"* null, %"struct.Lexer::ElementType"** %4, align 8
  %5 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %3, i32 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %3, i32 0, i32 2
  store i32 0, i32* %6, align 4
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN13vector_memoryI18sized_array_memoryILm8EEE5clearEv(%class.vector_memory*) #2 comdat align 2 {
  %2 = alloca %class.vector_memory*, align 8
  store %class.vector_memory* %0, %class.vector_memory** %2, align 8
  %3 = load %class.vector_memory*, %class.vector_memory** %2, align 8
  %4 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %3, i32 0, i32 0
  %5 = load %struct.char_array*, %struct.char_array** %4, align 8
  %6 = bitcast %struct.char_array* %5 to i8*
  %7 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %3, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  call void @_ZN18sized_array_memoryILm8EE7destroyEPvm(i8* %6, i64 %9)
  %10 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %3, i32 0, i32 0
  %11 = load %struct.char_array*, %struct.char_array** %10, align 8
  %12 = bitcast %struct.char_array* %11 to i8*
  %13 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %3, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = sext i32 %14 to i64
  call void @_ZN18sized_array_memoryILm8EE13mark_noaccessEPvm(i8* %12, i64 %15)
  %16 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %3, i32 0, i32 1
  store i32 0, i32* %16, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN18sized_array_memoryILm8EE13mark_noaccessEPvm(i8*, i64) #0 comdat align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN13vector_memoryI18typed_array_memoryIN5Lexer11ElementTypeEEE19move_construct_backEPS2_(%class.vector_memory.15*, %"struct.Lexer::ElementType"*) #2 comdat align 2 {
  %3 = alloca %class.vector_memory.15*, align 8
  %4 = alloca %"struct.Lexer::ElementType"*, align 8
  store %class.vector_memory.15* %0, %class.vector_memory.15** %3, align 8
  store %"struct.Lexer::ElementType"* %1, %"struct.Lexer::ElementType"** %4, align 8
  %5 = load %class.vector_memory.15*, %class.vector_memory.15** %3, align 8
  %6 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %5, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %7, %9
  br i1 %10, label %11, label %28

; <label>:11:                                     ; preds = %2
  %12 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %5, i32 0, i32 0
  %13 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %12, align 8
  %14 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %5, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %13, i64 %16
  call void @_ZN18typed_array_memoryIN5Lexer11ElementTypeEE14mark_undefinedEPS1_m(%"struct.Lexer::ElementType"* %17, i64 1)
  %18 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %5, i32 0, i32 0
  %19 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %18, align 8
  %20 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %5, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %19, i64 %22
  %24 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %4, align 8
  call void @_ZN18typed_array_memoryIN5Lexer11ElementTypeEE14move_constructEPS1_S3_(%"struct.Lexer::ElementType"* %23, %"struct.Lexer::ElementType"* %24)
  %25 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %25, align 8
  br label %31

; <label>:28:                                     ; preds = %2
  %29 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %4, align 8
  %30 = call zeroext i1 @_ZN13vector_memoryI18typed_array_memoryIN5Lexer11ElementTypeEEE21reserve_and_push_backEiPKS2_(%class.vector_memory.15* %5, i32 -1, %"struct.Lexer::ElementType"* %29)
  br label %31

; <label>:31:                                     ; preds = %28, %11
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr %"struct.Lexer::ElementType"* @_ZN18typed_array_memoryIN5Lexer11ElementTypeEE4castEPS1_(%"struct.Lexer::ElementType"*) #0 comdat align 2 {
  %2 = alloca %"struct.Lexer::ElementType"*, align 8
  store %"struct.Lexer::ElementType"* %0, %"struct.Lexer::ElementType"** %2, align 8
  %3 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %2, align 8
  ret %"struct.Lexer::ElementType"* %3
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN18typed_array_memoryIN5Lexer11ElementTypeEE14mark_undefinedEPS1_m(%"struct.Lexer::ElementType"*, i64) #2 comdat align 2 {
  %3 = alloca %"struct.Lexer::ElementType"*, align 8
  %4 = alloca i64, align 8
  store %"struct.Lexer::ElementType"* %0, %"struct.Lexer::ElementType"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %3, align 8
  %6 = bitcast %"struct.Lexer::ElementType"* %5 to i8*
  %7 = load i64, i64* %4, align 8
  call void @_ZN18sized_array_memoryILm48EE14mark_undefinedEPvm(i8* %6, i64 %7)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN18typed_array_memoryIN5Lexer11ElementTypeEE14move_constructEPS1_S3_(%"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"*) #2 comdat align 2 {
  %3 = alloca %"struct.Lexer::ElementType"*, align 8
  %4 = alloca %"struct.Lexer::ElementType"*, align 8
  store %"struct.Lexer::ElementType"* %0, %"struct.Lexer::ElementType"** %3, align 8
  store %"struct.Lexer::ElementType"* %1, %"struct.Lexer::ElementType"** %4, align 8
  %5 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %3, align 8
  %6 = bitcast %"struct.Lexer::ElementType"* %5 to i8*
  %7 = bitcast i8* %6 to %"struct.Lexer::ElementType"*
  %8 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %4, align 8
  %9 = call dereferenceable(48) %"struct.Lexer::ElementType"* @_Z10click_moveIRN5Lexer11ElementTypeEEON16remove_referenceIT_E4typeEOS4_(%"struct.Lexer::ElementType"* dereferenceable(48) %8)
  call void @_ZN5Lexer11ElementTypeC2EOS0_(%"struct.Lexer::ElementType"* %7, %"struct.Lexer::ElementType"* dereferenceable(48) %9)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr zeroext i1 @_ZN13vector_memoryI18typed_array_memoryIN5Lexer11ElementTypeEEE21reserve_and_push_backEiPKS2_(%class.vector_memory.15*, i32, %"struct.Lexer::ElementType"*) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i1, align 1
  %5 = alloca %class.vector_memory.15*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %"struct.Lexer::ElementType"*, align 8
  %8 = alloca %"struct.Lexer::ElementType", align 8
  %9 = alloca i8*
  %10 = alloca i32
  %11 = alloca %"struct.Lexer::ElementType"*, align 8
  store %class.vector_memory.15* %0, %class.vector_memory.15** %5, align 8
  store i32 %1, i32* %6, align 4
  store %"struct.Lexer::ElementType"* %2, %"struct.Lexer::ElementType"** %7, align 8
  %12 = load %class.vector_memory.15*, %class.vector_memory.15** %5, align 8
  %13 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %7, align 8
  %14 = icmp ne %"struct.Lexer::ElementType"* %13, null
  br i1 %14, label %15, label %18

; <label>:15:                                     ; preds = %3
  %16 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %7, align 8
  %17 = call zeroext i1 @_ZNK13vector_memoryI18typed_array_memoryIN5Lexer11ElementTypeEEE18need_argument_copyEPKS2_(%class.vector_memory.15* %12, %"struct.Lexer::ElementType"* %16)
  br label %18

; <label>:18:                                     ; preds = %15, %3
  %19 = phi i1 [ false, %3 ], [ %17, %15 ]
  %20 = xor i1 %19, true
  %21 = xor i1 %20, true
  br i1 %21, label %22, label %31

; <label>:22:                                     ; preds = %18
  %23 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %7, align 8
  call void @_ZN5Lexer11ElementTypeC2ERKS0_(%"struct.Lexer::ElementType"* %8, %"struct.Lexer::ElementType"* dereferenceable(48) %23)
  %24 = load i32, i32* %6, align 4
  %25 = invoke zeroext i1 @_ZN13vector_memoryI18typed_array_memoryIN5Lexer11ElementTypeEEE21reserve_and_push_backEiPKS2_(%class.vector_memory.15* %12, i32 %24, %"struct.Lexer::ElementType"* %8)
          to label %26 unwind label %27

; <label>:26:                                     ; preds = %22
  store i1 %25, i1* %4, align 1
  call void @_ZN5Lexer11ElementTypeD2Ev(%"struct.Lexer::ElementType"* %8) #9
  br label %98

; <label>:27:                                     ; preds = %22
  %28 = landingpad { i8*, i32 }
          cleanup
  %29 = extractvalue { i8*, i32 } %28, 0
  store i8* %29, i8** %9, align 8
  %30 = extractvalue { i8*, i32 } %28, 1
  store i32 %30, i32* %10, align 4
  call void @_ZN5Lexer11ElementTypeD2Ev(%"struct.Lexer::ElementType"* %8) #9
  br label %100

; <label>:31:                                     ; preds = %18
  %32 = load i32, i32* %6, align 4
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %34, label %45

; <label>:34:                                     ; preds = %31
  %35 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %12, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %38, label %42

; <label>:38:                                     ; preds = %34
  %39 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %12, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = mul nsw i32 %40, 2
  br label %43

; <label>:42:                                     ; preds = %34
  br label %43

; <label>:43:                                     ; preds = %42, %38
  %44 = phi i32 [ %41, %38 ], [ 4, %42 ]
  store i32 %44, i32* %6, align 4
  br label %45

; <label>:45:                                     ; preds = %43, %31
  %46 = load i32, i32* %6, align 4
  %47 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %12, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = icmp sgt i32 %46, %48
  br i1 %49, label %50, label %90

; <label>:50:                                     ; preds = %45
  %51 = load i32, i32* %6, align 4
  %52 = sext i32 %51 to i64
  %53 = mul i64 %52, 48
  %54 = call i8* @_Znam(i64 %53) #15
  %55 = bitcast i8* %54 to %"struct.Lexer::ElementType"*
  store %"struct.Lexer::ElementType"* %55, %"struct.Lexer::ElementType"** %11, align 8
  %56 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %11, align 8
  %57 = icmp ne %"struct.Lexer::ElementType"* %56, null
  br i1 %57, label %59, label %58

; <label>:58:                                     ; preds = %50
  store i1 false, i1* %4, align 1
  br label %98

; <label>:59:                                     ; preds = %50
  %60 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %11, align 8
  %61 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %12, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %60, i64 %63
  %65 = load i32, i32* %6, align 4
  %66 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %12, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = sub nsw i32 %65, %67
  %69 = sext i32 %68 to i64
  call void @_ZN18typed_array_memoryIN5Lexer11ElementTypeEE13mark_noaccessEPS1_m(%"struct.Lexer::ElementType"* %64, i64 %69)
  %70 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %11, align 8
  %71 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %12, i32 0, i32 0
  %72 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %71, align 8
  %73 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %12, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = sext i32 %74 to i64
  call void @_ZN18typed_array_memoryIN5Lexer11ElementTypeEE4moveEPS1_PKS1_m(%"struct.Lexer::ElementType"* %70, %"struct.Lexer::ElementType"* %72, i64 %75)
  %76 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %12, i32 0, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = sext i32 %77 to i64
  %79 = mul i64 %78, 48
  %80 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %12, i32 0, i32 0
  %81 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %80, align 8
  %82 = bitcast %"struct.Lexer::ElementType"* %81 to i8*
  %83 = icmp eq i8* %82, null
  br i1 %83, label %85, label %84

; <label>:84:                                     ; preds = %59
  call void @_ZdaPv(i8* %82) #14
  br label %85

; <label>:85:                                     ; preds = %84, %59
  %86 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %11, align 8
  %87 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %12, i32 0, i32 0
  store %"struct.Lexer::ElementType"* %86, %"struct.Lexer::ElementType"** %87, align 8
  %88 = load i32, i32* %6, align 4
  %89 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %12, i32 0, i32 2
  store i32 %88, i32* %89, align 4
  br label %90

; <label>:90:                                     ; preds = %85, %45
  %91 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %7, align 8
  %92 = icmp ne %"struct.Lexer::ElementType"* %91, null
  %93 = xor i1 %92, true
  %94 = xor i1 %93, true
  br i1 %94, label %95, label %97

; <label>:95:                                     ; preds = %90
  %96 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %7, align 8
  call void @_ZN13vector_memoryI18typed_array_memoryIN5Lexer11ElementTypeEEE9push_backEPKS2_(%class.vector_memory.15* %12, %"struct.Lexer::ElementType"* %96)
  br label %97

; <label>:97:                                     ; preds = %95, %90
  store i1 true, i1* %4, align 1
  br label %98

; <label>:98:                                     ; preds = %97, %58, %26
  %99 = load i1, i1* %4, align 1
  ret i1 %99

; <label>:100:                                    ; preds = %27
  %101 = load i8*, i8** %9, align 8
  %102 = load i32, i32* %10, align 4
  %103 = insertvalue { i8*, i32 } undef, i8* %101, 0
  %104 = insertvalue { i8*, i32 } %103, i32 %102, 1
  resume { i8*, i32 } %104
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN18sized_array_memoryILm48EE14mark_undefinedEPvm(i8*, i64) #0 comdat align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dereferenceable(48) %"struct.Lexer::ElementType"* @_Z10click_moveIRN5Lexer11ElementTypeEEON16remove_referenceIT_E4typeEOS4_(%"struct.Lexer::ElementType"* dereferenceable(48)) #0 comdat {
  %2 = alloca %"struct.Lexer::ElementType"*, align 8
  store %"struct.Lexer::ElementType"* %0, %"struct.Lexer::ElementType"** %2, align 8
  %3 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %2, align 8
  ret %"struct.Lexer::ElementType"* %3
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN5Lexer11ElementTypeC2EOS0_(%"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"* dereferenceable(48)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %"struct.Lexer::ElementType"*, align 8
  %4 = alloca %"struct.Lexer::ElementType"*, align 8
  store %"struct.Lexer::ElementType"* %0, %"struct.Lexer::ElementType"** %3, align 8
  store %"struct.Lexer::ElementType"* %1, %"struct.Lexer::ElementType"** %4, align 8
  %5 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %3, align 8
  %6 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %5, i32 0, i32 0
  %7 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %4, align 8
  %8 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %7, i32 0, i32 0
  %9 = bitcast %class.Element* (i64)** %6 to i8*
  %10 = bitcast %class.Element* (i64)** %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 16, i32 8, i1 false)
  %11 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %5, i32 0, i32 2
  %12 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %4, align 8
  %13 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %12, i32 0, i32 2
  call void @_ZN6StringC2EOS_(%class.String* %11, %class.String* dereferenceable(24) %13)
  %14 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %5, i32 0, i32 3
  %15 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %4, align 8
  %16 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %15, i32 0, i32 3
  %17 = load i32, i32* %16, align 8
  store i32 %17, i32* %14, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr zeroext i1 @_ZNK13vector_memoryI18typed_array_memoryIN5Lexer11ElementTypeEEE18need_argument_copyEPKS2_(%class.vector_memory.15*, %"struct.Lexer::ElementType"*) #0 comdat align 2 {
  %3 = alloca %class.vector_memory.15*, align 8
  %4 = alloca %"struct.Lexer::ElementType"*, align 8
  store %class.vector_memory.15* %0, %class.vector_memory.15** %3, align 8
  store %"struct.Lexer::ElementType"* %1, %"struct.Lexer::ElementType"** %4, align 8
  %5 = load %class.vector_memory.15*, %class.vector_memory.15** %3, align 8
  %6 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %4, align 8
  %7 = ptrtoint %"struct.Lexer::ElementType"* %6 to i64
  %8 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %5, i32 0, i32 0
  %9 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %8, align 8
  %10 = ptrtoint %"struct.Lexer::ElementType"* %9 to i64
  %11 = sub i64 %7, %10
  %12 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %5, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = sext i32 %13 to i64
  %15 = mul i64 %14, 48
  %16 = icmp ult i64 %11, %15
  ret i1 %16
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN5Lexer11ElementTypeC2ERKS0_(%"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"* dereferenceable(48)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %"struct.Lexer::ElementType"*, align 8
  %4 = alloca %"struct.Lexer::ElementType"*, align 8
  store %"struct.Lexer::ElementType"* %0, %"struct.Lexer::ElementType"** %3, align 8
  store %"struct.Lexer::ElementType"* %1, %"struct.Lexer::ElementType"** %4, align 8
  %5 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %3, align 8
  %6 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %5, i32 0, i32 0
  %7 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %4, align 8
  %8 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %7, i32 0, i32 0
  %9 = bitcast %class.Element* (i64)** %6 to i8*
  %10 = bitcast %class.Element* (i64)** %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 16, i32 8, i1 false)
  %11 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %5, i32 0, i32 2
  %12 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %4, align 8
  %13 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %12, i32 0, i32 2
  call void @_ZN6StringC2ERKS_(%class.String* %11, %class.String* dereferenceable(24) %13)
  %14 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %5, i32 0, i32 3
  %15 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %4, align 8
  %16 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %15, i32 0, i32 3
  %17 = load i32, i32* %16, align 8
  store i32 %17, i32* %14, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN18typed_array_memoryIN5Lexer11ElementTypeEE13mark_noaccessEPS1_m(%"struct.Lexer::ElementType"*, i64) #2 comdat align 2 {
  %3 = alloca %"struct.Lexer::ElementType"*, align 8
  %4 = alloca i64, align 8
  store %"struct.Lexer::ElementType"* %0, %"struct.Lexer::ElementType"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %3, align 8
  %6 = bitcast %"struct.Lexer::ElementType"* %5 to i8*
  %7 = load i64, i64* %4, align 8
  call void @_ZN18sized_array_memoryILm48EE13mark_noaccessEPvm(i8* %6, i64 %7)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN18typed_array_memoryIN5Lexer11ElementTypeEE4moveEPS1_PKS1_m(%"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"*, i64) #2 comdat align 2 {
  %4 = alloca %"struct.Lexer::ElementType"*, align 8
  %5 = alloca %"struct.Lexer::ElementType"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store %"struct.Lexer::ElementType"* %0, %"struct.Lexer::ElementType"** %4, align 8
  store %"struct.Lexer::ElementType"* %1, %"struct.Lexer::ElementType"** %5, align 8
  store i64 %2, i64* %6, align 8
  %8 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %4, align 8
  %9 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %5, align 8
  %10 = icmp ugt %"struct.Lexer::ElementType"* %8, %9
  br i1 %10, label %11, label %43

; <label>:11:                                     ; preds = %3
  %12 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %5, align 8
  %13 = load i64, i64* %6, align 8
  %14 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %12, i64 %13
  %15 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %4, align 8
  %16 = icmp ugt %"struct.Lexer::ElementType"* %14, %15
  br i1 %16, label %17, label %43

; <label>:17:                                     ; preds = %11
  %18 = load i64, i64* %6, align 8
  %19 = sub i64 %18, 1
  %20 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %4, align 8
  %21 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %20, i64 %19
  store %"struct.Lexer::ElementType"* %21, %"struct.Lexer::ElementType"** %4, align 8
  %22 = load i64, i64* %6, align 8
  %23 = sub i64 %22, 1
  %24 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %5, align 8
  %25 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %24, i64 %23
  store %"struct.Lexer::ElementType"* %25, %"struct.Lexer::ElementType"** %5, align 8
  br label %26

; <label>:26:                                     ; preds = %35, %17
  %27 = load i64, i64* %6, align 8
  %28 = icmp ne i64 %27, 0
  br i1 %28, label %29, label %42

; <label>:29:                                     ; preds = %26
  %30 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %4, align 8
  %31 = bitcast %"struct.Lexer::ElementType"* %30 to i8*
  %32 = bitcast i8* %31 to %"struct.Lexer::ElementType"*
  %33 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %5, align 8
  call void @_ZN5Lexer11ElementTypeC2ERKS0_(%"struct.Lexer::ElementType"* %32, %"struct.Lexer::ElementType"* dereferenceable(48) %33)
  %34 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %5, align 8
  call void @_ZN5Lexer11ElementTypeD2Ev(%"struct.Lexer::ElementType"* %34) #9
  br label %35

; <label>:35:                                     ; preds = %29
  %36 = load i64, i64* %6, align 8
  %37 = add i64 %36, -1
  store i64 %37, i64* %6, align 8
  %38 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %4, align 8
  %39 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %38, i32 -1
  store %"struct.Lexer::ElementType"* %39, %"struct.Lexer::ElementType"** %4, align 8
  %40 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %5, align 8
  %41 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %40, i32 -1
  store %"struct.Lexer::ElementType"* %41, %"struct.Lexer::ElementType"** %5, align 8
  br label %26

; <label>:42:                                     ; preds = %26
  br label %64

; <label>:43:                                     ; preds = %11, %3
  store i64 0, i64* %7, align 8
  br label %44

; <label>:44:                                     ; preds = %60, %43
  %45 = load i64, i64* %7, align 8
  %46 = load i64, i64* %6, align 8
  %47 = icmp ne i64 %45, %46
  br i1 %47, label %48, label %63

; <label>:48:                                     ; preds = %44
  %49 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %4, align 8
  %50 = load i64, i64* %7, align 8
  %51 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %49, i64 %50
  %52 = bitcast %"struct.Lexer::ElementType"* %51 to i8*
  %53 = bitcast i8* %52 to %"struct.Lexer::ElementType"*
  %54 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %5, align 8
  %55 = load i64, i64* %7, align 8
  %56 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %54, i64 %55
  call void @_ZN5Lexer11ElementTypeC2ERKS0_(%"struct.Lexer::ElementType"* %53, %"struct.Lexer::ElementType"* dereferenceable(48) %56)
  %57 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %5, align 8
  %58 = load i64, i64* %7, align 8
  %59 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %57, i64 %58
  call void @_ZN5Lexer11ElementTypeD2Ev(%"struct.Lexer::ElementType"* %59) #9
  br label %60

; <label>:60:                                     ; preds = %48
  %61 = load i64, i64* %7, align 8
  %62 = add i64 %61, 1
  store i64 %62, i64* %7, align 8
  br label %44

; <label>:63:                                     ; preds = %44
  br label %64

; <label>:64:                                     ; preds = %63, %42
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN13vector_memoryI18typed_array_memoryIN5Lexer11ElementTypeEEE9push_backEPKS2_(%class.vector_memory.15*, %"struct.Lexer::ElementType"*) #2 comdat align 2 {
  %3 = alloca %class.vector_memory.15*, align 8
  %4 = alloca %"struct.Lexer::ElementType"*, align 8
  store %class.vector_memory.15* %0, %class.vector_memory.15** %3, align 8
  store %"struct.Lexer::ElementType"* %1, %"struct.Lexer::ElementType"** %4, align 8
  %5 = load %class.vector_memory.15*, %class.vector_memory.15** %3, align 8
  %6 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %5, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %7, %9
  br i1 %10, label %11, label %28

; <label>:11:                                     ; preds = %2
  %12 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %5, i32 0, i32 0
  %13 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %12, align 8
  %14 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %5, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %13, i64 %16
  call void @_ZN18typed_array_memoryIN5Lexer11ElementTypeEE14mark_undefinedEPS1_m(%"struct.Lexer::ElementType"* %17, i64 1)
  %18 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %5, i32 0, i32 0
  %19 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %18, align 8
  %20 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %5, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %19, i64 %22
  %24 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %4, align 8
  call void @_ZN18typed_array_memoryIN5Lexer11ElementTypeEE4fillEPS1_mPKS1_(%"struct.Lexer::ElementType"* %23, i64 1, %"struct.Lexer::ElementType"* %24)
  %25 = getelementptr inbounds %class.vector_memory.15, %class.vector_memory.15* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %25, align 8
  br label %31

; <label>:28:                                     ; preds = %2
  %29 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %4, align 8
  %30 = call zeroext i1 @_ZN13vector_memoryI18typed_array_memoryIN5Lexer11ElementTypeEEE21reserve_and_push_backEiPKS2_(%class.vector_memory.15* %5, i32 -1, %"struct.Lexer::ElementType"* %29)
  br label %31

; <label>:31:                                     ; preds = %28, %11
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN18sized_array_memoryILm48EE13mark_noaccessEPvm(i8*, i64) #0 comdat align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN18typed_array_memoryIN5Lexer11ElementTypeEE4fillEPS1_mPKS1_(%"struct.Lexer::ElementType"*, i64, %"struct.Lexer::ElementType"*) #2 comdat align 2 {
  %4 = alloca %"struct.Lexer::ElementType"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.Lexer::ElementType"*, align 8
  %7 = alloca i64, align 8
  store %"struct.Lexer::ElementType"* %0, %"struct.Lexer::ElementType"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"struct.Lexer::ElementType"* %2, %"struct.Lexer::ElementType"** %6, align 8
  store i64 0, i64* %7, align 8
  br label %8

; <label>:8:                                      ; preds = %19, %3
  %9 = load i64, i64* %7, align 8
  %10 = load i64, i64* %5, align 8
  %11 = icmp ne i64 %9, %10
  br i1 %11, label %12, label %22

; <label>:12:                                     ; preds = %8
  %13 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %4, align 8
  %14 = load i64, i64* %7, align 8
  %15 = getelementptr inbounds %"struct.Lexer::ElementType", %"struct.Lexer::ElementType"* %13, i64 %14
  %16 = bitcast %"struct.Lexer::ElementType"* %15 to i8*
  %17 = bitcast i8* %16 to %"struct.Lexer::ElementType"*
  %18 = load %"struct.Lexer::ElementType"*, %"struct.Lexer::ElementType"** %6, align 8
  call void @_ZN5Lexer11ElementTypeC2ERKS0_(%"struct.Lexer::ElementType"* %17, %"struct.Lexer::ElementType"* dereferenceable(48) %18)
  br label %19

; <label>:19:                                     ; preds = %12
  %20 = load i64, i64* %7, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %7, align 8
  br label %8

; <label>:22:                                     ; preds = %8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr %"struct.HashTable<Pair<const String, int>, void>::elt"* @_ZNK28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEptEv(%class.HashContainer_const_iterator*) #0 comdat align 2 {
  %2 = alloca %class.HashContainer_const_iterator*, align 8
  store %class.HashContainer_const_iterator* %0, %class.HashContainer_const_iterator** %2, align 8
  %3 = load %class.HashContainer_const_iterator*, %class.HashContainer_const_iterator** %2, align 8
  %4 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %3, i32 0, i32 0
  %5 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %4, align 8
  ret %"struct.HashTable<Pair<const String, int>, void>::elt"* %5
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr i64 @_ZN9HashTableI4PairIK6StringiEvE5eraseERS2_(%class.HashTable.13*, %class.String* dereferenceable(24)) #2 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = alloca %class.HashTable.13*, align 8
  %5 = alloca %class.String*, align 8
  %6 = alloca %"struct.HashTable<Pair<const String, int>, void>::elt"*, align 8
  store %class.HashTable.13* %0, %class.HashTable.13** %4, align 8
  store %class.String* %1, %class.String** %5, align 8
  %7 = load %class.HashTable.13*, %class.HashTable.13** %4, align 8
  %8 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %7, i32 0, i32 0
  %9 = load %class.String*, %class.String** %5, align 8
  %10 = call %"struct.HashTable<Pair<const String, int>, void>::elt"* @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE5eraseERS3_(%class.HashContainer* %8, %class.String* dereferenceable(24) %9)
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %10, %"struct.HashTable<Pair<const String, int>, void>::elt"** %6, align 8
  %11 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %6, align 8
  %12 = icmp ne %"struct.HashTable<Pair<const String, int>, void>::elt"* %11, null
  br i1 %12, label %13, label %20

; <label>:13:                                     ; preds = %2
  %14 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %6, align 8
  %15 = getelementptr inbounds %"struct.HashTable<Pair<const String, int>, void>::elt", %"struct.HashTable<Pair<const String, int>, void>::elt"* %14, i32 0, i32 0
  call void @_ZN4PairIK6StringiED2Ev(%struct.Pair* %15) #9
  %16 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %7, i32 0, i32 1
  %17 = bitcast %class.SizedHashAllocator* %16 to %class.HashAllocator*
  %18 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %6, align 8
  %19 = bitcast %"struct.HashTable<Pair<const String, int>, void>::elt"* %18 to i8*
  call void @_ZN13HashAllocator10deallocateEPv(%class.HashAllocator* %17, i8* %19)
  store i64 1, i64* %3, align 8
  br label %21

; <label>:20:                                     ; preds = %2
  store i64 0, i64* %3, align 8
  br label %21

; <label>:21:                                     ; preds = %20, %13
  %22 = load i64, i64* %3, align 8
  ret i64 %22
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr %"struct.HashTable<Pair<const String, int>, void>::elt"* @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE5eraseERS3_(%class.HashContainer*, %class.String* dereferenceable(24)) #2 comdat align 2 {
  %3 = alloca %class.HashContainer*, align 8
  %4 = alloca %class.String*, align 8
  %5 = alloca %class.HashContainer_iterator, align 8
  store %class.HashContainer* %0, %class.HashContainer** %3, align 8
  store %class.String* %1, %class.String** %4, align 8
  %6 = load %class.HashContainer*, %class.HashContainer** %3, align 8
  %7 = load %class.String*, %class.String** %4, align 8
  call void @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE4findERS3_(%class.HashContainer_iterator* sret %5, %class.HashContainer* %6, %class.String* dereferenceable(24) %7)
  %8 = call %"struct.HashTable<Pair<const String, int>, void>::elt"* @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE3setER22HashContainer_iteratorIS6_S8_EPS6_b(%class.HashContainer* %6, %class.HashContainer_iterator* dereferenceable(32) %5, %"struct.HashTable<Pair<const String, int>, void>::elt"* null, i1 zeroext false)
  ret %"struct.HashTable<Pair<const String, int>, void>::elt"* %8
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZNK9HashTableI4PairIK6StringiEvE5beginEv(%class.HashTable_const_iterator* noalias sret, %class.HashTable.13*) #2 comdat align 2 {
  %3 = alloca %class.HashTable.13*, align 8
  %4 = alloca %class.HashContainer_const_iterator, align 8
  store %class.HashTable.13* %1, %class.HashTable.13** %3, align 8
  %5 = load %class.HashTable.13*, %class.HashTable.13** %3, align 8
  %6 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %5, i32 0, i32 0
  call void @_ZNK13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE5beginEv(%class.HashContainer_const_iterator* sret %4, %class.HashContainer* %6)
  call void @_ZN24HashTable_const_iteratorI4PairIK6StringiEEC2ERK28HashContainer_const_iteratorIN9HashTableIS3_vE3eltE21HashContainer_adapterIS8_EE(%class.HashTable_const_iterator* %0, %class.HashContainer_const_iterator* dereferenceable(32) %4)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZNK13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE5beginEv(%class.HashContainer_const_iterator* noalias sret, %class.HashContainer*) #2 comdat align 2 {
  %3 = alloca %class.HashContainer*, align 8
  store %class.HashContainer* %1, %class.HashContainer** %3, align 8
  %4 = load %class.HashContainer*, %class.HashContainer** %3, align 8
  call void @_ZN28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEC2EPK13HashContainerIS6_S8_E(%class.HashContainer_const_iterator* %0, %class.HashContainer* %4)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEC2EPK13HashContainerIS6_S8_E(%class.HashContainer_const_iterator*, %class.HashContainer*) unnamed_addr #2 comdat align 2 {
  %3 = alloca %class.HashContainer_const_iterator*, align 8
  %4 = alloca %class.HashContainer*, align 8
  store %class.HashContainer_const_iterator* %0, %class.HashContainer_const_iterator** %3, align 8
  store %class.HashContainer* %1, %class.HashContainer** %4, align 8
  %5 = load %class.HashContainer_const_iterator*, %class.HashContainer_const_iterator** %3, align 8
  %6 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %5, i32 0, i32 3
  %7 = load %class.HashContainer*, %class.HashContainer** %4, align 8
  store %class.HashContainer* %7, %class.HashContainer** %6, align 8
  %8 = load %class.HashContainer*, %class.HashContainer** %4, align 8
  %9 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %8, i32 0, i32 0
  %10 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %9, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %5, i32 0, i32 2
  store i32 %11, i32* %12, align 8
  %13 = load %class.HashContainer*, %class.HashContainer** %4, align 8
  %14 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %13, i32 0, i32 0
  %15 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %14, i32 0, i32 0
  %16 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %15, align 8
  %17 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %5, i32 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %16, i64 %19
  %21 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %5, i32 0, i32 1
  store %"struct.HashTable<Pair<const String, int>, void>::elt"** %20, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %21, align 8
  %22 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %5, i32 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = load %class.HashContainer*, %class.HashContainer** %4, align 8
  %25 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %24, i32 0, i32 0
  %26 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %23, %27
  %29 = xor i1 %28, true
  %30 = xor i1 %29, true
  br i1 %30, label %31, label %33

; <label>:31:                                     ; preds = %2
  %32 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %5, i32 0, i32 0
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* null, %"struct.HashTable<Pair<const String, int>, void>::elt"** %32, align 8
  br label %46

; <label>:33:                                     ; preds = %2
  %34 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %5, i32 0, i32 1
  %35 = load %"struct.HashTable<Pair<const String, int>, void>::elt"**, %"struct.HashTable<Pair<const String, int>, void>::elt"*** %34, align 8
  %36 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %35, align 8
  %37 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %5, i32 0, i32 0
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %36, %"struct.HashTable<Pair<const String, int>, void>::elt"** %37, align 8
  %38 = icmp ne %"struct.HashTable<Pair<const String, int>, void>::elt"* %36, null
  br i1 %38, label %45, label %39

; <label>:39:                                     ; preds = %33
  call void @_ZN28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEppEi(%class.HashContainer_const_iterator* %5, i32 0)
  %40 = getelementptr inbounds %class.HashContainer_const_iterator, %class.HashContainer_const_iterator* %5, i32 0, i32 2
  %41 = load i32, i32* %40, align 8
  %42 = load %class.HashContainer*, %class.HashContainer** %4, align 8
  %43 = getelementptr inbounds %class.HashContainer, %class.HashContainer* %42, i32 0, i32 0
  %44 = getelementptr inbounds %class.HashContainer_rep, %class.HashContainer_rep* %43, i32 0, i32 2
  store i32 %41, i32* %44, align 4
  br label %45

; <label>:45:                                     ; preds = %39, %33
  br label %46

; <label>:46:                                     ; preds = %45, %31
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr %struct.char_array.4* @_ZN18sized_array_memoryILm4EE4castIjEEP10char_arrayILm4EEPT_(i32*) #0 comdat align 2 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  %4 = bitcast i32* %3 to %struct.char_array.4*
  ret %struct.char_array.4* %4
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr zeroext i1 @_ZN6IntArg16parse_saturatingIiEEbRK6StringRT_RK10ArgContext(%class.IntArg*, %class.String* dereferenceable(24), i32* dereferenceable(4), %class.ArgContext* dereferenceable(32)) #2 comdat align 2 {
  %5 = alloca i1, align 1
  %6 = alloca %class.IntArg*, align 8
  %7 = alloca %class.String*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca %class.ArgContext*, align 8
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca [1 x i32], align 4
  store %class.IntArg* %0, %class.IntArg** %6, align 8
  store %class.String* %1, %class.String** %7, align 8
  store i32* %2, i32** %8, align 8
  store %class.ArgContext* %3, %class.ArgContext** %9, align 8
  %13 = load %class.IntArg*, %class.IntArg** %6, align 8
  store i8 1, i8* %10, align 1
  store i32 1, i32* %11, align 4
  %14 = load %class.String*, %class.String** %7, align 8
  %15 = call i8* @_ZNK6String5beginEv(%class.String* %14)
  %16 = load %class.String*, %class.String** %7, align 8
  %17 = call i8* @_ZNK6String3endEv(%class.String* %16)
  %18 = getelementptr inbounds [1 x i32], [1 x i32]* %12, i32 0, i32 0
  %19 = call i8* @_ZN6IntArg5parseEPKcS1_biPji(%class.IntArg* %13, i8* %15, i8* %17, i1 zeroext true, i32 4, i32* %18, i32 1)
  %20 = load %class.String*, %class.String** %7, align 8
  %21 = call i8* @_ZNK6String3endEv(%class.String* %20)
  %22 = icmp ne i8* %19, %21
  br i1 %22, label %23, label %25

; <label>:23:                                     ; preds = %4
  %24 = getelementptr inbounds %class.IntArg, %class.IntArg* %13, i32 0, i32 1
  store i32 22, i32* %24, align 4
  br label %25

; <label>:25:                                     ; preds = %23, %4
  %26 = getelementptr inbounds %class.IntArg, %class.IntArg* %13, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %35

; <label>:29:                                     ; preds = %25
  %30 = getelementptr inbounds %class.IntArg, %class.IntArg* %13, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = icmp ne i32 %31, 34
  br i1 %32, label %33, label %35

; <label>:33:                                     ; preds = %29
  %34 = load %class.ArgContext*, %class.ArgContext** %9, align 8
  call void (%class.ArgContext*, i8*, ...) @_ZNK10ArgContext5errorEPKcz(%class.ArgContext* %34, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.139, i32 0, i32 0))
  store i1 false, i1* %5, align 1
  br label %38

; <label>:35:                                     ; preds = %29, %25
  %36 = getelementptr inbounds [1 x i32], [1 x i32]* %12, i32 0, i32 0
  %37 = load i32*, i32** %8, align 8
  call void @_Z15extract_integerIjjEvPKT_RT0_(i32* %36, i32* dereferenceable(4) %37)
  store i1 true, i1* %5, align 1
  br label %38

; <label>:38:                                     ; preds = %35, %33
  %39 = load i1, i1* %5, align 1
  ret i1 %39
}

declare void @_ZN6IntArg11range_errorERK10ArgContextbx(%class.IntArg*, %class.ArgContext* dereferenceable(32), i1 zeroext, i64) #3

declare i8* @_ZN6IntArg5parseEPKcS1_biPji(%class.IntArg*, i8*, i8*, i1 zeroext, i32, i32*, i32) #3

declare void @_ZNK10ArgContext5errorEPKcz(%class.ArgContext*, i8*, ...) #3

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_Z15extract_integerIjjEvPKT_RT0_(i32*, i32* dereferenceable(4)) #2 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load i32*, i32** %4, align 8
  call void @_ZN22extract_integer_helperILi1EjjE7extractEPKjRj(i32* %5, i32* dereferenceable(4) %6)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN22extract_integer_helperILi1EjjE7extractEPKjRj(i32*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = getelementptr inbounds i32, i32* %5, i64 0
  %7 = load i32, i32* %6, align 4
  %8 = load i32*, i32** %4, align 8
  store i32 %7, i32* %8, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN13vector_memoryI18sized_array_memoryILm4EEE4swapERS2_(%class.vector_memory.3*, %class.vector_memory.3* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %class.vector_memory.3*, align 8
  %4 = alloca %class.vector_memory.3*, align 8
  %5 = alloca %struct.char_array.4*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %class.vector_memory.3* %0, %class.vector_memory.3** %3, align 8
  store %class.vector_memory.3* %1, %class.vector_memory.3** %4, align 8
  %8 = load %class.vector_memory.3*, %class.vector_memory.3** %3, align 8
  %9 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %8, i32 0, i32 0
  %10 = load %struct.char_array.4*, %struct.char_array.4** %9, align 8
  store %struct.char_array.4* %10, %struct.char_array.4** %5, align 8
  %11 = load %class.vector_memory.3*, %class.vector_memory.3** %4, align 8
  %12 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %11, i32 0, i32 0
  %13 = load %struct.char_array.4*, %struct.char_array.4** %12, align 8
  %14 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %8, i32 0, i32 0
  store %struct.char_array.4* %13, %struct.char_array.4** %14, align 8
  %15 = load %struct.char_array.4*, %struct.char_array.4** %5, align 8
  %16 = load %class.vector_memory.3*, %class.vector_memory.3** %4, align 8
  %17 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %16, i32 0, i32 0
  store %struct.char_array.4* %15, %struct.char_array.4** %17, align 8
  %18 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %8, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %6, align 4
  %20 = load %class.vector_memory.3*, %class.vector_memory.3** %4, align 8
  %21 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %20, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %8, i32 0, i32 1
  store i32 %22, i32* %23, align 8
  %24 = load i32, i32* %6, align 4
  %25 = load %class.vector_memory.3*, %class.vector_memory.3** %4, align 8
  %26 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %25, i32 0, i32 1
  store i32 %24, i32* %26, align 8
  %27 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %8, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %7, align 4
  %29 = load %class.vector_memory.3*, %class.vector_memory.3** %4, align 8
  %30 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %29, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %8, i32 0, i32 2
  store i32 %31, i32* %32, align 4
  %33 = load i32, i32* %7, align 4
  %34 = load %class.vector_memory.3*, %class.vector_memory.3** %4, align 8
  %35 = getelementptr inbounds %class.vector_memory.3, %class.vector_memory.3* %34, i32 0, i32 2
  store i32 %33, i32* %35, align 4
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dereferenceable(56) %class.HashTable.13* @_ZN9HashTableI4PairIK6StringiEvEaSERKS4_(%class.HashTable.13*, %class.HashTable.13* dereferenceable(56)) #2 comdat align 2 {
  %3 = alloca %class.HashTable.13*, align 8
  %4 = alloca %class.HashTable.13*, align 8
  store %class.HashTable.13* %0, %class.HashTable.13** %3, align 8
  store %class.HashTable.13* %1, %class.HashTable.13** %4, align 8
  %5 = load %class.HashTable.13*, %class.HashTable.13** %3, align 8
  %6 = load %class.HashTable.13*, %class.HashTable.13** %4, align 8
  %7 = icmp ne %class.HashTable.13* %6, %5
  br i1 %7, label %8, label %22

; <label>:8:                                      ; preds = %2
  call void @_ZN9HashTableI4PairIK6StringiEvE5clearEv(%class.HashTable.13* %5)
  %9 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %5, i32 0, i32 0
  %10 = call i32 @_ZNK13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE12bucket_countEv(%class.HashContainer* %9)
  %11 = load %class.HashTable.13*, %class.HashTable.13** %4, align 8
  %12 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %11, i32 0, i32 0
  %13 = call i32 @_ZNK13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE12bucket_countEv(%class.HashContainer* %12)
  %14 = icmp ult i32 %10, %13
  br i1 %14, label %15, label %20

; <label>:15:                                     ; preds = %8
  %16 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %5, i32 0, i32 0
  %17 = load %class.HashTable.13*, %class.HashTable.13** %4, align 8
  %18 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %17, i32 0, i32 0
  %19 = call i32 @_ZNK13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE12bucket_countEv(%class.HashContainer* %18)
  call void @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE6rehashEj(%class.HashContainer* %16, i32 %19)
  br label %20

; <label>:20:                                     ; preds = %15, %8
  %21 = load %class.HashTable.13*, %class.HashTable.13** %4, align 8
  call void @_ZN9HashTableI4PairIK6StringiEvE13copy_elementsERKS4_(%class.HashTable.13* %5, %class.HashTable.13* dereferenceable(56) %21)
  br label %22

; <label>:22:                                     ; preds = %20, %2
  ret %class.HashTable.13* %5
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN9HashTableI4PairIK6StringiEvE5clearEv(%class.HashTable.13*) #2 comdat align 2 {
  %2 = alloca %class.HashTable.13*, align 8
  %3 = alloca %class.HashContainer_iterator, align 8
  %4 = alloca %"struct.HashTable<Pair<const String, int>, void>::elt"*, align 8
  store %class.HashTable.13* %0, %class.HashTable.13** %2, align 8
  %5 = load %class.HashTable.13*, %class.HashTable.13** %2, align 8
  %6 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %5, i32 0, i32 0
  call void @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE5beginEv(%class.HashContainer_iterator* sret %3, %class.HashContainer* %6)
  br label %7

; <label>:7:                                      ; preds = %12, %1
  %8 = bitcast %class.HashContainer_iterator* %3 to %class.HashContainer_const_iterator*
  %9 = call { i64, i64 } @_ZNK28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEcvMS9_KFPS6_vEEv(%class.HashContainer_const_iterator* %8)
  %10 = extractvalue { i64, i64 } %9, 0
  %11 = icmp ne i64 %10, 0
  br i1 %11, label %12, label %21

; <label>:12:                                     ; preds = %7
  %13 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %5, i32 0, i32 0
  %14 = call %"struct.HashTable<Pair<const String, int>, void>::elt"* @_ZN13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE5eraseER22HashContainer_iteratorIS6_S8_E(%class.HashContainer* %13, %class.HashContainer_iterator* dereferenceable(32) %3)
  store %"struct.HashTable<Pair<const String, int>, void>::elt"* %14, %"struct.HashTable<Pair<const String, int>, void>::elt"** %4, align 8
  %15 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %4, align 8
  %16 = getelementptr inbounds %"struct.HashTable<Pair<const String, int>, void>::elt", %"struct.HashTable<Pair<const String, int>, void>::elt"* %15, i32 0, i32 0
  call void @_ZN4PairIK6StringiED2Ev(%struct.Pair* %16) #9
  %17 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %5, i32 0, i32 1
  %18 = bitcast %class.SizedHashAllocator* %17 to %class.HashAllocator*
  %19 = load %"struct.HashTable<Pair<const String, int>, void>::elt"*, %"struct.HashTable<Pair<const String, int>, void>::elt"** %4, align 8
  %20 = bitcast %"struct.HashTable<Pair<const String, int>, void>::elt"* %19 to i8*
  call void @_ZN13HashAllocator10deallocateEPv(%class.HashAllocator* %18, i8* %20)
  br label %7

; <label>:21:                                     ; preds = %7
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN9HashTableI4PairIK6StringiEvE13copy_elementsERKS4_(%class.HashTable.13*, %class.HashTable.13* dereferenceable(56)) #2 comdat align 2 {
  %3 = alloca %class.HashTable.13*, align 8
  %4 = alloca %class.HashTable.13*, align 8
  %5 = alloca %class.HashContainer_const_iterator, align 8
  %6 = alloca %class.HashTable_iterator, align 8
  store %class.HashTable.13* %0, %class.HashTable.13** %3, align 8
  store %class.HashTable.13* %1, %class.HashTable.13** %4, align 8
  %7 = load %class.HashTable.13*, %class.HashTable.13** %3, align 8
  %8 = load %class.HashTable.13*, %class.HashTable.13** %4, align 8
  %9 = getelementptr inbounds %class.HashTable.13, %class.HashTable.13* %8, i32 0, i32 0
  call void @_ZNK13HashContainerIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EE5beginEv(%class.HashContainer_const_iterator* sret %5, %class.HashContainer* %9)
  br label %10

; <label>:10:                                     ; preds = %17, %2
  %11 = call { i64, i64 } @_ZNK28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEcvMS9_KFPS6_vEEv(%class.HashContainer_const_iterator* %5)
  %12 = extractvalue { i64, i64 } %11, 0
  %13 = icmp ne i64 %12, 0
  br i1 %13, label %14, label %18

; <label>:14:                                     ; preds = %10
  %15 = call %"struct.HashTable<Pair<const String, int>, void>::elt"* @_ZNK28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEptEv(%class.HashContainer_const_iterator* %5)
  %16 = getelementptr inbounds %"struct.HashTable<Pair<const String, int>, void>::elt", %"struct.HashTable<Pair<const String, int>, void>::elt"* %15, i32 0, i32 0
  call void @_ZN9HashTableI4PairIK6StringiEvE11find_insertERKS3_(%class.HashTable_iterator* sret %6, %class.HashTable.13* %7, %struct.Pair* dereferenceable(32) %16)
  br label %17

; <label>:17:                                     ; preds = %14
  call void @_ZN28HashContainer_const_iteratorIN9HashTableI4PairIK6StringiEvE3eltE21HashContainer_adapterIS6_EEppEv(%class.HashContainer_const_iterator* %5)
  br label %10

; <label>:18:                                     ; preds = %10
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr void @_ZN13vector_memoryI18sized_array_memoryILm8EEE9push_backEPK10char_arrayILm8EE(%class.vector_memory*, %struct.char_array*) #2 comdat align 2 {
  %3 = alloca %class.vector_memory*, align 8
  %4 = alloca %struct.char_array*, align 8
  store %class.vector_memory* %0, %class.vector_memory** %3, align 8
  store %struct.char_array* %1, %struct.char_array** %4, align 8
  %5 = load %class.vector_memory*, %class.vector_memory** %3, align 8
  %6 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %5, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %7, %9
  br i1 %10, label %11, label %31

; <label>:11:                                     ; preds = %2
  %12 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %5, i32 0, i32 0
  %13 = load %struct.char_array*, %struct.char_array** %12, align 8
  %14 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %5, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.char_array, %struct.char_array* %13, i64 %16
  %18 = bitcast %struct.char_array* %17 to i8*
  call void @_ZN18sized_array_memoryILm8EE14mark_undefinedEPvm(i8* %18, i64 1)
  %19 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %5, i32 0, i32 0
  %20 = load %struct.char_array*, %struct.char_array** %19, align 8
  %21 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %5, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %struct.char_array, %struct.char_array* %20, i64 %23
  %25 = bitcast %struct.char_array* %24 to i8*
  %26 = load %struct.char_array*, %struct.char_array** %4, align 8
  %27 = bitcast %struct.char_array* %26 to i8*
  call void @_ZN18sized_array_memoryILm8EE4fillEPvmPKv(i8* %25, i64 1, i8* %27)
  %28 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %5, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %28, align 8
  br label %34

; <label>:31:                                     ; preds = %2
  %32 = load %struct.char_array*, %struct.char_array** %4, align 8
  %33 = call zeroext i1 @_ZN13vector_memoryI18sized_array_memoryILm8EEE21reserve_and_push_backEiPK10char_arrayILm8EE(%class.vector_memory* %5, i32 -1, %struct.char_array* %32)
  br label %34

; <label>:34:                                     ; preds = %31, %11
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr %struct.char_array* @_ZN18sized_array_memoryILm8EE4castIN6Router4PortEEEP10char_arrayILm8EEPT_(%"struct.Router::Port"*) #0 comdat align 2 {
  %2 = alloca %"struct.Router::Port"*, align 8
  store %"struct.Router::Port"* %0, %"struct.Router::Port"** %2, align 8
  %3 = load %"struct.Router::Port"*, %"struct.Router::Port"** %2, align 8
  %4 = bitcast %"struct.Router::Port"* %3 to %struct.char_array*
  ret %struct.char_array* %4
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN18sized_array_memoryILm8EE14mark_undefinedEPvm(i8*, i64) #0 comdat align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN18sized_array_memoryILm8EE4fillEPvmPKv(i8*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  br label %7

; <label>:7:                                      ; preds = %13, %3
  %8 = load i64, i64* %5, align 8
  %9 = icmp ne i64 %8, 0
  br i1 %9, label %10, label %18

; <label>:10:                                     ; preds = %7
  %11 = load i8*, i8** %4, align 8
  %12 = load i8*, i8** %6, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 1, i1 false)
  br label %13

; <label>:13:                                     ; preds = %10
  %14 = load i64, i64* %5, align 8
  %15 = add i64 %14, -1
  store i64 %15, i64* %5, align 8
  %16 = load i8*, i8** %4, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 8
  store i8* %17, i8** %4, align 8
  br label %7

; <label>:18:                                     ; preds = %7
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr zeroext i1 @_ZN13vector_memoryI18sized_array_memoryILm8EEE21reserve_and_push_backEiPK10char_arrayILm8EE(%class.vector_memory*, i32, %struct.char_array*) #2 comdat align 2 {
  %4 = alloca i1, align 1
  %5 = alloca %class.vector_memory*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.char_array*, align 8
  %8 = alloca %struct.char_array, align 1
  %9 = alloca %struct.char_array*, align 8
  store %class.vector_memory* %0, %class.vector_memory** %5, align 8
  store i32 %1, i32* %6, align 4
  store %struct.char_array* %2, %struct.char_array** %7, align 8
  %10 = load %class.vector_memory*, %class.vector_memory** %5, align 8
  %11 = load %struct.char_array*, %struct.char_array** %7, align 8
  %12 = icmp ne %struct.char_array* %11, null
  br i1 %12, label %13, label %16

; <label>:13:                                     ; preds = %3
  %14 = load %struct.char_array*, %struct.char_array** %7, align 8
  %15 = call zeroext i1 @_ZNK13vector_memoryI18sized_array_memoryILm8EEE18need_argument_copyEPK10char_arrayILm8EE(%class.vector_memory* %10, %struct.char_array* %14)
  br label %16

; <label>:16:                                     ; preds = %13, %3
  %17 = phi i1 [ false, %3 ], [ %15, %13 ]
  %18 = xor i1 %17, true
  %19 = xor i1 %18, true
  br i1 %19, label %20, label %26

; <label>:20:                                     ; preds = %16
  %21 = load %struct.char_array*, %struct.char_array** %7, align 8
  %22 = bitcast %struct.char_array* %8 to i8*
  %23 = bitcast %struct.char_array* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 1, i1 false)
  %24 = load i32, i32* %6, align 4
  %25 = call zeroext i1 @_ZN13vector_memoryI18sized_array_memoryILm8EEE21reserve_and_push_backEiPK10char_arrayILm8EE(%class.vector_memory* %10, i32 %24, %struct.char_array* %8)
  store i1 %25, i1* %4, align 1
  br label %96

; <label>:26:                                     ; preds = %16
  %27 = load i32, i32* %6, align 4
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %29, label %40

; <label>:29:                                     ; preds = %26
  %30 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %10, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %37

; <label>:33:                                     ; preds = %29
  %34 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %10, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = mul nsw i32 %35, 2
  br label %38

; <label>:37:                                     ; preds = %29
  br label %38

; <label>:38:                                     ; preds = %37, %33
  %39 = phi i32 [ %36, %33 ], [ 4, %37 ]
  store i32 %39, i32* %6, align 4
  br label %40

; <label>:40:                                     ; preds = %38, %26
  %41 = load i32, i32* %6, align 4
  %42 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %10, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp sgt i32 %41, %43
  br i1 %44, label %45, label %88

; <label>:45:                                     ; preds = %40
  %46 = load i32, i32* %6, align 4
  %47 = sext i32 %46 to i64
  %48 = mul i64 %47, 8
  %49 = call i8* @_Znam(i64 %48) #15
  %50 = bitcast i8* %49 to %struct.char_array*
  store %struct.char_array* %50, %struct.char_array** %9, align 8
  %51 = load %struct.char_array*, %struct.char_array** %9, align 8
  %52 = icmp ne %struct.char_array* %51, null
  br i1 %52, label %54, label %53

; <label>:53:                                     ; preds = %45
  store i1 false, i1* %4, align 1
  br label %96

; <label>:54:                                     ; preds = %45
  %55 = load %struct.char_array*, %struct.char_array** %9, align 8
  %56 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %10, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds %struct.char_array, %struct.char_array* %55, i64 %58
  %60 = bitcast %struct.char_array* %59 to i8*
  %61 = load i32, i32* %6, align 4
  %62 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %10, i32 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = sub nsw i32 %61, %63
  %65 = sext i32 %64 to i64
  call void @_ZN18sized_array_memoryILm8EE13mark_noaccessEPvm(i8* %60, i64 %65)
  %66 = load %struct.char_array*, %struct.char_array** %9, align 8
  %67 = bitcast %struct.char_array* %66 to i8*
  %68 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %10, i32 0, i32 0
  %69 = load %struct.char_array*, %struct.char_array** %68, align 8
  %70 = bitcast %struct.char_array* %69 to i8*
  %71 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %10, i32 0, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = sext i32 %72 to i64
  call void @_ZN18sized_array_memoryILm8EE4moveEPvPKvm(i8* %67, i8* %70, i64 %73)
  %74 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %10, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = sext i32 %75 to i64
  %77 = mul i64 %76, 8
  %78 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %10, i32 0, i32 0
  %79 = load %struct.char_array*, %struct.char_array** %78, align 8
  %80 = bitcast %struct.char_array* %79 to i8*
  %81 = icmp eq i8* %80, null
  br i1 %81, label %83, label %82

; <label>:82:                                     ; preds = %54
  call void @_ZdaPv(i8* %80) #14
  br label %83

; <label>:83:                                     ; preds = %82, %54
  %84 = load %struct.char_array*, %struct.char_array** %9, align 8
  %85 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %10, i32 0, i32 0
  store %struct.char_array* %84, %struct.char_array** %85, align 8
  %86 = load i32, i32* %6, align 4
  %87 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %10, i32 0, i32 2
  store i32 %86, i32* %87, align 4
  br label %88

; <label>:88:                                     ; preds = %83, %40
  %89 = load %struct.char_array*, %struct.char_array** %7, align 8
  %90 = icmp ne %struct.char_array* %89, null
  %91 = xor i1 %90, true
  %92 = xor i1 %91, true
  br i1 %92, label %93, label %95

; <label>:93:                                     ; preds = %88
  %94 = load %struct.char_array*, %struct.char_array** %7, align 8
  call void @_ZN13vector_memoryI18sized_array_memoryILm8EEE9push_backEPK10char_arrayILm8EE(%class.vector_memory* %10, %struct.char_array* %94)
  br label %95

; <label>:95:                                     ; preds = %93, %88
  store i1 true, i1* %4, align 1
  br label %96

; <label>:96:                                     ; preds = %95, %53, %20
  %97 = load i1, i1* %4, align 1
  ret i1 %97
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr zeroext i1 @_ZNK13vector_memoryI18sized_array_memoryILm8EEE18need_argument_copyEPK10char_arrayILm8EE(%class.vector_memory*, %struct.char_array*) #0 comdat align 2 {
  %3 = alloca %class.vector_memory*, align 8
  %4 = alloca %struct.char_array*, align 8
  store %class.vector_memory* %0, %class.vector_memory** %3, align 8
  store %struct.char_array* %1, %struct.char_array** %4, align 8
  %5 = load %class.vector_memory*, %class.vector_memory** %3, align 8
  ret i1 false
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN18sized_array_memoryILm8EE4moveEPvPKvm(i8*, i8*, i64) #0 comdat align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load i64, i64* %6, align 8
  %8 = icmp ne i64 %7, 0
  br i1 %8, label %9, label %14

; <label>:9:                                      ; preds = %3
  %10 = load i8*, i8** %4, align 8
  %11 = load i8*, i8** %5, align 8
  %12 = load i64, i64* %6, align 8
  %13 = mul i64 %12, 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %10, i8* %11, i64 %13, i32 1, i1 false)
  br label %14

; <label>:14:                                     ; preds = %9, %3
  ret void
}

declare i32 @_Z11click_qsortPvmmPFiPKvS1_S_ES_(i8*, i64, i64, i32 (i8*, i8*, i8*)*, i8*) #3

; Function Attrs: noinline optnone uwtable
define linkonce_odr i32 @_Z13click_compareIN6Router10ConnectionEEiPKvS3_Pv(i8*, i8*, i8*) #2 comdat {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %"struct.Router::Connection"*, align 8
  %8 = alloca %"struct.Router::Connection"*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load i8*, i8** %4, align 8
  %10 = bitcast i8* %9 to %"struct.Router::Connection"*
  store %"struct.Router::Connection"* %10, %"struct.Router::Connection"** %7, align 8
  %11 = load i8*, i8** %5, align 8
  %12 = bitcast i8* %11 to %"struct.Router::Connection"*
  store %"struct.Router::Connection"* %12, %"struct.Router::Connection"** %8, align 8
  %13 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %7, align 8
  %14 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %8, align 8
  %15 = call zeroext i1 @_ZNK6Router10ConnectionltERKS0_(%"struct.Router::Connection"* %13, %"struct.Router::Connection"* dereferenceable(16) %14)
  br i1 %15, label %16, label %17

; <label>:16:                                     ; preds = %3
  br label %23

; <label>:17:                                     ; preds = %3
  %18 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %8, align 8
  %19 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %7, align 8
  %20 = call zeroext i1 @_ZNK6Router10ConnectionltERKS0_(%"struct.Router::Connection"* %18, %"struct.Router::Connection"* dereferenceable(16) %19)
  %21 = zext i1 %20 to i64
  %22 = select i1 %20, i32 1, i32 0
  br label %23

; <label>:23:                                     ; preds = %17, %16
  %24 = phi i32 [ -1, %16 ], [ %22, %17 ]
  ret i32 %24
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr zeroext i1 @_ZNK6Router10ConnectionltERKS0_(%"struct.Router::Connection"*, %"struct.Router::Connection"* dereferenceable(16)) #2 comdat align 2 {
  %3 = alloca %"struct.Router::Connection"*, align 8
  %4 = alloca %"struct.Router::Connection"*, align 8
  store %"struct.Router::Connection"* %0, %"struct.Router::Connection"** %3, align 8
  store %"struct.Router::Connection"* %1, %"struct.Router::Connection"** %4, align 8
  %5 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %3, align 8
  %6 = getelementptr inbounds %"struct.Router::Connection", %"struct.Router::Connection"* %5, i32 0, i32 0
  %7 = getelementptr inbounds [2 x %"struct.Router::Port"], [2 x %"struct.Router::Port"]* %6, i64 0, i64 0
  %8 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %4, align 8
  %9 = getelementptr inbounds %"struct.Router::Connection", %"struct.Router::Connection"* %8, i32 0, i32 0
  %10 = getelementptr inbounds [2 x %"struct.Router::Port"], [2 x %"struct.Router::Port"]* %9, i64 0, i64 0
  %11 = call zeroext i1 @_ZNK6Router4PortltERKS0_(%"struct.Router::Port"* %7, %"struct.Router::Port"* dereferenceable(8) %10)
  br i1 %11, label %28, label %12

; <label>:12:                                     ; preds = %2
  %13 = getelementptr inbounds %"struct.Router::Connection", %"struct.Router::Connection"* %5, i32 0, i32 0
  %14 = getelementptr inbounds [2 x %"struct.Router::Port"], [2 x %"struct.Router::Port"]* %13, i64 0, i64 0
  %15 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %4, align 8
  %16 = getelementptr inbounds %"struct.Router::Connection", %"struct.Router::Connection"* %15, i32 0, i32 0
  %17 = getelementptr inbounds [2 x %"struct.Router::Port"], [2 x %"struct.Router::Port"]* %16, i64 0, i64 0
  %18 = call zeroext i1 @_ZNK6Router4PorteqERKS0_(%"struct.Router::Port"* %14, %"struct.Router::Port"* dereferenceable(8) %17)
  br i1 %18, label %19, label %26

; <label>:19:                                     ; preds = %12
  %20 = getelementptr inbounds %"struct.Router::Connection", %"struct.Router::Connection"* %5, i32 0, i32 0
  %21 = getelementptr inbounds [2 x %"struct.Router::Port"], [2 x %"struct.Router::Port"]* %20, i64 0, i64 1
  %22 = load %"struct.Router::Connection"*, %"struct.Router::Connection"** %4, align 8
  %23 = getelementptr inbounds %"struct.Router::Connection", %"struct.Router::Connection"* %22, i32 0, i32 0
  %24 = getelementptr inbounds [2 x %"struct.Router::Port"], [2 x %"struct.Router::Port"]* %23, i64 0, i64 1
  %25 = call zeroext i1 @_ZNK6Router4PortltERKS0_(%"struct.Router::Port"* %21, %"struct.Router::Port"* dereferenceable(8) %24)
  br label %26

; <label>:26:                                     ; preds = %19, %12
  %27 = phi i1 [ false, %12 ], [ %25, %19 ]
  br label %28

; <label>:28:                                     ; preds = %26, %2
  %29 = phi i1 [ true, %2 ], [ %27, %26 ]
  ret i1 %29
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr zeroext i1 @_ZNK6Router4PortltERKS0_(%"struct.Router::Port"*, %"struct.Router::Port"* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.Router::Port"*, align 8
  %4 = alloca %"struct.Router::Port"*, align 8
  store %"struct.Router::Port"* %0, %"struct.Router::Port"** %3, align 8
  store %"struct.Router::Port"* %1, %"struct.Router::Port"** %4, align 8
  %5 = load %"struct.Router::Port"*, %"struct.Router::Port"** %3, align 8
  %6 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %5, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = load %"struct.Router::Port"*, %"struct.Router::Port"** %4, align 8
  %9 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %8, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %7, %10
  br i1 %11, label %28, label %12

; <label>:12:                                     ; preds = %2
  %13 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %5, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = load %"struct.Router::Port"*, %"struct.Router::Port"** %4, align 8
  %16 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %15, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %14, %17
  br i1 %18, label %19, label %26

; <label>:19:                                     ; preds = %12
  %20 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %5, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = load %"struct.Router::Port"*, %"struct.Router::Port"** %4, align 8
  %23 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %22, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %21, %24
  br label %26

; <label>:26:                                     ; preds = %19, %12
  %27 = phi i1 [ false, %12 ], [ %25, %19 ]
  br label %28

; <label>:28:                                     ; preds = %26, %2
  %29 = phi i1 [ true, %2 ], [ %27, %26 ]
  ret i1 %29
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr zeroext i1 @_ZNK6Router4PorteqERKS0_(%"struct.Router::Port"*, %"struct.Router::Port"* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.Router::Port"*, align 8
  %4 = alloca %"struct.Router::Port"*, align 8
  store %"struct.Router::Port"* %0, %"struct.Router::Port"** %3, align 8
  store %"struct.Router::Port"* %1, %"struct.Router::Port"** %4, align 8
  %5 = load %"struct.Router::Port"*, %"struct.Router::Port"** %3, align 8
  %6 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %5, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = load %"struct.Router::Port"*, %"struct.Router::Port"** %4, align 8
  %9 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %8, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %7, %10
  br i1 %11, label %12, label %19

; <label>:12:                                     ; preds = %2
  %13 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %5, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = load %"struct.Router::Port"*, %"struct.Router::Port"** %4, align 8
  %16 = getelementptr inbounds %"struct.Router::Port", %"struct.Router::Port"* %15, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %14, %17
  br label %19

; <label>:19:                                     ; preds = %12, %2
  %20 = phi i1 [ false, %2 ], [ %18, %12 ]
  ret i1 %20
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr %struct.char_array* @_ZN13vector_memoryI18sized_array_memoryILm8EEE6insertEP10char_arrayILm8EEPKS4_(%class.vector_memory*, %struct.char_array*, %struct.char_array*) #2 comdat align 2 {
  %4 = alloca %struct.char_array*, align 8
  %5 = alloca %class.vector_memory*, align 8
  %6 = alloca %struct.char_array*, align 8
  %7 = alloca %struct.char_array*, align 8
  %8 = alloca %struct.char_array, align 1
  %9 = alloca i32, align 4
  store %class.vector_memory* %0, %class.vector_memory** %5, align 8
  store %struct.char_array* %1, %struct.char_array** %6, align 8
  store %struct.char_array* %2, %struct.char_array** %7, align 8
  %10 = load %class.vector_memory*, %class.vector_memory** %5, align 8
  %11 = load %struct.char_array*, %struct.char_array** %6, align 8
  %12 = call %struct.char_array* @_ZN13vector_memoryI18sized_array_memoryILm8EEE5beginEv(%class.vector_memory* %10)
  %13 = icmp uge %struct.char_array* %11, %12
  br i1 %13, label %14, label %18

; <label>:14:                                     ; preds = %3
  %15 = load %struct.char_array*, %struct.char_array** %6, align 8
  %16 = call %struct.char_array* @_ZN13vector_memoryI18sized_array_memoryILm8EEE3endEv(%class.vector_memory* %10)
  %17 = icmp ule %struct.char_array* %15, %16
  br label %18

; <label>:18:                                     ; preds = %14, %3
  %19 = phi i1 [ false, %3 ], [ %17, %14 ]
  br i1 %19, label %20, label %21

; <label>:20:                                     ; preds = %18
  br label %23

; <label>:21:                                     ; preds = %18
  call void @__assert_fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.140, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.138, i32 0, i32 0), i32 64, i8* getelementptr inbounds ([166 x i8], [166 x i8]* @__PRETTY_FUNCTION__._ZN13vector_memoryI18sized_array_memoryILm8EEE6insertEP10char_arrayILm8EEPKS4_, i32 0, i32 0)) #12
  unreachable
                                                  ; No predecessors!
  br label %23

; <label>:23:                                     ; preds = %22, %20
  %24 = load %struct.char_array*, %struct.char_array** %7, align 8
  %25 = call zeroext i1 @_ZNK13vector_memoryI18sized_array_memoryILm8EEE18need_argument_copyEPK10char_arrayILm8EE(%class.vector_memory* %10, %struct.char_array* %24)
  %26 = xor i1 %25, true
  %27 = xor i1 %26, true
  br i1 %27, label %28, label %34

; <label>:28:                                     ; preds = %23
  %29 = load %struct.char_array*, %struct.char_array** %7, align 8
  %30 = bitcast %struct.char_array* %8 to i8*
  %31 = bitcast %struct.char_array* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 8, i32 1, i1 false)
  %32 = load %struct.char_array*, %struct.char_array** %6, align 8
  %33 = call %struct.char_array* @_ZN13vector_memoryI18sized_array_memoryILm8EEE6insertEP10char_arrayILm8EEPKS4_(%class.vector_memory* %10, %struct.char_array* %32, %struct.char_array* %8)
  store %struct.char_array* %33, %struct.char_array** %4, align 8
  br label %85

; <label>:34:                                     ; preds = %23
  %35 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %10, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %10, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %36, %38
  br i1 %39, label %40, label %56

; <label>:40:                                     ; preds = %34
  %41 = load %struct.char_array*, %struct.char_array** %6, align 8
  %42 = call %struct.char_array* @_ZN13vector_memoryI18sized_array_memoryILm8EEE5beginEv(%class.vector_memory* %10)
  %43 = ptrtoint %struct.char_array* %41 to i64
  %44 = ptrtoint %struct.char_array* %42 to i64
  %45 = sub i64 %43, %44
  %46 = sdiv exact i64 %45, 8
  %47 = trunc i64 %46 to i32
  store i32 %47, i32* %9, align 4
  %48 = call zeroext i1 @_ZN13vector_memoryI18sized_array_memoryILm8EEE21reserve_and_push_backEiPK10char_arrayILm8EE(%class.vector_memory* %10, i32 -1, %struct.char_array* null)
  br i1 %48, label %51, label %49

; <label>:49:                                     ; preds = %40
  %50 = call %struct.char_array* @_ZN13vector_memoryI18sized_array_memoryILm8EEE3endEv(%class.vector_memory* %10)
  store %struct.char_array* %50, %struct.char_array** %4, align 8
  br label %85

; <label>:51:                                     ; preds = %40
  %52 = call %struct.char_array* @_ZN13vector_memoryI18sized_array_memoryILm8EEE5beginEv(%class.vector_memory* %10)
  %53 = load i32, i32* %9, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %struct.char_array, %struct.char_array* %52, i64 %54
  store %struct.char_array* %55, %struct.char_array** %6, align 8
  br label %56

; <label>:56:                                     ; preds = %51, %34
  %57 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %10, i32 0, i32 0
  %58 = load %struct.char_array*, %struct.char_array** %57, align 8
  %59 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %10, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds %struct.char_array, %struct.char_array* %58, i64 %61
  %63 = bitcast %struct.char_array* %62 to i8*
  call void @_ZN18sized_array_memoryILm8EE14mark_undefinedEPvm(i8* %63, i64 1)
  %64 = load %struct.char_array*, %struct.char_array** %6, align 8
  %65 = getelementptr inbounds %struct.char_array, %struct.char_array* %64, i64 1
  %66 = bitcast %struct.char_array* %65 to i8*
  %67 = load %struct.char_array*, %struct.char_array** %6, align 8
  %68 = bitcast %struct.char_array* %67 to i8*
  %69 = call %struct.char_array* @_ZN13vector_memoryI18sized_array_memoryILm8EEE3endEv(%class.vector_memory* %10)
  %70 = load %struct.char_array*, %struct.char_array** %6, align 8
  %71 = ptrtoint %struct.char_array* %69 to i64
  %72 = ptrtoint %struct.char_array* %70 to i64
  %73 = sub i64 %71, %72
  %74 = sdiv exact i64 %73, 8
  call void @_ZN18sized_array_memoryILm8EE4moveEPvPKvm(i8* %66, i8* %68, i64 %74)
  %75 = load %struct.char_array*, %struct.char_array** %6, align 8
  %76 = bitcast %struct.char_array* %75 to i8*
  call void @_ZN18sized_array_memoryILm8EE14mark_undefinedEPvm(i8* %76, i64 1)
  %77 = load %struct.char_array*, %struct.char_array** %6, align 8
  %78 = bitcast %struct.char_array* %77 to i8*
  %79 = load %struct.char_array*, %struct.char_array** %7, align 8
  %80 = bitcast %struct.char_array* %79 to i8*
  call void @_ZN18sized_array_memoryILm8EE4fillEPvmPKv(i8* %78, i64 1, i8* %80)
  %81 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %10, i32 0, i32 1
  %82 = load i32, i32* %81, align 8
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %81, align 8
  %84 = load %struct.char_array*, %struct.char_array** %6, align 8
  store %struct.char_array* %84, %struct.char_array** %4, align 8
  br label %85

; <label>:85:                                     ; preds = %56, %49, %28
  %86 = load %struct.char_array*, %struct.char_array** %4, align 8
  ret %struct.char_array* %86
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr %struct.char_array* @_ZN18sized_array_memoryILm8EE4castIPN5Lexer9TunnelEndEEEP10char_arrayILm8EEPT_(%"class.Lexer::TunnelEnd"**) #0 comdat align 2 {
  %2 = alloca %"class.Lexer::TunnelEnd"**, align 8
  store %"class.Lexer::TunnelEnd"** %0, %"class.Lexer::TunnelEnd"*** %2, align 8
  %3 = load %"class.Lexer::TunnelEnd"**, %"class.Lexer::TunnelEnd"*** %2, align 8
  %4 = bitcast %"class.Lexer::TunnelEnd"** %3 to %struct.char_array*
  ret %struct.char_array* %4
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr %struct.char_array* @_ZN13vector_memoryI18sized_array_memoryILm8EEE5beginEv(%class.vector_memory*) #0 comdat align 2 {
  %2 = alloca %class.vector_memory*, align 8
  store %class.vector_memory* %0, %class.vector_memory** %2, align 8
  %3 = load %class.vector_memory*, %class.vector_memory** %2, align 8
  %4 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %3, i32 0, i32 0
  %5 = load %struct.char_array*, %struct.char_array** %4, align 8
  ret %struct.char_array* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr %struct.char_array* @_ZN13vector_memoryI18sized_array_memoryILm8EEE3endEv(%class.vector_memory*) #0 comdat align 2 {
  %2 = alloca %class.vector_memory*, align 8
  store %class.vector_memory* %0, %class.vector_memory** %2, align 8
  %3 = load %class.vector_memory*, %class.vector_memory** %2, align 8
  %4 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %3, i32 0, i32 0
  %5 = load %struct.char_array*, %struct.char_array** %4, align 8
  %6 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %3, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds %struct.char_array, %struct.char_array* %5, i64 %8
  ret %struct.char_array* %9
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN13vector_memoryI18sized_array_memoryILm8EEE4swapERS2_(%class.vector_memory*, %class.vector_memory* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %class.vector_memory*, align 8
  %4 = alloca %class.vector_memory*, align 8
  %5 = alloca %struct.char_array*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %class.vector_memory* %0, %class.vector_memory** %3, align 8
  store %class.vector_memory* %1, %class.vector_memory** %4, align 8
  %8 = load %class.vector_memory*, %class.vector_memory** %3, align 8
  %9 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %8, i32 0, i32 0
  %10 = load %struct.char_array*, %struct.char_array** %9, align 8
  store %struct.char_array* %10, %struct.char_array** %5, align 8
  %11 = load %class.vector_memory*, %class.vector_memory** %4, align 8
  %12 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %11, i32 0, i32 0
  %13 = load %struct.char_array*, %struct.char_array** %12, align 8
  %14 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %8, i32 0, i32 0
  store %struct.char_array* %13, %struct.char_array** %14, align 8
  %15 = load %struct.char_array*, %struct.char_array** %5, align 8
  %16 = load %class.vector_memory*, %class.vector_memory** %4, align 8
  %17 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %16, i32 0, i32 0
  store %struct.char_array* %15, %struct.char_array** %17, align 8
  %18 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %8, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %6, align 4
  %20 = load %class.vector_memory*, %class.vector_memory** %4, align 8
  %21 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %20, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %8, i32 0, i32 1
  store i32 %22, i32* %23, align 8
  %24 = load i32, i32* %6, align 4
  %25 = load %class.vector_memory*, %class.vector_memory** %4, align 8
  %26 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %25, i32 0, i32 1
  store i32 %24, i32* %26, align 8
  %27 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %8, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %7, align 4
  %29 = load %class.vector_memory*, %class.vector_memory** %4, align 8
  %30 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %29, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %8, i32 0, i32 2
  store i32 %31, i32* %32, align 4
  %33 = load i32, i32* %7, align 4
  %34 = load %class.vector_memory*, %class.vector_memory** %4, align 8
  %35 = getelementptr inbounds %class.vector_memory, %class.vector_memory* %34, i32 0, i32 2
  store i32 %33, i32* %35, align 4
  ret void
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { argmemonly nounwind }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { builtin nounwind }
attributes #15 = { builtin }
attributes #16 = { nounwind readnone }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"}
!2 = !{i32 998852}
