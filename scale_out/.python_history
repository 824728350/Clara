exit()
import pyshark
exit()
from IPython.lib import passwd
exit()
from IPython.lib import passwd
passwd()
exit()
import problog
exit()
import keras
exit()
import pycparser
exit()
import numpy as np
from xgboostextension import XGBRanker
CASE_NUM = 20
GROUPS_NUM = 4
if CASE_NUM % GROUPS_NUM != 0:
    raise ValueError('Cases should be splittable into equal groups.')
EOF
if CASE_NUM % GROUPS_NUM != 0:
    raise ValueError('Cases should be splittable into equal groups.')
X_features = np.random.rand(CASE_NUM, 4)
y = np.random.randint(5, size=CASE_NUM)
X_groups = np.arange(0, GROUPS_NUM).repeat(CASE_NUM/GROUPS_NUM)
print("X="+str(X_features))
print("y="+str(y))
X = np.concatenate([X_groups[:,None], X_features], axis=1)
print("X="+str(X))
ranker = XGBRanker(n_estimators=150, learning_rate=0.1, subsample=0.9)
ranker.fit(X, y, eval_metric=['ndcg', 'map@5-'])
ranker.fit(X, y, eval_metric=['ndcg'])
ranker.fit(X, y)
exit
